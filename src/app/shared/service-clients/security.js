/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming
import { __decorate, __extends, __metadata, __param, __values } from "tslib";
import 'rxjs/add/observable/fromPromise';
import 'rxjs/add/observable/of';
import 'rxjs/add/observable/throw';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import 'rxjs/add/operator/mergeMap';
import 'rxjs/add/operator/catch';
import { Observable } from 'rxjs/Observable';
import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';
export var SECURITY_API_BASE_URL = new InjectionToken('SECURITY_API_BASE_URL');
var ServiceBaseConfig = /** @class */ (function () {
    function ServiceBaseConfig() {
    }
    return ServiceBaseConfig;
}());
export { ServiceBaseConfig };
var ServiceBase = /** @class */ (function () {
    function ServiceBase(config) {
        this.apimHeaderName = 'Ocp-Apim-Subscription-Key';
        this.tenantIdHeaderName = 'TenantId';
        this.tenantIdLocalStorageKey = 'samplicity-dtp-current-client';
        this.idTokenKey = 'samplicity-id-token';
        this.apiKey = config.key;
    }
    ServiceBase.prototype.transformOptions = function (options) {
        var headers = options.headers;
        if (this.apiKey) {
            headers = headers.append(this.apimHeaderName, this.apiKey);
        }
        var tenantId = sessionStorage.getItem(this.tenantIdLocalStorageKey);
        if (tenantId) {
            headers = headers.append(this.tenantIdHeaderName, tenantId);
        }
        var token = localStorage.getItem(this.idTokenKey);
        if (token) {
            headers = headers.append('Authorization', 'Bearer ' + token);
        }
        options.headers = headers;
        return Promise.resolve(options);
    };
    return ServiceBase;
}());
export { ServiceBase };
var Security = /** @class */ (function (_super) {
    __extends(Security, _super);
    function Security(configuration, http, baseUrl) {
        var _this = _super.call(this, configuration) || this;
        _this.jsonParseReviver = undefined;
        _this.http = http;
        _this.baseUrl = baseUrl ? baseUrl : "";
        return _this;
    }
    /**
     * @param includeInternal (optional)
     * @return Success
     */
    Security.prototype.getPermissions = function (includeInternal) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Permission/GetPermissions?";
        if (includeInternal !== undefined && includeInternal !== null)
            url_ += "includeInternal=" + encodeURIComponent("" + includeInternal) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetPermissions(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetPermissions(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processGetPermissions = function (response) {
        var e_1, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfPermissionDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param id (optional)
     * @return Success
     */
    Security.prototype.getRoleById = function (id) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Role/GetRoleById?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetRoleById(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetRoleById(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processGetRoleById = function (response) {
        var e_2, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfRoleDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Security.prototype.getNewRole = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Role/GetNewRole";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetNewRole(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetNewRole(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processGetNewRole = function (response) {
        var e_3, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfRoleDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param filter (optional)
     * @return Success
     */
    Security.prototype.searchRoles = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Role/SearchRoles";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchRoles(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchRoles(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processSearchRoles = function (response) {
        var e_4, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfRoleSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Security.prototype.getRoles = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Role/GetRoles";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetRoles(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetRoles(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processGetRoles = function (response) {
        var e_5, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIReadOnlyListOfRoleSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param filter (optional)
     * @return Success
     */
    Security.prototype.searchActiveUserEmailsForRole = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Role/SearchActiveUserEmailsForRole";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchActiveUserEmailsForRole(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchActiveUserEmailsForRole(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processSearchActiveUserEmailsForRole = function (response) {
        var e_6, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfActiveUserSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param filter (optional)
     * @return Success
     */
    Security.prototype.searchPermissionsForRole = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Role/SearchPermissionsForRole";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchPermissionsForRole(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchPermissionsForRole(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processSearchPermissionsForRole = function (response) {
        var e_7, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfPermissionSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param roleDto (optional)
     * @return Success
     */
    Security.prototype.createRole = function (roleDto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Role/CreateRole";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(roleDto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processCreateRole(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processCreateRole(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processCreateRole = function (response) {
        var e_8, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfRoleDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param roleDto (optional)
     * @return Success
     */
    Security.prototype.updateRole = function (roleDto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Role/UpdateRole";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(roleDto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("put", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processUpdateRole(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processUpdateRole(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processUpdateRole = function (response) {
        var e_9, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_9) throw e_9.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfRoleDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param roleId (optional)
     * @return Success
     */
    Security.prototype.deleteRole = function (roleId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Role/DeleteRole?";
        if (roleId !== undefined && roleId !== null)
            url_ += "roleId=" + encodeURIComponent("" + roleId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({})
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("delete", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processDeleteRole(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processDeleteRole(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processDeleteRole = function (response) {
        var e_10, _a;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_10_1) { e_10 = { error: e_10_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_10) throw e_10.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return Observable.of(null);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param username (optional)
     * @return Success
     */
    Security.prototype.getUserAccess = function (username) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Security/GetUserAccess?";
        if (username !== undefined && username !== null)
            url_ += "username=" + encodeURIComponent("" + username) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetUserAccess(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetUserAccess(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processGetUserAccess = function (response) {
        var e_11, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_11_1) { e_11 = { error: e_11_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_11) throw e_11.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfUserAccessDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param filter (optional)
     * @return Success
     */
    Security.prototype.searchUsers = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/User/SearchUsers";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchUsers(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchUsers(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processSearchUsers = function (response) {
        var e_12, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_12_1) { e_12 = { error: e_12_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_12) throw e_12.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfUserSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param filter (optional)
     * @return Success
     */
    Security.prototype.searchClientsForUser = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/User/SearchClientsForUser";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchClientsForUser(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchClientsForUser(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processSearchClientsForUser = function (response) {
        var e_13, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_13_1) { e_13 = { error: e_13_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_13) throw e_13.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfUserClientSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param id (optional)
     * @return Success
     */
    Security.prototype.getUserById = function (id) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/User/GetUserById?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetUserById(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetUserById(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processGetUserById = function (response) {
        var e_14, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_14_1) { e_14 = { error: e_14_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_14) throw e_14.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfUserDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param activeDirectoryUserId (optional)
     * @return Success
     */
    Security.prototype.getNewUser = function (activeDirectoryUserId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/User/GetNewUser?";
        if (activeDirectoryUserId !== undefined && activeDirectoryUserId !== null)
            url_ += "activeDirectoryUserId=" + encodeURIComponent("" + activeDirectoryUserId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetNewUser(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetNewUser(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processGetNewUser = function (response) {
        var e_15, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_15_1) { e_15 = { error: e_15_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_15) throw e_15.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfUserDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param userDto (optional)
     * @return Success
     */
    Security.prototype.createUser = function (userDto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/User/CreateUser";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(userDto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processCreateUser(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processCreateUser(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processCreateUser = function (response) {
        var e_16, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_16_1) { e_16 = { error: e_16_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_16) throw e_16.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfUserDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param userDto (optional)
     * @return Success
     */
    Security.prototype.updateUser = function (userDto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/User/UpdateUser";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(userDto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("put", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processUpdateUser(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processUpdateUser(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processUpdateUser = function (response) {
        var e_17, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_17_1) { e_17 = { error: e_17_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_17) throw e_17.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfUserDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param filter (optional)
     * @return Success
     */
    Security.prototype.searchActiveDirectoryUsers = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/User/SearchActiveDirectoryUsers";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchActiveDirectoryUsers(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchActiveDirectoryUsers(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processSearchActiveDirectoryUsers = function (response) {
        var e_18, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_18_1) { e_18 = { error: e_18_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_18) throw e_18.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfActiveDirectoryUserSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Security.prototype.getUsers = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/User/GetUsers";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetUsers(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetUsers(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processGetUsers = function (response) {
        var e_19, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_19_1) { e_19 = { error: e_19_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_19) throw e_19.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfListOfUserLoginDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Security.prototype.getUserProfiles = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/User/GetUserProfiles";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetUserProfiles(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetUserProfiles(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processGetUserProfiles = function (response) {
        var e_20, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_20_1) { e_20 = { error: e_20_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_20) throw e_20.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfListOfUserProfileDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param userLogDto (optional)
     * @return Success
     */
    Security.prototype.logUserSession = function (userLogDto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/User/LogUserSession";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(userLogDto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processLogUserSession(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processLogUserSession(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Security.prototype.processLogUserSession = function (response) {
        var e_21, _a;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_21_1) { e_21 = { error: e_21_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_21) throw e_21.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return Observable.of(null);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    Security = __decorate([
        Injectable(),
        __param(0, Inject(ServiceBaseConfig)), __param(1, Inject(HttpClient)), __param(2, Optional()), __param(2, Inject(SECURITY_API_BASE_URL)),
        __metadata("design:paramtypes", [ServiceBaseConfig, HttpClient, String])
    ], Security);
    return Security;
}(ServiceBase));
export { Security };
var AjaxResponseOfIListOfPermissionDto = /** @class */ (function () {
    function AjaxResponseOfIListOfPermissionDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfPermissionDto.prototype.init = function (_data) {
        var e_22, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(PermissionDto.fromJS(item));
                    }
                }
                catch (e_22_1) { e_22 = { error: e_22_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_22) throw e_22.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfIListOfPermissionDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfPermissionDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfPermissionDto.prototype.toJSON = function (data) {
        var e_23, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_23_1) { e_23 = { error: e_23_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_23) throw e_23.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfPermissionDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfPermissionDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfPermissionDto;
}());
export { AjaxResponseOfIListOfPermissionDto };
var PermissionDto = /** @class */ (function () {
    function PermissionDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PermissionDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.displayName = _data["displayName"];
            this.internalSystemFlag = _data["internalSystemFlag"];
        }
    };
    PermissionDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PermissionDto();
        result.init(data);
        return result;
    };
    PermissionDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["displayName"] = this.displayName;
        data["internalSystemFlag"] = this.internalSystemFlag;
        return data;
    };
    PermissionDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PermissionDto();
        result.init(json);
        return result;
    };
    return PermissionDto;
}());
export { PermissionDto };
var ErrorInfo = /** @class */ (function () {
    function ErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ErrorInfo.prototype.init = function (_data) {
        var e_24, _a;
        if (_data) {
            this.code = _data["code"];
            this.message = _data["message"];
            this.details = _data["details"];
            if (Array.isArray(_data["validationErrors"])) {
                this.validationErrors = [];
                try {
                    for (var _b = __values(_data["validationErrors"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.validationErrors.push(ValidationErrorInfo.fromJS(item));
                    }
                }
                catch (e_24_1) { e_24 = { error: e_24_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_24) throw e_24.error; }
                }
            }
        }
    };
    ErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ErrorInfo();
        result.init(data);
        return result;
    };
    ErrorInfo.prototype.toJSON = function (data) {
        var e_25, _a;
        data = typeof data === 'object' ? data : {};
        data["code"] = this.code;
        data["message"] = this.message;
        data["details"] = this.details;
        if (Array.isArray(this.validationErrors)) {
            data["validationErrors"] = [];
            try {
                for (var _b = __values(this.validationErrors), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["validationErrors"].push(item.toJSON());
                }
            }
            catch (e_25_1) { e_25 = { error: e_25_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_25) throw e_25.error; }
            }
        }
        return data;
    };
    ErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ErrorInfo();
        result.init(json);
        return result;
    };
    return ErrorInfo;
}());
export { ErrorInfo };
var ValidationErrorInfo = /** @class */ (function () {
    function ValidationErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ValidationErrorInfo.prototype.init = function (_data) {
        var e_26, _a;
        if (_data) {
            this.message = _data["message"];
            if (Array.isArray(_data["members"])) {
                this.members = [];
                try {
                    for (var _b = __values(_data["members"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.members.push(item);
                    }
                }
                catch (e_26_1) { e_26 = { error: e_26_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_26) throw e_26.error; }
                }
            }
        }
    };
    ValidationErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValidationErrorInfo();
        result.init(data);
        return result;
    };
    ValidationErrorInfo.prototype.toJSON = function (data) {
        var e_27, _a;
        data = typeof data === 'object' ? data : {};
        data["message"] = this.message;
        if (Array.isArray(this.members)) {
            data["members"] = [];
            try {
                for (var _b = __values(this.members), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["members"].push(item);
                }
            }
            catch (e_27_1) { e_27 = { error: e_27_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_27) throw e_27.error; }
            }
        }
        return data;
    };
    ValidationErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ValidationErrorInfo();
        result.init(json);
        return result;
    };
    return ValidationErrorInfo;
}());
export { ValidationErrorInfo };
var AjaxResponseOfRoleDto = /** @class */ (function () {
    function AjaxResponseOfRoleDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfRoleDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? RoleDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfRoleDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfRoleDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfRoleDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfRoleDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfRoleDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfRoleDto;
}());
export { AjaxResponseOfRoleDto };
var RoleDto = /** @class */ (function () {
    function RoleDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    RoleDto.prototype.init = function (_data) {
        var e_28, _a, e_29, _b;
        if (_data) {
            this.id = _data["id"];
            this.tenantId = _data["tenantId"];
            this.moduleId = _data["moduleId"];
            this.displayName = _data["displayName"];
            this.isSystemAdmin = _data["isSystemAdmin"];
            this.hasAllPermissions = _data["hasAllPermissions"];
            this.hasNoActiveUsers = _data["hasNoActiveUsers"];
            this.name = _data["name"];
            this.description = _data["description"];
            if (Array.isArray(_data["rolePermissions"])) {
                this.rolePermissions = [];
                try {
                    for (var _c = __values(_data["rolePermissions"]), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        this.rolePermissions.push(RolePermissionDto.fromJS(item));
                    }
                }
                catch (e_28_1) { e_28 = { error: e_28_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_28) throw e_28.error; }
                }
            }
            if (Array.isArray(_data["names"])) {
                this.names = [];
                try {
                    for (var _e = __values(_data["names"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_29_1) { e_29 = { error: e_29_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_29) throw e_29.error; }
                }
            }
        }
    };
    RoleDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new RoleDto();
        result.init(data);
        return result;
    };
    RoleDto.prototype.toJSON = function (data) {
        var e_30, _a, e_31, _b;
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["tenantId"] = this.tenantId;
        data["moduleId"] = this.moduleId;
        data["displayName"] = this.displayName;
        data["isSystemAdmin"] = this.isSystemAdmin;
        data["hasAllPermissions"] = this.hasAllPermissions;
        data["hasNoActiveUsers"] = this.hasNoActiveUsers;
        data["name"] = this.name;
        data["description"] = this.description;
        if (Array.isArray(this.rolePermissions)) {
            data["rolePermissions"] = [];
            try {
                for (var _c = __values(this.rolePermissions), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var item = _d.value;
                    data["rolePermissions"].push(item.toJSON());
                }
            }
            catch (e_30_1) { e_30 = { error: e_30_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_30) throw e_30.error; }
            }
        }
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _e = __values(this.names), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_31_1) { e_31 = { error: e_31_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_31) throw e_31.error; }
            }
        }
        return data;
    };
    RoleDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new RoleDto();
        result.init(json);
        return result;
    };
    return RoleDto;
}());
export { RoleDto };
var RolePermissionDto = /** @class */ (function () {
    function RolePermissionDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    RolePermissionDto.prototype.init = function (_data) {
        var e_32, _a;
        if (_data) {
            this.id = _data["id"];
            this.roleId = _data["roleId"];
            this.permissionId = _data["permissionId"];
            if (Array.isArray(_data["names"])) {
                this.names = [];
                try {
                    for (var _b = __values(_data["names"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_32_1) { e_32 = { error: e_32_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_32) throw e_32.error; }
                }
            }
        }
    };
    RolePermissionDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new RolePermissionDto();
        result.init(data);
        return result;
    };
    RolePermissionDto.prototype.toJSON = function (data) {
        var e_33, _a;
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["roleId"] = this.roleId;
        data["permissionId"] = this.permissionId;
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _b = __values(this.names), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_33_1) { e_33 = { error: e_33_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_33) throw e_33.error; }
            }
        }
        return data;
    };
    RolePermissionDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new RolePermissionDto();
        result.init(json);
        return result;
    };
    return RolePermissionDto;
}());
export { RolePermissionDto };
var LocalizedValue = /** @class */ (function () {
    function LocalizedValue(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    LocalizedValue.prototype.init = function (_data) {
        if (_data) {
            this.language = _data["language"];
            this.value = _data["value"];
        }
    };
    LocalizedValue.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new LocalizedValue();
        result.init(data);
        return result;
    };
    LocalizedValue.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["language"] = this.language;
        data["value"] = this.value;
        return data;
    };
    LocalizedValue.prototype.clone = function () {
        var json = this.toJSON();
        var result = new LocalizedValue();
        result.init(json);
        return result;
    };
    return LocalizedValue;
}());
export { LocalizedValue };
var RoleSearchFilterDto = /** @class */ (function () {
    function RoleSearchFilterDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    RoleSearchFilterDto.prototype.init = function (_data) {
        if (_data) {
            this.displayName = _data["displayName"];
            this.roleId = _data["roleId"];
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.sortBy = _data["sortBy"];
            this.filterString = _data["filterString"];
        }
    };
    RoleSearchFilterDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new RoleSearchFilterDto();
        result.init(data);
        return result;
    };
    RoleSearchFilterDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["displayName"] = this.displayName;
        data["roleId"] = this.roleId;
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["sortBy"] = this.sortBy;
        data["filterString"] = this.filterString;
        return data;
    };
    RoleSearchFilterDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new RoleSearchFilterDto();
        result.init(json);
        return result;
    };
    return RoleSearchFilterDto;
}());
export { RoleSearchFilterDto };
var AjaxResponseOfPagedResultOfRoleSearchDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfRoleSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfRoleSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfRoleSearchDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfRoleSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfRoleSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfRoleSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfRoleSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfRoleSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfRoleSearchDto;
}());
export { AjaxResponseOfPagedResultOfRoleSearchDto };
var PagedResultOfRoleSearchDto = /** @class */ (function () {
    function PagedResultOfRoleSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfRoleSearchDto.prototype.init = function (_data) {
        var e_34, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(RoleSearchDto.fromJS(item));
                    }
                }
                catch (e_34_1) { e_34 = { error: e_34_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_34) throw e_34.error; }
                }
            }
        }
    };
    PagedResultOfRoleSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfRoleSearchDto();
        result.init(data);
        return result;
    };
    PagedResultOfRoleSearchDto.prototype.toJSON = function (data) {
        var e_35, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_35_1) { e_35 = { error: e_35_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_35) throw e_35.error; }
            }
        }
        return data;
    };
    PagedResultOfRoleSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfRoleSearchDto();
        result.init(json);
        return result;
    };
    return PagedResultOfRoleSearchDto;
}());
export { PagedResultOfRoleSearchDto };
var RoleSearchDto = /** @class */ (function () {
    function RoleSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    RoleSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.displayName = _data["displayName"];
            this.description = _data["description"];
            this.activeUsersCount = _data["activeUsersCount"];
        }
    };
    RoleSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new RoleSearchDto();
        result.init(data);
        return result;
    };
    RoleSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["displayName"] = this.displayName;
        data["description"] = this.description;
        data["activeUsersCount"] = this.activeUsersCount;
        return data;
    };
    RoleSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new RoleSearchDto();
        result.init(json);
        return result;
    };
    return RoleSearchDto;
}());
export { RoleSearchDto };
var AjaxResponseOfIReadOnlyListOfRoleSearchDto = /** @class */ (function () {
    function AjaxResponseOfIReadOnlyListOfRoleSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIReadOnlyListOfRoleSearchDto.prototype.init = function (_data) {
        var e_36, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(RoleSearchDto.fromJS(item));
                    }
                }
                catch (e_36_1) { e_36 = { error: e_36_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_36) throw e_36.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfIReadOnlyListOfRoleSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIReadOnlyListOfRoleSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIReadOnlyListOfRoleSearchDto.prototype.toJSON = function (data) {
        var e_37, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_37_1) { e_37 = { error: e_37_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_37) throw e_37.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIReadOnlyListOfRoleSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIReadOnlyListOfRoleSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIReadOnlyListOfRoleSearchDto;
}());
export { AjaxResponseOfIReadOnlyListOfRoleSearchDto };
var AjaxResponseOfPagedResultOfActiveUserSearchDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfActiveUserSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfActiveUserSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfActiveUserSearchDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfActiveUserSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfActiveUserSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfActiveUserSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfActiveUserSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfActiveUserSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfActiveUserSearchDto;
}());
export { AjaxResponseOfPagedResultOfActiveUserSearchDto };
var PagedResultOfActiveUserSearchDto = /** @class */ (function () {
    function PagedResultOfActiveUserSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfActiveUserSearchDto.prototype.init = function (_data) {
        var e_38, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(ActiveUserSearchDto.fromJS(item));
                    }
                }
                catch (e_38_1) { e_38 = { error: e_38_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_38) throw e_38.error; }
                }
            }
        }
    };
    PagedResultOfActiveUserSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfActiveUserSearchDto();
        result.init(data);
        return result;
    };
    PagedResultOfActiveUserSearchDto.prototype.toJSON = function (data) {
        var e_39, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_39_1) { e_39 = { error: e_39_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_39) throw e_39.error; }
            }
        }
        return data;
    };
    PagedResultOfActiveUserSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfActiveUserSearchDto();
        result.init(json);
        return result;
    };
    return PagedResultOfActiveUserSearchDto;
}());
export { PagedResultOfActiveUserSearchDto };
var ActiveUserSearchDto = /** @class */ (function () {
    function ActiveUserSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ActiveUserSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.emailAddress = _data["emailAddress"];
        }
    };
    ActiveUserSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ActiveUserSearchDto();
        result.init(data);
        return result;
    };
    ActiveUserSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["emailAddress"] = this.emailAddress;
        return data;
    };
    ActiveUserSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ActiveUserSearchDto();
        result.init(json);
        return result;
    };
    return ActiveUserSearchDto;
}());
export { ActiveUserSearchDto };
var AjaxResponseOfPagedResultOfPermissionSearchDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfPermissionSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfPermissionSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfPermissionSearchDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfPermissionSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfPermissionSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfPermissionSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfPermissionSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfPermissionSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfPermissionSearchDto;
}());
export { AjaxResponseOfPagedResultOfPermissionSearchDto };
var PagedResultOfPermissionSearchDto = /** @class */ (function () {
    function PagedResultOfPermissionSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfPermissionSearchDto.prototype.init = function (_data) {
        var e_40, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(PermissionSearchDto.fromJS(item));
                    }
                }
                catch (e_40_1) { e_40 = { error: e_40_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_40) throw e_40.error; }
                }
            }
        }
    };
    PagedResultOfPermissionSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfPermissionSearchDto();
        result.init(data);
        return result;
    };
    PagedResultOfPermissionSearchDto.prototype.toJSON = function (data) {
        var e_41, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_41_1) { e_41 = { error: e_41_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_41) throw e_41.error; }
            }
        }
        return data;
    };
    PagedResultOfPermissionSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfPermissionSearchDto();
        result.init(json);
        return result;
    };
    return PagedResultOfPermissionSearchDto;
}());
export { PagedResultOfPermissionSearchDto };
var PermissionSearchDto = /** @class */ (function () {
    function PermissionSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PermissionSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.displayName = _data["displayName"];
            this.isGranted = _data["isGranted"];
        }
    };
    PermissionSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PermissionSearchDto();
        result.init(data);
        return result;
    };
    PermissionSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["displayName"] = this.displayName;
        data["isGranted"] = this.isGranted;
        return data;
    };
    PermissionSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PermissionSearchDto();
        result.init(json);
        return result;
    };
    return PermissionSearchDto;
}());
export { PermissionSearchDto };
var AjaxResponseOfUserAccessDto = /** @class */ (function () {
    function AjaxResponseOfUserAccessDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfUserAccessDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? UserAccessDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfUserAccessDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfUserAccessDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfUserAccessDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfUserAccessDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfUserAccessDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfUserAccessDto;
}());
export { AjaxResponseOfUserAccessDto };
var UserAccessDto = /** @class */ (function () {
    function UserAccessDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    UserAccessDto.prototype.init = function (_data) {
        var e_42, _a, e_43, _b;
        if (_data) {
            this.userId = _data["userId"];
            this.username = _data["username"];
            this.name = _data["name"];
            this.roleId = _data["roleId"];
            this.roleName = _data["roleName"];
            this.isActive = _data["isActive"];
            if (Array.isArray(_data["permissions"])) {
                this.permissions = [];
                try {
                    for (var _c = __values(_data["permissions"]), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        this.permissions.push(item);
                    }
                }
                catch (e_42_1) { e_42 = { error: e_42_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_42) throw e_42.error; }
                }
            }
            if (Array.isArray(_data["tenants"])) {
                this.tenants = [];
                try {
                    for (var _e = __values(_data["tenants"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.tenants.push(item);
                    }
                }
                catch (e_43_1) { e_43 = { error: e_43_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_43) throw e_43.error; }
                }
            }
            this.hasAllTenants = _data["hasAllTenants"];
            this.defaultTenantId = _data["defaultTenantId"];
            this.id = _data["id"];
        }
    };
    UserAccessDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new UserAccessDto();
        result.init(data);
        return result;
    };
    UserAccessDto.prototype.toJSON = function (data) {
        var e_44, _a, e_45, _b;
        data = typeof data === 'object' ? data : {};
        data["userId"] = this.userId;
        data["username"] = this.username;
        data["name"] = this.name;
        data["roleId"] = this.roleId;
        data["roleName"] = this.roleName;
        data["isActive"] = this.isActive;
        if (Array.isArray(this.permissions)) {
            data["permissions"] = [];
            try {
                for (var _c = __values(this.permissions), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var item = _d.value;
                    data["permissions"].push(item);
                }
            }
            catch (e_44_1) { e_44 = { error: e_44_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_44) throw e_44.error; }
            }
        }
        if (Array.isArray(this.tenants)) {
            data["tenants"] = [];
            try {
                for (var _e = __values(this.tenants), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["tenants"].push(item);
                }
            }
            catch (e_45_1) { e_45 = { error: e_45_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_45) throw e_45.error; }
            }
        }
        data["hasAllTenants"] = this.hasAllTenants;
        data["defaultTenantId"] = this.defaultTenantId;
        data["id"] = this.id;
        return data;
    };
    UserAccessDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new UserAccessDto();
        result.init(json);
        return result;
    };
    return UserAccessDto;
}());
export { UserAccessDto };
var UserSearchFilterDto = /** @class */ (function () {
    function UserSearchFilterDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    UserSearchFilterDto.prototype.init = function (_data) {
        var e_46, _a, e_47, _b;
        if (_data) {
            this.emailAddress = _data["emailAddress"];
            this.firstName = _data["firstName"];
            this.lastName = _data["lastName"];
            if (Array.isArray(_data["roleIds"])) {
                this.roleIds = [];
                try {
                    for (var _c = __values(_data["roleIds"]), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        this.roleIds.push(item);
                    }
                }
                catch (e_46_1) { e_46 = { error: e_46_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_46) throw e_46.error; }
                }
            }
            this.clientId = _data["clientId"];
            if (Array.isArray(_data["userStatuses"])) {
                this.userStatuses = [];
                try {
                    for (var _e = __values(_data["userStatuses"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.userStatuses.push(item);
                    }
                }
                catch (e_47_1) { e_47 = { error: e_47_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_47) throw e_47.error; }
                }
            }
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.sortBy = _data["sortBy"];
            this.filterString = _data["filterString"];
        }
    };
    UserSearchFilterDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new UserSearchFilterDto();
        result.init(data);
        return result;
    };
    UserSearchFilterDto.prototype.toJSON = function (data) {
        var e_48, _a, e_49, _b;
        data = typeof data === 'object' ? data : {};
        data["emailAddress"] = this.emailAddress;
        data["firstName"] = this.firstName;
        data["lastName"] = this.lastName;
        if (Array.isArray(this.roleIds)) {
            data["roleIds"] = [];
            try {
                for (var _c = __values(this.roleIds), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var item = _d.value;
                    data["roleIds"].push(item);
                }
            }
            catch (e_48_1) { e_48 = { error: e_48_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_48) throw e_48.error; }
            }
        }
        data["clientId"] = this.clientId;
        if (Array.isArray(this.userStatuses)) {
            data["userStatuses"] = [];
            try {
                for (var _e = __values(this.userStatuses), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["userStatuses"].push(item);
                }
            }
            catch (e_49_1) { e_49 = { error: e_49_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_49) throw e_49.error; }
            }
        }
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["sortBy"] = this.sortBy;
        data["filterString"] = this.filterString;
        return data;
    };
    UserSearchFilterDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new UserSearchFilterDto();
        result.init(json);
        return result;
    };
    return UserSearchFilterDto;
}());
export { UserSearchFilterDto };
var AjaxResponseOfPagedResultOfUserSearchDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfUserSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfUserSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfUserSearchDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfUserSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfUserSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfUserSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfUserSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfUserSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfUserSearchDto;
}());
export { AjaxResponseOfPagedResultOfUserSearchDto };
var PagedResultOfUserSearchDto = /** @class */ (function () {
    function PagedResultOfUserSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfUserSearchDto.prototype.init = function (_data) {
        var e_50, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(UserSearchDto.fromJS(item));
                    }
                }
                catch (e_50_1) { e_50 = { error: e_50_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_50) throw e_50.error; }
                }
            }
        }
    };
    PagedResultOfUserSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfUserSearchDto();
        result.init(data);
        return result;
    };
    PagedResultOfUserSearchDto.prototype.toJSON = function (data) {
        var e_51, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_51_1) { e_51 = { error: e_51_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_51) throw e_51.error; }
            }
        }
        return data;
    };
    PagedResultOfUserSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfUserSearchDto();
        result.init(json);
        return result;
    };
    return PagedResultOfUserSearchDto;
}());
export { PagedResultOfUserSearchDto };
var UserSearchDto = /** @class */ (function () {
    function UserSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    UserSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.userProfileId = _data["userProfileId"];
            this.emailAddress = _data["emailAddress"];
            this.name = _data["name"];
            this.roleName = _data["roleName"];
            this.phoneNumber = _data["phoneNumber"];
            this.phoneNumberExtension = _data["phoneNumberExtension"];
            this.activeClientsCount = _data["activeClientsCount"];
            this.isActive = _data["isActive"];
        }
    };
    UserSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new UserSearchDto();
        result.init(data);
        return result;
    };
    UserSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["userProfileId"] = this.userProfileId;
        data["emailAddress"] = this.emailAddress;
        data["name"] = this.name;
        data["roleName"] = this.roleName;
        data["phoneNumber"] = this.phoneNumber;
        data["phoneNumberExtension"] = this.phoneNumberExtension;
        data["activeClientsCount"] = this.activeClientsCount;
        data["isActive"] = this.isActive;
        return data;
    };
    UserSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new UserSearchDto();
        result.init(json);
        return result;
    };
    return UserSearchDto;
}());
export { UserSearchDto };
var UserClientSearchFilterDto = /** @class */ (function () {
    function UserClientSearchFilterDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    UserClientSearchFilterDto.prototype.init = function (_data) {
        if (_data) {
            this.userId = _data["userId"];
            this.includeActiveOnly = _data["includeActiveOnly"];
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.sortBy = _data["sortBy"];
            this.filterString = _data["filterString"];
        }
    };
    UserClientSearchFilterDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new UserClientSearchFilterDto();
        result.init(data);
        return result;
    };
    UserClientSearchFilterDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["userId"] = this.userId;
        data["includeActiveOnly"] = this.includeActiveOnly;
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["sortBy"] = this.sortBy;
        data["filterString"] = this.filterString;
        return data;
    };
    UserClientSearchFilterDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new UserClientSearchFilterDto();
        result.init(json);
        return result;
    };
    return UserClientSearchFilterDto;
}());
export { UserClientSearchFilterDto };
var AjaxResponseOfPagedResultOfUserClientSearchDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfUserClientSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfUserClientSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfUserClientSearchDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfUserClientSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfUserClientSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfUserClientSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfUserClientSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfUserClientSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfUserClientSearchDto;
}());
export { AjaxResponseOfPagedResultOfUserClientSearchDto };
var PagedResultOfUserClientSearchDto = /** @class */ (function () {
    function PagedResultOfUserClientSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfUserClientSearchDto.prototype.init = function (_data) {
        var e_52, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(UserClientSearchDto.fromJS(item));
                    }
                }
                catch (e_52_1) { e_52 = { error: e_52_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_52) throw e_52.error; }
                }
            }
        }
    };
    PagedResultOfUserClientSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfUserClientSearchDto();
        result.init(data);
        return result;
    };
    PagedResultOfUserClientSearchDto.prototype.toJSON = function (data) {
        var e_53, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_53_1) { e_53 = { error: e_53_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_53) throw e_53.error; }
            }
        }
        return data;
    };
    PagedResultOfUserClientSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfUserClientSearchDto();
        result.init(json);
        return result;
    };
    return PagedResultOfUserClientSearchDto;
}());
export { PagedResultOfUserClientSearchDto };
var UserClientSearchDto = /** @class */ (function () {
    function UserClientSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    UserClientSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.clientName = _data["clientName"];
            this.clientId = _data["clientId"];
            this.moduleStatus = _data["moduleStatus"];
            this.isGranted = _data["isGranted"];
        }
    };
    UserClientSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new UserClientSearchDto();
        result.init(data);
        return result;
    };
    UserClientSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["clientName"] = this.clientName;
        data["clientId"] = this.clientId;
        data["moduleStatus"] = this.moduleStatus;
        data["isGranted"] = this.isGranted;
        return data;
    };
    UserClientSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new UserClientSearchDto();
        result.init(json);
        return result;
    };
    return UserClientSearchDto;
}());
export { UserClientSearchDto };
var AjaxResponseOfUserDto = /** @class */ (function () {
    function AjaxResponseOfUserDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfUserDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? UserDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfUserDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfUserDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfUserDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfUserDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfUserDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfUserDto;
}());
export { AjaxResponseOfUserDto };
var UserDto = /** @class */ (function () {
    function UserDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    UserDto.prototype.init = function (_data) {
        var e_54, _a, e_55, _b;
        if (_data) {
            this.id = _data["id"];
            this.roleId = _data["roleId"];
            this.userProfile = _data["userProfile"] ? UserProfileDto.fromJS(_data["userProfile"]) : undefined;
            this.name = _data["name"];
            this.surname = _data["surname"];
            this.emailAddress = _data["emailAddress"];
            this.phoneNumber = _data["phoneNumber"];
            this.isActive = _data["isActive"];
            this.hasAllClients = _data["hasAllClients"];
            if (Array.isArray(_data["userClients"])) {
                this.userClients = [];
                try {
                    for (var _c = __values(_data["userClients"]), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        this.userClients.push(UserClientDto.fromJS(item));
                    }
                }
                catch (e_54_1) { e_54 = { error: e_54_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_54) throw e_54.error; }
                }
            }
            if (Array.isArray(_data["names"])) {
                this.names = [];
                try {
                    for (var _e = __values(_data["names"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_55_1) { e_55 = { error: e_55_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_55) throw e_55.error; }
                }
            }
        }
    };
    UserDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new UserDto();
        result.init(data);
        return result;
    };
    UserDto.prototype.toJSON = function (data) {
        var e_56, _a, e_57, _b;
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["roleId"] = this.roleId;
        data["userProfile"] = this.userProfile ? this.userProfile.toJSON() : undefined;
        data["name"] = this.name;
        data["surname"] = this.surname;
        data["emailAddress"] = this.emailAddress;
        data["phoneNumber"] = this.phoneNumber;
        data["isActive"] = this.isActive;
        data["hasAllClients"] = this.hasAllClients;
        if (Array.isArray(this.userClients)) {
            data["userClients"] = [];
            try {
                for (var _c = __values(this.userClients), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var item = _d.value;
                    data["userClients"].push(item.toJSON());
                }
            }
            catch (e_56_1) { e_56 = { error: e_56_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_56) throw e_56.error; }
            }
        }
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _e = __values(this.names), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_57_1) { e_57 = { error: e_57_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_57) throw e_57.error; }
            }
        }
        return data;
    };
    UserDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new UserDto();
        result.init(json);
        return result;
    };
    return UserDto;
}());
export { UserDto };
var UserProfileDto = /** @class */ (function () {
    function UserProfileDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    UserProfileDto.prototype.init = function (_data) {
        var e_58, _a;
        if (_data) {
            this.id = _data["id"];
            this.userId = _data["userId"];
            this.firstName = _data["firstName"];
            this.middleName = _data["middleName"];
            this.lastName = _data["lastName"];
            this.emailAddressText = _data["emailAddressText"];
            this.phoneNumber = _data["phoneNumber"];
            this.phoneNumberExtension = _data["phoneNumberExtension"];
            this.faxNumber = _data["faxNumber"];
            this.mobilePhoneNumber = _data["mobilePhoneNumber"];
            this.internalFlag = _data["internalFlag"];
            if (Array.isArray(_data["names"])) {
                this.names = [];
                try {
                    for (var _b = __values(_data["names"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_58_1) { e_58 = { error: e_58_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_58) throw e_58.error; }
                }
            }
        }
    };
    UserProfileDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new UserProfileDto();
        result.init(data);
        return result;
    };
    UserProfileDto.prototype.toJSON = function (data) {
        var e_59, _a;
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["userId"] = this.userId;
        data["firstName"] = this.firstName;
        data["middleName"] = this.middleName;
        data["lastName"] = this.lastName;
        data["emailAddressText"] = this.emailAddressText;
        data["phoneNumber"] = this.phoneNumber;
        data["phoneNumberExtension"] = this.phoneNumberExtension;
        data["faxNumber"] = this.faxNumber;
        data["mobilePhoneNumber"] = this.mobilePhoneNumber;
        data["internalFlag"] = this.internalFlag;
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _b = __values(this.names), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_59_1) { e_59 = { error: e_59_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_59) throw e_59.error; }
            }
        }
        return data;
    };
    UserProfileDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new UserProfileDto();
        result.init(json);
        return result;
    };
    return UserProfileDto;
}());
export { UserProfileDto };
var UserClientDto = /** @class */ (function () {
    function UserClientDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    UserClientDto.prototype.init = function (_data) {
        var e_60, _a;
        if (_data) {
            this.id = _data["id"];
            this.userId = _data["userId"];
            this.clientId = _data["clientId"];
            if (Array.isArray(_data["names"])) {
                this.names = [];
                try {
                    for (var _b = __values(_data["names"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_60_1) { e_60 = { error: e_60_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_60) throw e_60.error; }
                }
            }
        }
    };
    UserClientDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new UserClientDto();
        result.init(data);
        return result;
    };
    UserClientDto.prototype.toJSON = function (data) {
        var e_61, _a;
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["userId"] = this.userId;
        data["clientId"] = this.clientId;
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _b = __values(this.names), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_61_1) { e_61 = { error: e_61_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_61) throw e_61.error; }
            }
        }
        return data;
    };
    UserClientDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new UserClientDto();
        result.init(json);
        return result;
    };
    return UserClientDto;
}());
export { UserClientDto };
var ActiveDirectoryUserSearchFilterDto = /** @class */ (function () {
    function ActiveDirectoryUserSearchFilterDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ActiveDirectoryUserSearchFilterDto.prototype.init = function (_data) {
        if (_data) {
            this.emailAddress = _data["emailAddress"];
            this.firstName = _data["firstName"];
            this.lastName = _data["lastName"];
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.sortBy = _data["sortBy"];
            this.filterString = _data["filterString"];
        }
    };
    ActiveDirectoryUserSearchFilterDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ActiveDirectoryUserSearchFilterDto();
        result.init(data);
        return result;
    };
    ActiveDirectoryUserSearchFilterDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["emailAddress"] = this.emailAddress;
        data["firstName"] = this.firstName;
        data["lastName"] = this.lastName;
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["sortBy"] = this.sortBy;
        data["filterString"] = this.filterString;
        return data;
    };
    ActiveDirectoryUserSearchFilterDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ActiveDirectoryUserSearchFilterDto();
        result.init(json);
        return result;
    };
    return ActiveDirectoryUserSearchFilterDto;
}());
export { ActiveDirectoryUserSearchFilterDto };
var AjaxResponseOfPagedResultOfActiveDirectoryUserSearchDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfActiveDirectoryUserSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfActiveDirectoryUserSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfActiveDirectoryUserSearchDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfActiveDirectoryUserSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfActiveDirectoryUserSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfActiveDirectoryUserSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfActiveDirectoryUserSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfActiveDirectoryUserSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfActiveDirectoryUserSearchDto;
}());
export { AjaxResponseOfPagedResultOfActiveDirectoryUserSearchDto };
var PagedResultOfActiveDirectoryUserSearchDto = /** @class */ (function () {
    function PagedResultOfActiveDirectoryUserSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfActiveDirectoryUserSearchDto.prototype.init = function (_data) {
        var e_62, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(ActiveDirectoryUserSearchDto.fromJS(item));
                    }
                }
                catch (e_62_1) { e_62 = { error: e_62_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_62) throw e_62.error; }
                }
            }
        }
    };
    PagedResultOfActiveDirectoryUserSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfActiveDirectoryUserSearchDto();
        result.init(data);
        return result;
    };
    PagedResultOfActiveDirectoryUserSearchDto.prototype.toJSON = function (data) {
        var e_63, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_63_1) { e_63 = { error: e_63_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_63) throw e_63.error; }
            }
        }
        return data;
    };
    PagedResultOfActiveDirectoryUserSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfActiveDirectoryUserSearchDto();
        result.init(json);
        return result;
    };
    return PagedResultOfActiveDirectoryUserSearchDto;
}());
export { PagedResultOfActiveDirectoryUserSearchDto };
var ActiveDirectoryUserSearchDto = /** @class */ (function () {
    function ActiveDirectoryUserSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ActiveDirectoryUserSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.activeDirectoryUserId = _data["activeDirectoryUserId"];
            this.emailAddress = _data["emailAddress"];
            this.name = _data["name"];
        }
    };
    ActiveDirectoryUserSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ActiveDirectoryUserSearchDto();
        result.init(data);
        return result;
    };
    ActiveDirectoryUserSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["activeDirectoryUserId"] = this.activeDirectoryUserId;
        data["emailAddress"] = this.emailAddress;
        data["name"] = this.name;
        return data;
    };
    ActiveDirectoryUserSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ActiveDirectoryUserSearchDto();
        result.init(json);
        return result;
    };
    return ActiveDirectoryUserSearchDto;
}());
export { ActiveDirectoryUserSearchDto };
var AjaxResponseOfListOfUserLoginDto = /** @class */ (function () {
    function AjaxResponseOfListOfUserLoginDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfListOfUserLoginDto.prototype.init = function (_data) {
        var e_64, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(UserLoginDto.fromJS(item));
                    }
                }
                catch (e_64_1) { e_64 = { error: e_64_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_64) throw e_64.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfListOfUserLoginDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfListOfUserLoginDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfListOfUserLoginDto.prototype.toJSON = function (data) {
        var e_65, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_65_1) { e_65 = { error: e_65_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_65) throw e_65.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfListOfUserLoginDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfListOfUserLoginDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfListOfUserLoginDto;
}());
export { AjaxResponseOfListOfUserLoginDto };
var UserLoginDto = /** @class */ (function () {
    function UserLoginDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    UserLoginDto.prototype.init = function (_data) {
        var e_66, _a, e_67, _b;
        if (_data) {
            this.userId = _data["userId"];
            this.firstName = _data["firstName"];
            this.lastName = _data["lastName"];
            this.username = _data["username"];
            if (Array.isArray(_data["permissions"])) {
                this.permissions = [];
                try {
                    for (var _c = __values(_data["permissions"]), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        this.permissions.push(item);
                    }
                }
                catch (e_66_1) { e_66 = { error: e_66_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_66) throw e_66.error; }
                }
            }
            if (Array.isArray(_data["tenants"])) {
                this.tenants = [];
                try {
                    for (var _e = __values(_data["tenants"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.tenants.push(item);
                    }
                }
                catch (e_67_1) { e_67 = { error: e_67_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_67) throw e_67.error; }
                }
            }
        }
    };
    UserLoginDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new UserLoginDto();
        result.init(data);
        return result;
    };
    UserLoginDto.prototype.toJSON = function (data) {
        var e_68, _a, e_69, _b;
        data = typeof data === 'object' ? data : {};
        data["userId"] = this.userId;
        data["firstName"] = this.firstName;
        data["lastName"] = this.lastName;
        data["username"] = this.username;
        if (Array.isArray(this.permissions)) {
            data["permissions"] = [];
            try {
                for (var _c = __values(this.permissions), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var item = _d.value;
                    data["permissions"].push(item);
                }
            }
            catch (e_68_1) { e_68 = { error: e_68_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_68) throw e_68.error; }
            }
        }
        if (Array.isArray(this.tenants)) {
            data["tenants"] = [];
            try {
                for (var _e = __values(this.tenants), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["tenants"].push(item);
                }
            }
            catch (e_69_1) { e_69 = { error: e_69_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_69) throw e_69.error; }
            }
        }
        return data;
    };
    UserLoginDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new UserLoginDto();
        result.init(json);
        return result;
    };
    return UserLoginDto;
}());
export { UserLoginDto };
var AjaxResponseOfListOfUserProfileDto = /** @class */ (function () {
    function AjaxResponseOfListOfUserProfileDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfListOfUserProfileDto.prototype.init = function (_data) {
        var e_70, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(UserProfileDto.fromJS(item));
                    }
                }
                catch (e_70_1) { e_70 = { error: e_70_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_70) throw e_70.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfListOfUserProfileDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfListOfUserProfileDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfListOfUserProfileDto.prototype.toJSON = function (data) {
        var e_71, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_71_1) { e_71 = { error: e_71_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_71) throw e_71.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfListOfUserProfileDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfListOfUserProfileDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfListOfUserProfileDto;
}());
export { AjaxResponseOfListOfUserProfileDto };
var UserLogDto = /** @class */ (function () {
    function UserLogDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    UserLogDto.prototype.init = function (_data) {
        if (_data) {
            this.userId = _data["userId"];
            this.userAgent = _data["userAgent"];
            this.terminalId = _data["terminalId"];
            this.logTime = _data["logTime"] ? new Date(_data["logTime"].toString()) : undefined;
            this.logTypeId = _data["logTypeId"];
        }
    };
    UserLogDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new UserLogDto();
        result.init(data);
        return result;
    };
    UserLogDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["userId"] = this.userId;
        data["userAgent"] = this.userAgent;
        data["terminalId"] = this.terminalId;
        data["logTime"] = this.logTime ? this.logTime.toISOString() : undefined;
        data["logTypeId"] = this.logTypeId;
        return data;
    };
    UserLogDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new UserLogDto();
        result.init(json);
        return result;
    };
    return UserLogDto;
}());
export { UserLogDto };
export var LocalizedValueLanguage;
(function (LocalizedValueLanguage) {
    LocalizedValueLanguage[LocalizedValueLanguage["_0"] = 0] = "_0";
    LocalizedValueLanguage[LocalizedValueLanguage["_1"] = 1] = "_1";
})(LocalizedValueLanguage || (LocalizedValueLanguage = {}));
var SwaggerException = /** @class */ (function (_super) {
    __extends(SwaggerException, _super);
    function SwaggerException(message, status, response, headers, result) {
        var _this = _super.call(this) || this;
        _this.isSwaggerException = true;
        _this.message = message;
        _this.status = status;
        _this.response = response;
        _this.headers = headers;
        _this.result = result;
        return _this;
    }
    SwaggerException.isSwaggerException = function (obj) {
        return obj.isSwaggerException === true;
    };
    return SwaggerException;
}(Error));
export { SwaggerException };
function throwException(message, status, response, headers, result) {
    if (result !== null && result !== undefined)
        return Observable.throw(result);
    else
        return Observable.throw(new SwaggerException(message, status, response, headers, null));
}
function blobToText(blob) {
    return new Observable(function (observer) {
        if (!blob) {
            observer.next("");
            observer.complete();
        }
        else {
            var reader = new FileReader();
            reader.onload = function (event) {
                observer.next(event.target.result);
                observer.complete();
            };
            reader.readAsText(blob);
        }
    });
}
//# sourceMappingURL=security.js.map