/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.5.0.0 (NJsonSchema v10.1.15.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming
import { __decorate, __extends, __metadata, __param, __values } from "tslib";
import 'rxjs/add/observable/fromPromise';
import 'rxjs/add/observable/of';
import 'rxjs/add/observable/throw';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import 'rxjs/add/operator/mergeMap';
import 'rxjs/add/operator/catch';
import { Observable } from 'rxjs/Observable';
import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';
export var OM_HCP_API_BASE_URL = new InjectionToken('OM_HCP_API_BASE_URL');
var ServiceBaseConfig = /** @class */ (function () {
    function ServiceBaseConfig() {
    }
    return ServiceBaseConfig;
}());
export { ServiceBaseConfig };
var ServiceBase = /** @class */ (function () {
    function ServiceBase(config) {
        this.apimHeaderName = 'Ocp-Apim-Subscription-Key';
        this.tenantIdHeaderName = 'TenantId';
        this.tenantIdLocalStorageKey = 'samplicity-dtp-current-client';
        this.idTokenKey = 'samplicity-id-token';
        this.apiKey = config.key;
    }
    ServiceBase.prototype.transformOptions = function (options) {
        var headers = options.headers;
        if (this.apiKey) {
            headers = headers.append(this.apimHeaderName, this.apiKey);
        }
        var tenantId = sessionStorage.getItem(this.tenantIdLocalStorageKey);
        if (tenantId) {
            headers = headers.append(this.tenantIdHeaderName, tenantId);
        }
        var token = localStorage.getItem(this.idTokenKey);
        if (token) {
            headers = headers.append('Authorization', 'Bearer ' + token);
        }
        options.headers = headers;
        return Promise.resolve(options);
    };
    return ServiceBase;
}());
export { ServiceBase };
var OrderManagementHcp = /** @class */ (function (_super) {
    __extends(OrderManagementHcp, _super);
    function OrderManagementHcp(configuration, http, baseUrl) {
        var _this = _super.call(this, configuration) || this;
        _this.jsonParseReviver = undefined;
        _this.http = http;
        _this.baseUrl = baseUrl ? baseUrl : "";
        return _this;
    }
    /**
     * @param id (optional)
     * @return Success
     */
    OrderManagementHcp.prototype.getHcp = function (id) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Hcp/GetHcp?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetHcp(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetHcp(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementHcp.prototype.processGetHcp = function (response) {
        var e_1, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfHcpDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param id (optional)
     * @param orderId (optional)
     * @return Success
     */
    OrderManagementHcp.prototype.getHcpWithProgramConfigConditional = function (id, orderId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Hcp/GetHcpWithProgramConfigConditional?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        if (orderId !== undefined && orderId !== null)
            url_ += "orderId=" + encodeURIComponent("" + orderId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetHcpWithProgramConfigConditional(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetHcpWithProgramConfigConditional(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementHcp.prototype.processGetHcpWithProgramConfigConditional = function (response) {
        var e_2, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfHcpDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    OrderManagementHcp.prototype.getNewHcp = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Hcp/GetNewHcp";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetNewHcp(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetNewHcp(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementHcp.prototype.processGetNewHcp = function (response) {
        var e_3, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfHcpDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param filter (optional)
     * @return Success
     */
    OrderManagementHcp.prototype.searchHcps = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Hcp/SearchHcps";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchHcps(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchHcps(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementHcp.prototype.processSearchHcps = function (response) {
        var e_4, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfHcpSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param src (optional)
     * @return Success
     */
    OrderManagementHcp.prototype.updateHcp = function (src) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Hcp/UpdateHcp";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(src);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("put", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processUpdateHcp(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processUpdateHcp(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementHcp.prototype.processUpdateHcp = function (response) {
        var e_5, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfHcpDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param filter (optional)
     * @return Success
     */
    OrderManagementHcp.prototype.searchDoNotHonorExclusions = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/HcpDNHExclusions/SearchDoNotHonorExclusions";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchDoNotHonorExclusions(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchDoNotHonorExclusions(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementHcp.prototype.processSearchDoNotHonorExclusions = function (response) {
        var e_6, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfHcpDNHExclusionsSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param dto (optional)
     * @return Success
     */
    OrderManagementHcp.prototype.deleteDoNotHonorExclusion = function (dto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/HcpDNHExclusions/DeleteDoNotHonorExclusion";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(dto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("delete", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processDeleteDoNotHonorExclusion(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processDeleteDoNotHonorExclusion(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementHcp.prototype.processDeleteDoNotHonorExclusion = function (response) {
        var e_7, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponse.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param dto (optional)
     * @return Success
     */
    OrderManagementHcp.prototype.createDoNotHonorExclusion = function (dto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/HcpDNHExclusions/CreateDoNotHonorExclusion";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(dto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processCreateDoNotHonorExclusion(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processCreateDoNotHonorExclusion(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementHcp.prototype.processCreateDoNotHonorExclusion = function (response) {
        var e_8, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfHcpDNHExclusionDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    OrderManagementHcp = __decorate([
        Injectable(),
        __param(0, Inject(ServiceBaseConfig)), __param(1, Inject(HttpClient)), __param(2, Optional()), __param(2, Inject(OM_HCP_API_BASE_URL)),
        __metadata("design:paramtypes", [ServiceBaseConfig, HttpClient, String])
    ], OrderManagementHcp);
    return OrderManagementHcp;
}(ServiceBase));
export { OrderManagementHcp };
var AjaxResponseOfHcpDto = /** @class */ (function () {
    function AjaxResponseOfHcpDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfHcpDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? HcpDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfHcpDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfHcpDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfHcpDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfHcpDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfHcpDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfHcpDto;
}());
export { AjaxResponseOfHcpDto };
var HcpDto = /** @class */ (function () {
    function HcpDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpDto.prototype.init = function (_data) {
        var e_9, _a, e_10, _b, e_11, _c, e_12, _d, e_13, _e, e_14, _f;
        if (_data) {
            this.id = _data["id"];
            this.suffixClassificationValueId = _data["suffixClassificationValueId"];
            this.currentStatusClassificationValueId = _data["currentStatusClassificationValueId"];
            this.primarySpecialtyClassificationValueId = _data["primarySpecialtyClassificationValueId"];
            this.secondarySpecialtyClassificationValueId = _data["secondarySpecialtyClassificationValueId"];
            this.userProfileId = _data["userProfileId"];
            this.clientHcpId = _data["clientHcpId"];
            this.oldClientHcpId = _data["oldClientHcpId"];
            this.knipperHcpId = _data["knipperHcpId"];
            this.oldKnipperHcpId = _data["oldKnipperHcpId"];
            this.firstName = _data["firstName"];
            this.middleName = _data["middleName"];
            this.lastName = _data["lastName"];
            this.knipperHcpCreateFlag = _data["knipperHcpCreateFlag"];
            this.npiNbr = _data["npiNbr"];
            this.variableField1Text = _data["variableField1Text"];
            this.variableField2Text = _data["variableField2Text"];
            this.variableField3Text = _data["variableField3Text"];
            this.srfExpirationDateIncludeFlag = _data["srfExpirationDateIncludeFlag"];
            this.deaIncludeFlag = _data["deaIncludeFlag"];
            this.specialtyIncludeFlag = _data["specialtyIncludeFlag"];
            this.sanIncludeFlag = _data["sanIncludeFlag"];
            this.professionalDesignationMdIncludeFlag = _data["professionalDesignationMdIncludeFlag"];
            this.professionalDesignationDoIncludeFlag = _data["professionalDesignationDoIncludeFlag"];
            this.professionalDesignationNpIncludeFlag = _data["professionalDesignationNpIncludeFlag"];
            this.professionalDesignationPaIncludeFlag = _data["professionalDesignationPaIncludeFlag"];
            this.professionalDesignationOtherIncludeFlag = _data["professionalDesignationOtherIncludeFlag"];
            if (Array.isArray(_data["contactMethods"])) {
                this.contactMethods = [];
                try {
                    for (var _g = __values(_data["contactMethods"]), _h = _g.next(); !_h.done; _h = _g.next()) {
                        var item = _h.value;
                        this.contactMethods.push(HcpContactMethodDto.fromJS(item));
                    }
                }
                catch (e_9_1) { e_9 = { error: e_9_1 }; }
                finally {
                    try {
                        if (_h && !_h.done && (_a = _g.return)) _a.call(_g);
                    }
                    finally { if (e_9) throw e_9.error; }
                }
            }
            if (Array.isArray(_data["addresses"])) {
                this.addresses = [];
                try {
                    for (var _j = __values(_data["addresses"]), _k = _j.next(); !_k.done; _k = _j.next()) {
                        var item = _k.value;
                        this.addresses.push(HcpAddressDto.fromJS(item));
                    }
                }
                catch (e_10_1) { e_10 = { error: e_10_1 }; }
                finally {
                    try {
                        if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                    }
                    finally { if (e_10) throw e_10.error; }
                }
            }
            if (Array.isArray(_data["professionalDesignations"])) {
                this.professionalDesignations = [];
                try {
                    for (var _l = __values(_data["professionalDesignations"]), _m = _l.next(); !_m.done; _m = _l.next()) {
                        var item = _m.value;
                        this.professionalDesignations.push(HcpProfessionalDesignationDto.fromJS(item));
                    }
                }
                catch (e_11_1) { e_11 = { error: e_11_1 }; }
                finally {
                    try {
                        if (_m && !_m.done && (_c = _l.return)) _c.call(_l);
                    }
                    finally { if (e_11) throw e_11.error; }
                }
            }
            if (Array.isArray(_data["licenses"])) {
                this.licenses = [];
                try {
                    for (var _o = __values(_data["licenses"]), _p = _o.next(); !_p.done; _p = _o.next()) {
                        var item = _p.value;
                        this.licenses.push(HcpLicenseDto.fromJS(item));
                    }
                }
                catch (e_12_1) { e_12 = { error: e_12_1 }; }
                finally {
                    try {
                        if (_p && !_p.done && (_d = _o.return)) _d.call(_o);
                    }
                    finally { if (e_12) throw e_12.error; }
                }
            }
            if (Array.isArray(_data["salesReps"])) {
                this.salesReps = [];
                try {
                    for (var _q = __values(_data["salesReps"]), _r = _q.next(); !_r.done; _r = _q.next()) {
                        var item = _r.value;
                        this.salesReps.push(HcpSalesRepDto.fromJS(item));
                    }
                }
                catch (e_13_1) { e_13 = { error: e_13_1 }; }
                finally {
                    try {
                        if (_r && !_r.done && (_e = _q.return)) _e.call(_q);
                    }
                    finally { if (e_13) throw e_13.error; }
                }
            }
            this.sourceText = _data["sourceText"];
            this.sourceNoteText = _data["sourceNoteText"];
            this.sourceUpdateDateTime = _data["sourceUpdateDateTime"] ? new Date(_data["sourceUpdateDateTime"].toString()) : undefined;
            if (Array.isArray(_data["names"])) {
                this.names = [];
                try {
                    for (var _s = __values(_data["names"]), _t = _s.next(); !_t.done; _t = _s.next()) {
                        var item = _t.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_14_1) { e_14 = { error: e_14_1 }; }
                finally {
                    try {
                        if (_t && !_t.done && (_f = _s.return)) _f.call(_s);
                    }
                    finally { if (e_14) throw e_14.error; }
                }
            }
        }
    };
    HcpDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpDto();
        result.init(data);
        return result;
    };
    HcpDto.prototype.toJSON = function (data) {
        var e_15, _a, e_16, _b, e_17, _c, e_18, _d, e_19, _e, e_20, _f;
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["suffixClassificationValueId"] = this.suffixClassificationValueId;
        data["currentStatusClassificationValueId"] = this.currentStatusClassificationValueId;
        data["primarySpecialtyClassificationValueId"] = this.primarySpecialtyClassificationValueId;
        data["secondarySpecialtyClassificationValueId"] = this.secondarySpecialtyClassificationValueId;
        data["userProfileId"] = this.userProfileId;
        data["clientHcpId"] = this.clientHcpId;
        data["oldClientHcpId"] = this.oldClientHcpId;
        data["knipperHcpId"] = this.knipperHcpId;
        data["oldKnipperHcpId"] = this.oldKnipperHcpId;
        data["firstName"] = this.firstName;
        data["middleName"] = this.middleName;
        data["lastName"] = this.lastName;
        data["knipperHcpCreateFlag"] = this.knipperHcpCreateFlag;
        data["npiNbr"] = this.npiNbr;
        data["variableField1Text"] = this.variableField1Text;
        data["variableField2Text"] = this.variableField2Text;
        data["variableField3Text"] = this.variableField3Text;
        data["srfExpirationDateIncludeFlag"] = this.srfExpirationDateIncludeFlag;
        data["deaIncludeFlag"] = this.deaIncludeFlag;
        data["specialtyIncludeFlag"] = this.specialtyIncludeFlag;
        data["sanIncludeFlag"] = this.sanIncludeFlag;
        data["professionalDesignationMdIncludeFlag"] = this.professionalDesignationMdIncludeFlag;
        data["professionalDesignationDoIncludeFlag"] = this.professionalDesignationDoIncludeFlag;
        data["professionalDesignationNpIncludeFlag"] = this.professionalDesignationNpIncludeFlag;
        data["professionalDesignationPaIncludeFlag"] = this.professionalDesignationPaIncludeFlag;
        data["professionalDesignationOtherIncludeFlag"] = this.professionalDesignationOtherIncludeFlag;
        if (Array.isArray(this.contactMethods)) {
            data["contactMethods"] = [];
            try {
                for (var _g = __values(this.contactMethods), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var item = _h.value;
                    data["contactMethods"].push(item.toJSON());
                }
            }
            catch (e_15_1) { e_15 = { error: e_15_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_a = _g.return)) _a.call(_g);
                }
                finally { if (e_15) throw e_15.error; }
            }
        }
        if (Array.isArray(this.addresses)) {
            data["addresses"] = [];
            try {
                for (var _j = __values(this.addresses), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var item = _k.value;
                    data["addresses"].push(item.toJSON());
                }
            }
            catch (e_16_1) { e_16 = { error: e_16_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                }
                finally { if (e_16) throw e_16.error; }
            }
        }
        if (Array.isArray(this.professionalDesignations)) {
            data["professionalDesignations"] = [];
            try {
                for (var _l = __values(this.professionalDesignations), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var item = _m.value;
                    data["professionalDesignations"].push(item.toJSON());
                }
            }
            catch (e_17_1) { e_17 = { error: e_17_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_c = _l.return)) _c.call(_l);
                }
                finally { if (e_17) throw e_17.error; }
            }
        }
        if (Array.isArray(this.licenses)) {
            data["licenses"] = [];
            try {
                for (var _o = __values(this.licenses), _p = _o.next(); !_p.done; _p = _o.next()) {
                    var item = _p.value;
                    data["licenses"].push(item.toJSON());
                }
            }
            catch (e_18_1) { e_18 = { error: e_18_1 }; }
            finally {
                try {
                    if (_p && !_p.done && (_d = _o.return)) _d.call(_o);
                }
                finally { if (e_18) throw e_18.error; }
            }
        }
        if (Array.isArray(this.salesReps)) {
            data["salesReps"] = [];
            try {
                for (var _q = __values(this.salesReps), _r = _q.next(); !_r.done; _r = _q.next()) {
                    var item = _r.value;
                    data["salesReps"].push(item.toJSON());
                }
            }
            catch (e_19_1) { e_19 = { error: e_19_1 }; }
            finally {
                try {
                    if (_r && !_r.done && (_e = _q.return)) _e.call(_q);
                }
                finally { if (e_19) throw e_19.error; }
            }
        }
        data["sourceText"] = this.sourceText;
        data["sourceNoteText"] = this.sourceNoteText;
        data["sourceUpdateDateTime"] = this.sourceUpdateDateTime ? this.sourceUpdateDateTime.toISOString() : undefined;
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _s = __values(this.names), _t = _s.next(); !_t.done; _t = _s.next()) {
                    var item = _t.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_20_1) { e_20 = { error: e_20_1 }; }
            finally {
                try {
                    if (_t && !_t.done && (_f = _s.return)) _f.call(_s);
                }
                finally { if (e_20) throw e_20.error; }
            }
        }
        return data;
    };
    HcpDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpDto();
        result.init(json);
        return result;
    };
    return HcpDto;
}());
export { HcpDto };
var ErrorInfo = /** @class */ (function () {
    function ErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ErrorInfo.prototype.init = function (_data) {
        var e_21, _a;
        if (_data) {
            this.code = _data["code"];
            this.message = _data["message"];
            this.details = _data["details"];
            if (Array.isArray(_data["validationErrors"])) {
                this.validationErrors = [];
                try {
                    for (var _b = __values(_data["validationErrors"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.validationErrors.push(ValidationErrorInfo.fromJS(item));
                    }
                }
                catch (e_21_1) { e_21 = { error: e_21_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_21) throw e_21.error; }
                }
            }
        }
    };
    ErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ErrorInfo();
        result.init(data);
        return result;
    };
    ErrorInfo.prototype.toJSON = function (data) {
        var e_22, _a;
        data = typeof data === 'object' ? data : {};
        data["code"] = this.code;
        data["message"] = this.message;
        data["details"] = this.details;
        if (Array.isArray(this.validationErrors)) {
            data["validationErrors"] = [];
            try {
                for (var _b = __values(this.validationErrors), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["validationErrors"].push(item.toJSON());
                }
            }
            catch (e_22_1) { e_22 = { error: e_22_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_22) throw e_22.error; }
            }
        }
        return data;
    };
    ErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ErrorInfo();
        result.init(json);
        return result;
    };
    return ErrorInfo;
}());
export { ErrorInfo };
var HcpContactMethodDto = /** @class */ (function () {
    function HcpContactMethodDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpContactMethodDto.prototype.init = function (_data) {
        if (_data) {
            this.hcpId = _data["hcpId"];
            this.hcpAddressId = _data["hcpAddressId"];
            this.contactMethodTypeId = _data["contactMethodTypeId"];
            this.contactDetailText = _data["contactDetailText"];
            this.contactDetailExtensionText = _data["contactDetailExtensionText"];
            this.knipperCreateFlag = _data["knipperCreateFlag"];
            this.primaryContactMethodFlag = _data["primaryContactMethodFlag"];
            this.id = _data["id"];
        }
    };
    HcpContactMethodDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpContactMethodDto();
        result.init(data);
        return result;
    };
    HcpContactMethodDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["hcpId"] = this.hcpId;
        data["hcpAddressId"] = this.hcpAddressId;
        data["contactMethodTypeId"] = this.contactMethodTypeId;
        data["contactDetailText"] = this.contactDetailText;
        data["contactDetailExtensionText"] = this.contactDetailExtensionText;
        data["knipperCreateFlag"] = this.knipperCreateFlag;
        data["primaryContactMethodFlag"] = this.primaryContactMethodFlag;
        data["id"] = this.id;
        return data;
    };
    HcpContactMethodDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpContactMethodDto();
        result.init(json);
        return result;
    };
    return HcpContactMethodDto;
}());
export { HcpContactMethodDto };
var HcpAddressDto = /** @class */ (function () {
    function HcpAddressDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpAddressDto.prototype.init = function (_data) {
        var e_23, _a;
        if (_data) {
            this.hcpId = _data["hcpId"];
            this.stateCode = _data["stateCode"];
            this.countryCode = _data["countryCode"];
            this.address1Text = _data["address1Text"];
            this.address2Text = _data["address2Text"];
            this.address3Text = _data["address3Text"];
            this.address4Text = _data["address4Text"];
            this.cityName = _data["cityName"];
            this.zipCode = _data["zipCode"];
            this.institutionAddressFlag = _data["institutionAddressFlag"];
            this.primaryAddressFlag = _data["primaryAddressFlag"];
            this.badAddressFlag = _data["badAddressFlag"];
            this.clientAddressId = _data["clientAddressId"];
            this.companyName = _data["companyName"];
            this.san = _data["san"];
            this.groupPracticeName = _data["groupPracticeName"];
            this.sanExpirationDate = _data["sanExpirationDate"] ? new Date(_data["sanExpirationDate"].toString()) : undefined;
            this.activeFlag = _data["activeFlag"];
            this.sourceText = _data["sourceText"];
            this.sourceNoteText = _data["sourceNoteText"];
            this.fileName = _data["fileName"];
            this.sourceUpdateDateTime = _data["sourceUpdateDateTime"] ? new Date(_data["sourceUpdateDateTime"].toString()) : undefined;
            this.deletionSourceDataTime = _data["deletionSourceDataTime"] ? new Date(_data["deletionSourceDataTime"].toString()) : undefined;
            this.deaNbr = _data["deaNbr"];
            if (Array.isArray(_data["contactMethods"])) {
                this.contactMethods = [];
                try {
                    for (var _b = __values(_data["contactMethods"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.contactMethods.push(HcpContactMethodDto.fromJS(item));
                    }
                }
                catch (e_23_1) { e_23 = { error: e_23_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_23) throw e_23.error; }
                }
            }
            this.id = _data["id"];
        }
    };
    HcpAddressDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpAddressDto();
        result.init(data);
        return result;
    };
    HcpAddressDto.prototype.toJSON = function (data) {
        var e_24, _a;
        data = typeof data === 'object' ? data : {};
        data["hcpId"] = this.hcpId;
        data["stateCode"] = this.stateCode;
        data["countryCode"] = this.countryCode;
        data["address1Text"] = this.address1Text;
        data["address2Text"] = this.address2Text;
        data["address3Text"] = this.address3Text;
        data["address4Text"] = this.address4Text;
        data["cityName"] = this.cityName;
        data["zipCode"] = this.zipCode;
        data["institutionAddressFlag"] = this.institutionAddressFlag;
        data["primaryAddressFlag"] = this.primaryAddressFlag;
        data["badAddressFlag"] = this.badAddressFlag;
        data["clientAddressId"] = this.clientAddressId;
        data["companyName"] = this.companyName;
        data["san"] = this.san;
        data["groupPracticeName"] = this.groupPracticeName;
        data["sanExpirationDate"] = this.sanExpirationDate ? this.sanExpirationDate.toISOString() : undefined;
        data["activeFlag"] = this.activeFlag;
        data["sourceText"] = this.sourceText;
        data["sourceNoteText"] = this.sourceNoteText;
        data["fileName"] = this.fileName;
        data["sourceUpdateDateTime"] = this.sourceUpdateDateTime ? this.sourceUpdateDateTime.toISOString() : undefined;
        data["deletionSourceDataTime"] = this.deletionSourceDataTime ? this.deletionSourceDataTime.toISOString() : undefined;
        data["deaNbr"] = this.deaNbr;
        if (Array.isArray(this.contactMethods)) {
            data["contactMethods"] = [];
            try {
                for (var _b = __values(this.contactMethods), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["contactMethods"].push(item.toJSON());
                }
            }
            catch (e_24_1) { e_24 = { error: e_24_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_24) throw e_24.error; }
            }
        }
        data["id"] = this.id;
        return data;
    };
    HcpAddressDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpAddressDto();
        result.init(json);
        return result;
    };
    return HcpAddressDto;
}());
export { HcpAddressDto };
var HcpProfessionalDesignationDto = /** @class */ (function () {
    function HcpProfessionalDesignationDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpProfessionalDesignationDto.prototype.init = function (_data) {
        if (_data) {
            this.hcpId = _data["hcpId"];
            this.professionalDesignationId = _data["professionalDesignationId"];
            this.primaryFlag = _data["primaryFlag"];
            this.id = _data["id"];
        }
    };
    HcpProfessionalDesignationDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpProfessionalDesignationDto();
        result.init(data);
        return result;
    };
    HcpProfessionalDesignationDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["hcpId"] = this.hcpId;
        data["professionalDesignationId"] = this.professionalDesignationId;
        data["primaryFlag"] = this.primaryFlag;
        data["id"] = this.id;
        return data;
    };
    HcpProfessionalDesignationDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpProfessionalDesignationDto();
        result.init(json);
        return result;
    };
    return HcpProfessionalDesignationDto;
}());
export { HcpProfessionalDesignationDto };
var HcpLicenseDto = /** @class */ (function () {
    function HcpLicenseDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpLicenseDto.prototype.init = function (_data) {
        if (_data) {
            this.hcpId = _data["hcpId"];
            this.stateCode = _data["stateCode"];
            this.stateLicenseNbr = _data["stateLicenseNbr"];
            this.sampleEligibilityFlag = _data["sampleEligibilityFlag"];
            this.id = _data["id"];
        }
    };
    HcpLicenseDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpLicenseDto();
        result.init(data);
        return result;
    };
    HcpLicenseDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["hcpId"] = this.hcpId;
        data["stateCode"] = this.stateCode;
        data["stateLicenseNbr"] = this.stateLicenseNbr;
        data["sampleEligibilityFlag"] = this.sampleEligibilityFlag;
        data["id"] = this.id;
        return data;
    };
    HcpLicenseDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpLicenseDto();
        result.init(json);
        return result;
    };
    return HcpLicenseDto;
}());
export { HcpLicenseDto };
var HcpSalesRepDto = /** @class */ (function () {
    function HcpSalesRepDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpSalesRepDto.prototype.init = function (_data) {
        var e_25, _a;
        if (_data) {
            this.salesRepFirstName = _data["salesRepFirstName"];
            this.salesRepLastName = _data["salesRepLastName"];
            this.salesRepId = _data["salesRepId"];
            this.territoryCode = _data["territoryCode"];
            this.salesRepEmailAddress = _data["salesRepEmailAddress"];
            this.salesRepPhoneNumbers = _data["salesRepPhoneNumbers"] ? HcpSalesRepPhoneDto.fromJS(_data["salesRepPhoneNumbers"]) : undefined;
            if (Array.isArray(_data["applicableProgramNames"])) {
                this.applicableProgramNames = [];
                try {
                    for (var _b = __values(_data["applicableProgramNames"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.applicableProgramNames.push(item);
                    }
                }
                catch (e_25_1) { e_25 = { error: e_25_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_25) throw e_25.error; }
                }
            }
            this.id = _data["id"];
        }
    };
    HcpSalesRepDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpSalesRepDto();
        result.init(data);
        return result;
    };
    HcpSalesRepDto.prototype.toJSON = function (data) {
        var e_26, _a;
        data = typeof data === 'object' ? data : {};
        data["salesRepFirstName"] = this.salesRepFirstName;
        data["salesRepLastName"] = this.salesRepLastName;
        data["salesRepId"] = this.salesRepId;
        data["territoryCode"] = this.territoryCode;
        data["salesRepEmailAddress"] = this.salesRepEmailAddress;
        data["salesRepPhoneNumbers"] = this.salesRepPhoneNumbers ? this.salesRepPhoneNumbers.toJSON() : undefined;
        if (Array.isArray(this.applicableProgramNames)) {
            data["applicableProgramNames"] = [];
            try {
                for (var _b = __values(this.applicableProgramNames), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["applicableProgramNames"].push(item);
                }
            }
            catch (e_26_1) { e_26 = { error: e_26_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_26) throw e_26.error; }
            }
        }
        data["id"] = this.id;
        return data;
    };
    HcpSalesRepDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpSalesRepDto();
        result.init(json);
        return result;
    };
    return HcpSalesRepDto;
}());
export { HcpSalesRepDto };
var LocalizedValue = /** @class */ (function () {
    function LocalizedValue(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    LocalizedValue.prototype.init = function (_data) {
        if (_data) {
            this.language = _data["language"];
            this.value = _data["value"];
        }
    };
    LocalizedValue.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new LocalizedValue();
        result.init(data);
        return result;
    };
    LocalizedValue.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["language"] = this.language;
        data["value"] = this.value;
        return data;
    };
    LocalizedValue.prototype.clone = function () {
        var json = this.toJSON();
        var result = new LocalizedValue();
        result.init(json);
        return result;
    };
    return LocalizedValue;
}());
export { LocalizedValue };
var ValidationErrorInfo = /** @class */ (function () {
    function ValidationErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ValidationErrorInfo.prototype.init = function (_data) {
        var e_27, _a;
        if (_data) {
            this.message = _data["message"];
            if (Array.isArray(_data["members"])) {
                this.members = [];
                try {
                    for (var _b = __values(_data["members"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.members.push(item);
                    }
                }
                catch (e_27_1) { e_27 = { error: e_27_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_27) throw e_27.error; }
                }
            }
        }
    };
    ValidationErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValidationErrorInfo();
        result.init(data);
        return result;
    };
    ValidationErrorInfo.prototype.toJSON = function (data) {
        var e_28, _a;
        data = typeof data === 'object' ? data : {};
        data["message"] = this.message;
        if (Array.isArray(this.members)) {
            data["members"] = [];
            try {
                for (var _b = __values(this.members), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["members"].push(item);
                }
            }
            catch (e_28_1) { e_28 = { error: e_28_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_28) throw e_28.error; }
            }
        }
        return data;
    };
    ValidationErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ValidationErrorInfo();
        result.init(json);
        return result;
    };
    return ValidationErrorInfo;
}());
export { ValidationErrorInfo };
var HcpSalesRepPhoneDto = /** @class */ (function () {
    function HcpSalesRepPhoneDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpSalesRepPhoneDto.prototype.init = function (_data) {
        if (_data) {
            this.phoneNbr = _data["phoneNbr"];
            this.phoneExtensionNbr = _data["phoneExtensionNbr"];
            this.faxNbr = _data["faxNbr"];
            this.mobilePhoneNbr = _data["mobilePhoneNbr"];
        }
    };
    HcpSalesRepPhoneDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpSalesRepPhoneDto();
        result.init(data);
        return result;
    };
    HcpSalesRepPhoneDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["phoneNbr"] = this.phoneNbr;
        data["phoneExtensionNbr"] = this.phoneExtensionNbr;
        data["faxNbr"] = this.faxNbr;
        data["mobilePhoneNbr"] = this.mobilePhoneNbr;
        return data;
    };
    HcpSalesRepPhoneDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpSalesRepPhoneDto();
        result.init(json);
        return result;
    };
    return HcpSalesRepPhoneDto;
}());
export { HcpSalesRepPhoneDto };
var HcpSearchFilterDto = /** @class */ (function () {
    function HcpSearchFilterDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpSearchFilterDto.prototype.init = function (_data) {
        var e_29, _a;
        if (_data) {
            this.hcpLastName = _data["hcpLastName"];
            this.hcpFirstName = _data["hcpFirstName"];
            this.hcpKId = _data["hcpKId"];
            this.clientTargetId = _data["clientTargetId"];
            this.stateCode = _data["stateCode"];
            this.zipCode = _data["zipCode"];
            this.emailAddress = _data["emailAddress"];
            this.stateLicenseNumber = _data["stateLicenseNumber"];
            this.deaNumber = _data["deaNumber"];
            this.san = _data["san"];
            if (Array.isArray(_data["currentStatusClassificationValueIds"])) {
                this.currentStatusClassificationValueIds = [];
                try {
                    for (var _b = __values(_data["currentStatusClassificationValueIds"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.currentStatusClassificationValueIds.push(item);
                    }
                }
                catch (e_29_1) { e_29 = { error: e_29_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_29) throw e_29.error; }
                }
            }
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.sortBy = _data["sortBy"];
            this.filterString = _data["filterString"];
        }
    };
    HcpSearchFilterDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpSearchFilterDto();
        result.init(data);
        return result;
    };
    HcpSearchFilterDto.prototype.toJSON = function (data) {
        var e_30, _a;
        data = typeof data === 'object' ? data : {};
        data["hcpLastName"] = this.hcpLastName;
        data["hcpFirstName"] = this.hcpFirstName;
        data["hcpKId"] = this.hcpKId;
        data["clientTargetId"] = this.clientTargetId;
        data["stateCode"] = this.stateCode;
        data["zipCode"] = this.zipCode;
        data["emailAddress"] = this.emailAddress;
        data["stateLicenseNumber"] = this.stateLicenseNumber;
        data["deaNumber"] = this.deaNumber;
        data["san"] = this.san;
        if (Array.isArray(this.currentStatusClassificationValueIds)) {
            data["currentStatusClassificationValueIds"] = [];
            try {
                for (var _b = __values(this.currentStatusClassificationValueIds), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["currentStatusClassificationValueIds"].push(item);
                }
            }
            catch (e_30_1) { e_30 = { error: e_30_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_30) throw e_30.error; }
            }
        }
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["sortBy"] = this.sortBy;
        data["filterString"] = this.filterString;
        return data;
    };
    HcpSearchFilterDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpSearchFilterDto();
        result.init(json);
        return result;
    };
    return HcpSearchFilterDto;
}());
export { HcpSearchFilterDto };
var AjaxResponseOfPagedResultOfHcpSearchDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfHcpSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfHcpSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfHcpSearchDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfHcpSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfHcpSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfHcpSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfHcpSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfHcpSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfHcpSearchDto;
}());
export { AjaxResponseOfPagedResultOfHcpSearchDto };
var PagedResultOfHcpSearchDto = /** @class */ (function () {
    function PagedResultOfHcpSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfHcpSearchDto.prototype.init = function (_data) {
        var e_31, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(HcpSearchDto.fromJS(item));
                    }
                }
                catch (e_31_1) { e_31 = { error: e_31_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_31) throw e_31.error; }
                }
            }
        }
    };
    PagedResultOfHcpSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfHcpSearchDto();
        result.init(data);
        return result;
    };
    PagedResultOfHcpSearchDto.prototype.toJSON = function (data) {
        var e_32, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_32_1) { e_32 = { error: e_32_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_32) throw e_32.error; }
            }
        }
        return data;
    };
    PagedResultOfHcpSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfHcpSearchDto();
        result.init(json);
        return result;
    };
    return PagedResultOfHcpSearchDto;
}());
export { PagedResultOfHcpSearchDto };
var HcpSearchDto = /** @class */ (function () {
    function HcpSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpSearchDto.prototype.init = function (_data) {
        var e_33, _a;
        if (_data) {
            this.id = _data["id"];
            this.hcpName = _data["hcpName"];
            this.hcpKId = _data["hcpKId"];
            this.primaryAddress = _data["primaryAddress"] ? HcpAddressDto.fromJS(_data["primaryAddress"]) : undefined;
            this.emailAddress = _data["emailAddress"];
            this.primaryStateLicenseNumber = _data["primaryStateLicenseNumber"];
            this.primaryDeaNumber = _data["primaryDeaNumber"];
            this.primarySan = _data["primarySan"];
            this.hcpStatus = _data["hcpStatus"];
            this.primaryProfessionalDesignation = _data["primaryProfessionalDesignation"];
            this.clientTargetId = _data["clientTargetId"];
            this.primaryPhoneNumber = _data["primaryPhoneNumber"];
            this.primaryFaxNumber = _data["primaryFaxNumber"];
            this.nonPrimaryAddressCount = _data["nonPrimaryAddressCount"];
            this.nonPrimaryStateLicenseNumberCount = _data["nonPrimaryStateLicenseNumberCount"];
            this.nonPrimaryDeaNumberCount = _data["nonPrimaryDeaNumberCount"];
            this.nonPrimarySanCount = _data["nonPrimarySanCount"];
            this.nonPrimaryProfessionalDesignationCount = _data["nonPrimaryProfessionalDesignationCount"];
            this.nonPrimaryPhoneNumberCount = _data["nonPrimaryPhoneNumberCount"];
            this.nonPrimaryFaxNumberCount = _data["nonPrimaryFaxNumberCount"];
            this.hcpFirstName = _data["hcpFirstName"];
            this.hcpLastName = _data["hcpLastName"];
            this.stateLicenses = _data["stateLicenses"];
            if (Array.isArray(_data["names"])) {
                this.names = [];
                try {
                    for (var _b = __values(_data["names"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_33_1) { e_33 = { error: e_33_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_33) throw e_33.error; }
                }
            }
        }
    };
    HcpSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpSearchDto();
        result.init(data);
        return result;
    };
    HcpSearchDto.prototype.toJSON = function (data) {
        var e_34, _a;
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["hcpName"] = this.hcpName;
        data["hcpKId"] = this.hcpKId;
        data["primaryAddress"] = this.primaryAddress ? this.primaryAddress.toJSON() : undefined;
        data["emailAddress"] = this.emailAddress;
        data["primaryStateLicenseNumber"] = this.primaryStateLicenseNumber;
        data["primaryDeaNumber"] = this.primaryDeaNumber;
        data["primarySan"] = this.primarySan;
        data["hcpStatus"] = this.hcpStatus;
        data["primaryProfessionalDesignation"] = this.primaryProfessionalDesignation;
        data["clientTargetId"] = this.clientTargetId;
        data["primaryPhoneNumber"] = this.primaryPhoneNumber;
        data["primaryFaxNumber"] = this.primaryFaxNumber;
        data["nonPrimaryAddressCount"] = this.nonPrimaryAddressCount;
        data["nonPrimaryStateLicenseNumberCount"] = this.nonPrimaryStateLicenseNumberCount;
        data["nonPrimaryDeaNumberCount"] = this.nonPrimaryDeaNumberCount;
        data["nonPrimarySanCount"] = this.nonPrimarySanCount;
        data["nonPrimaryProfessionalDesignationCount"] = this.nonPrimaryProfessionalDesignationCount;
        data["nonPrimaryPhoneNumberCount"] = this.nonPrimaryPhoneNumberCount;
        data["nonPrimaryFaxNumberCount"] = this.nonPrimaryFaxNumberCount;
        data["hcpFirstName"] = this.hcpFirstName;
        data["hcpLastName"] = this.hcpLastName;
        data["stateLicenses"] = this.stateLicenses;
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _b = __values(this.names), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_34_1) { e_34 = { error: e_34_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_34) throw e_34.error; }
            }
        }
        return data;
    };
    HcpSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpSearchDto();
        result.init(json);
        return result;
    };
    return HcpSearchDto;
}());
export { HcpSearchDto };
var HcpDNHExclusionsSearchFilterDto = /** @class */ (function () {
    function HcpDNHExclusionsSearchFilterDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpDNHExclusionsSearchFilterDto.prototype.init = function (_data) {
        var e_35, _a;
        if (_data) {
            this.hcpFirstName = _data["hcpFirstName"];
            this.hcpLastName = _data["hcpLastName"];
            this.hcpKidNumber = _data["hcpKidNumber"];
            this.clientTargetId = _data["clientTargetId"];
            if (Array.isArray(_data["doNotHonorExclusionReasonIds"])) {
                this.doNotHonorExclusionReasonIds = [];
                try {
                    for (var _b = __values(_data["doNotHonorExclusionReasonIds"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.doNotHonorExclusionReasonIds.push(item);
                    }
                }
                catch (e_35_1) { e_35 = { error: e_35_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_35) throw e_35.error; }
                }
            }
            this.programName = _data["programName"];
            this.jobNumber = _data["jobNumber"];
            this.brandName = _data["brandName"];
            this.productName = _data["productName"];
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.sortBy = _data["sortBy"];
            this.filterString = _data["filterString"];
        }
    };
    HcpDNHExclusionsSearchFilterDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpDNHExclusionsSearchFilterDto();
        result.init(data);
        return result;
    };
    HcpDNHExclusionsSearchFilterDto.prototype.toJSON = function (data) {
        var e_36, _a;
        data = typeof data === 'object' ? data : {};
        data["hcpFirstName"] = this.hcpFirstName;
        data["hcpLastName"] = this.hcpLastName;
        data["hcpKidNumber"] = this.hcpKidNumber;
        data["clientTargetId"] = this.clientTargetId;
        if (Array.isArray(this.doNotHonorExclusionReasonIds)) {
            data["doNotHonorExclusionReasonIds"] = [];
            try {
                for (var _b = __values(this.doNotHonorExclusionReasonIds), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["doNotHonorExclusionReasonIds"].push(item);
                }
            }
            catch (e_36_1) { e_36 = { error: e_36_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_36) throw e_36.error; }
            }
        }
        data["programName"] = this.programName;
        data["jobNumber"] = this.jobNumber;
        data["brandName"] = this.brandName;
        data["productName"] = this.productName;
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["sortBy"] = this.sortBy;
        data["filterString"] = this.filterString;
        return data;
    };
    HcpDNHExclusionsSearchFilterDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpDNHExclusionsSearchFilterDto();
        result.init(json);
        return result;
    };
    return HcpDNHExclusionsSearchFilterDto;
}());
export { HcpDNHExclusionsSearchFilterDto };
var AjaxResponseOfPagedResultOfHcpDNHExclusionsSearchDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfHcpDNHExclusionsSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfHcpDNHExclusionsSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfHcpDNHExclusionsSearchDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfHcpDNHExclusionsSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfHcpDNHExclusionsSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfHcpDNHExclusionsSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfHcpDNHExclusionsSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfHcpDNHExclusionsSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfHcpDNHExclusionsSearchDto;
}());
export { AjaxResponseOfPagedResultOfHcpDNHExclusionsSearchDto };
var PagedResultOfHcpDNHExclusionsSearchDto = /** @class */ (function () {
    function PagedResultOfHcpDNHExclusionsSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfHcpDNHExclusionsSearchDto.prototype.init = function (_data) {
        var e_37, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(HcpDNHExclusionsSearchDto.fromJS(item));
                    }
                }
                catch (e_37_1) { e_37 = { error: e_37_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_37) throw e_37.error; }
                }
            }
        }
    };
    PagedResultOfHcpDNHExclusionsSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfHcpDNHExclusionsSearchDto();
        result.init(data);
        return result;
    };
    PagedResultOfHcpDNHExclusionsSearchDto.prototype.toJSON = function (data) {
        var e_38, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_38_1) { e_38 = { error: e_38_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_38) throw e_38.error; }
            }
        }
        return data;
    };
    PagedResultOfHcpDNHExclusionsSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfHcpDNHExclusionsSearchDto();
        result.init(json);
        return result;
    };
    return PagedResultOfHcpDNHExclusionsSearchDto;
}());
export { PagedResultOfHcpDNHExclusionsSearchDto };
var HcpDNHExclusionsSearchDto = /** @class */ (function () {
    function HcpDNHExclusionsSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpDNHExclusionsSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.hcpName = _data["hcpName"];
            this.hcpKId = _data["hcpKId"];
            this.clientTargetId = _data["clientTargetId"];
            this.reasonId = _data["reasonId"];
            this.brandName = _data["brandName"];
            this.program = _data["program"];
            this.product = _data["product"];
            this.dateAdded = _data["dateAdded"] ? new Date(_data["dateAdded"].toString()) : undefined;
            this.dateRequested = _data["dateRequested"] ? new Date(_data["dateRequested"].toString()) : undefined;
            this.source = _data["source"];
            this.comment = _data["comment"];
            this.attachmentLocation = _data["attachmentLocation"];
            this.attachmentName = _data["attachmentName"];
            this.newFlag = _data["newFlag"];
        }
    };
    HcpDNHExclusionsSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpDNHExclusionsSearchDto();
        result.init(data);
        return result;
    };
    HcpDNHExclusionsSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["hcpName"] = this.hcpName;
        data["hcpKId"] = this.hcpKId;
        data["clientTargetId"] = this.clientTargetId;
        data["reasonId"] = this.reasonId;
        data["brandName"] = this.brandName;
        data["program"] = this.program;
        data["product"] = this.product;
        data["dateAdded"] = this.dateAdded ? this.dateAdded.toISOString() : undefined;
        data["dateRequested"] = this.dateRequested ? this.dateRequested.toISOString() : undefined;
        data["source"] = this.source;
        data["comment"] = this.comment;
        data["attachmentLocation"] = this.attachmentLocation;
        data["attachmentName"] = this.attachmentName;
        data["newFlag"] = this.newFlag;
        return data;
    };
    HcpDNHExclusionsSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpDNHExclusionsSearchDto();
        result.init(json);
        return result;
    };
    return HcpDNHExclusionsSearchDto;
}());
export { HcpDNHExclusionsSearchDto };
var HcpDNHExclusionsDeleteDto = /** @class */ (function () {
    function HcpDNHExclusionsDeleteDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpDNHExclusionsDeleteDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.reason = _data["reason"];
        }
    };
    HcpDNHExclusionsDeleteDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpDNHExclusionsDeleteDto();
        result.init(data);
        return result;
    };
    HcpDNHExclusionsDeleteDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["reason"] = this.reason;
        return data;
    };
    HcpDNHExclusionsDeleteDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpDNHExclusionsDeleteDto();
        result.init(json);
        return result;
    };
    return HcpDNHExclusionsDeleteDto;
}());
export { HcpDNHExclusionsDeleteDto };
var AjaxResponse = /** @class */ (function () {
    function AjaxResponse(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponse.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"];
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponse.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponse();
        result.init(data);
        return result;
    };
    AjaxResponse.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponse.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponse();
        result.init(json);
        return result;
    };
    return AjaxResponse;
}());
export { AjaxResponse };
var HcpDNHExclusionDto = /** @class */ (function () {
    function HcpDNHExclusionDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HcpDNHExclusionDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.hcpId = _data["hcpId"];
            this.reasonId = _data["reasonId"];
            this.productGroupId = _data["productGroupId"];
            this.programId = _data["programId"];
            this.productId = _data["productId"];
            this.dateAdded = _data["dateAdded"] ? new Date(_data["dateAdded"].toString()) : undefined;
            this.dateRequested = _data["dateRequested"] ? new Date(_data["dateRequested"].toString()) : undefined;
            this.source = _data["source"];
            this.comment = _data["comment"];
            this.attachment = _data["attachment"] ? FileUpload.fromJS(_data["attachment"]) : undefined;
            this.newFlag = _data["newFlag"];
        }
    };
    HcpDNHExclusionDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HcpDNHExclusionDto();
        result.init(data);
        return result;
    };
    HcpDNHExclusionDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["hcpId"] = this.hcpId;
        data["reasonId"] = this.reasonId;
        data["productGroupId"] = this.productGroupId;
        data["programId"] = this.programId;
        data["productId"] = this.productId;
        data["dateAdded"] = this.dateAdded ? this.dateAdded.toISOString() : undefined;
        data["dateRequested"] = this.dateRequested ? this.dateRequested.toISOString() : undefined;
        data["source"] = this.source;
        data["comment"] = this.comment;
        data["attachment"] = this.attachment ? this.attachment.toJSON() : undefined;
        data["newFlag"] = this.newFlag;
        return data;
    };
    HcpDNHExclusionDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new HcpDNHExclusionDto();
        result.init(json);
        return result;
    };
    return HcpDNHExclusionDto;
}());
export { HcpDNHExclusionDto };
var FileUpload = /** @class */ (function () {
    function FileUpload(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    FileUpload.prototype.init = function (_data) {
        if (_data) {
            this.fileName = _data["fileName"];
            this.fileDescription = _data["fileDescription"];
            this.fileType = _data["fileType"];
            this.base64FileContent = _data["base64FileContent"];
            this.location = _data["location"];
            this.creationTime = _data["creationTime"] ? new Date(_data["creationTime"].toString()) : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.newFlag = _data["newFlag"];
            this.duplicateFileName = _data["duplicateFileName"];
        }
    };
    FileUpload.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new FileUpload();
        result.init(data);
        return result;
    };
    FileUpload.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["fileName"] = this.fileName;
        data["fileDescription"] = this.fileDescription;
        data["fileType"] = this.fileType;
        data["base64FileContent"] = this.base64FileContent;
        data["location"] = this.location;
        data["creationTime"] = this.creationTime ? this.creationTime.toISOString() : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["newFlag"] = this.newFlag;
        data["duplicateFileName"] = this.duplicateFileName;
        return data;
    };
    FileUpload.prototype.clone = function () {
        var json = this.toJSON();
        var result = new FileUpload();
        result.init(json);
        return result;
    };
    return FileUpload;
}());
export { FileUpload };
var AjaxResponseOfHcpDNHExclusionDto = /** @class */ (function () {
    function AjaxResponseOfHcpDNHExclusionDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfHcpDNHExclusionDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? HcpDNHExclusionDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfHcpDNHExclusionDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfHcpDNHExclusionDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfHcpDNHExclusionDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfHcpDNHExclusionDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfHcpDNHExclusionDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfHcpDNHExclusionDto;
}());
export { AjaxResponseOfHcpDNHExclusionDto };
export var LocalizedValueLanguage;
(function (LocalizedValueLanguage) {
    LocalizedValueLanguage[LocalizedValueLanguage["_0"] = 0] = "_0";
    LocalizedValueLanguage[LocalizedValueLanguage["_1"] = 1] = "_1";
})(LocalizedValueLanguage || (LocalizedValueLanguage = {}));
var SwaggerException = /** @class */ (function (_super) {
    __extends(SwaggerException, _super);
    function SwaggerException(message, status, response, headers, result) {
        var _this = _super.call(this) || this;
        _this.isSwaggerException = true;
        _this.message = message;
        _this.status = status;
        _this.response = response;
        _this.headers = headers;
        _this.result = result;
        return _this;
    }
    SwaggerException.isSwaggerException = function (obj) {
        return obj.isSwaggerException === true;
    };
    return SwaggerException;
}(Error));
export { SwaggerException };
function throwException(message, status, response, headers, result) {
    if (result !== null && result !== undefined)
        return Observable.throw(result);
    else
        return Observable.throw(new SwaggerException(message, status, response, headers, null));
}
function blobToText(blob) {
    return new Observable(function (observer) {
        if (!blob) {
            observer.next("");
            observer.complete();
        }
        else {
            var reader = new FileReader();
            reader.onload = function (event) {
                observer.next(event.target.result);
                observer.complete();
            };
            reader.readAsText(blob);
        }
    });
}
//# sourceMappingURL=om-hcp.js.map