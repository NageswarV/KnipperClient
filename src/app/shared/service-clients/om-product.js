/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.2.2.0 (NJsonSchema v10.1.4.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming
import { __decorate, __extends, __metadata, __param, __values } from "tslib";
import 'rxjs/add/observable/fromPromise';
import 'rxjs/add/observable/of';
import 'rxjs/add/observable/throw';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import 'rxjs/add/operator/mergeMap';
import 'rxjs/add/operator/catch';
import { Observable } from 'rxjs/Observable';
import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';
export var OM_PRODUCT_API_BASE_URL = new InjectionToken('OM_PRODUCT_API_BASE_URL');
var ServiceBaseConfig = /** @class */ (function () {
    function ServiceBaseConfig() {
    }
    return ServiceBaseConfig;
}());
export { ServiceBaseConfig };
var ServiceBase = /** @class */ (function () {
    function ServiceBase(config) {
        this.apimHeaderName = 'Ocp-Apim-Subscription-Key';
        this.tenantIdHeaderName = 'TenantId';
        this.tenantIdLocalStorageKey = 'samplicity-dtp-current-client';
        this.idTokenKey = 'samplicity-id-token';
        this.apiKey = config.key;
    }
    ServiceBase.prototype.transformOptions = function (options) {
        var headers = options.headers;
        if (this.apiKey) {
            headers = headers.append(this.apimHeaderName, this.apiKey);
        }
        var tenantId = sessionStorage.getItem(this.tenantIdLocalStorageKey);
        if (tenantId) {
            headers = headers.append(this.tenantIdHeaderName, tenantId);
        }
        var token = localStorage.getItem(this.idTokenKey);
        if (token) {
            headers = headers.append('Authorization', 'Bearer ' + token);
        }
        options.headers = headers;
        return Promise.resolve(options);
    };
    return ServiceBase;
}());
export { ServiceBase };
var OrderManagementProduct = /** @class */ (function (_super) {
    __extends(OrderManagementProduct, _super);
    function OrderManagementProduct(configuration, http, baseUrl) {
        var _this = _super.call(this, configuration) || this;
        _this.jsonParseReviver = undefined;
        _this.http = http;
        _this.baseUrl = baseUrl ? baseUrl : "";
        return _this;
    }
    /**
     * @param id (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.getProduct = function (id) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/GetProduct?";
        if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetProduct(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetProduct(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processGetProduct = function (response) {
        var e_1, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = ProductDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param id (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.getProductById = function (id) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/GetProductById?";
        if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetProductById(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetProductById(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processGetProductById = function (response) {
        var e_2, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfProductDetailsDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param filter (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.searchProducts = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/SearchProducts";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchProducts(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchProducts(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processSearchProducts = function (response) {
        var e_3, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfExistingProductSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param productId (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.getProductActivePrograms = function (productId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/GetProductActivePrograms?";
        if (productId !== undefined)
            url_ += "productId=" + encodeURIComponent("" + productId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetProductActivePrograms(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetProductActivePrograms(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processGetProductActivePrograms = function (response) {
        var e_4, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfProductActiveProgramDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param filter (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.searchNewProducts = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/SearchNewProducts";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchNewProducts(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchNewProducts(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processSearchNewProducts = function (response) {
        var e_5, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfWmsProductSummaryDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param wmsProductId (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.getNewProductDetails = function (wmsProductId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/GetNewProductDetails?";
        if (wmsProductId !== undefined)
            url_ += "wmsProductId=" + encodeURIComponent("" + wmsProductId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetNewProductDetails(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetNewProductDetails(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processGetNewProductDetails = function (response) {
        var e_6, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfProductDetailsDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    OrderManagementProduct.prototype.getSimpleProducts = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/GetSimpleProducts";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetSimpleProducts(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetSimpleProducts(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processGetSimpleProducts = function (response) {
        var e_7, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfListOfSimpleProductDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param dto (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.createProduct = function (dto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/CreateProduct";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(dto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processCreateProduct(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processCreateProduct(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processCreateProduct = function (response) {
        var e_8, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfProductDetailsDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param dto (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.updateProduct = function (dto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/UpdateProduct";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(dto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("put", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processUpdateProduct(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processUpdateProduct(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processUpdateProduct = function (response) {
        var e_9, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_9) throw e_9.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfProductDetailsDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param dto (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.refreshFromWms = function (dto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/RefreshFromWms";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(dto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processRefreshFromWms(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processRefreshFromWms(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processRefreshFromWms = function (response) {
        var e_10, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_10_1) { e_10 = { error: e_10_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_10) throw e_10.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfProductDetailsDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param dto (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.validateRefreshedProduct = function (dto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/ValidateRefreshedProduct";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(dto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processValidateRefreshedProduct(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processValidateRefreshedProduct(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processValidateRefreshedProduct = function (response) {
        var e_11, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_11_1) { e_11 = { error: e_11_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_11) throw e_11.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfProductDetailsDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param dto (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.searchProductsForDraftProgram = function (dto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/SearchProductsForDraftProgram";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(dto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchProductsForDraftProgram(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchProductsForDraftProgram(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processSearchProductsForDraftProgram = function (response) {
        var e_12, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_12_1) { e_12 = { error: e_12_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_12) throw e_12.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfProgramProductSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param brandId (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.getProductsByBrandId = function (brandId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Product/GetProductsByBrandId?";
        if (brandId !== undefined)
            url_ += "brandId=" + encodeURIComponent("" + brandId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetProductsByBrandId(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetProductsByBrandId(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processGetProductsByBrandId = function (response) {
        var e_13, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_13_1) { e_13 = { error: e_13_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_13) throw e_13.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfListOfBrandProductDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param id (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.getProductGroupById = function (id) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductGroup/GetProductGroupById?";
        if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetProductGroupById(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetProductGroupById(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processGetProductGroupById = function (response) {
        var e_14, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_14_1) { e_14 = { error: e_14_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_14) throw e_14.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfProductGroupDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    OrderManagementProduct.prototype.getNewProductGroup = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductGroup/GetNewProductGroup";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetNewProductGroup(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetNewProductGroup(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processGetNewProductGroup = function (response) {
        var e_15, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_15_1) { e_15 = { error: e_15_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_15) throw e_15.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfProductGroupDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param filter (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.searchProductGroups = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductGroup/SearchProductGroups";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchProductGroups(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchProductGroups(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processSearchProductGroups = function (response) {
        var e_16, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_16_1) { e_16 = { error: e_16_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_16) throw e_16.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfProductGroupSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param productGroupDto (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.createProductGroup = function (productGroupDto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductGroup/CreateProductGroup";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(productGroupDto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processCreateProductGroup(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processCreateProductGroup(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processCreateProductGroup = function (response) {
        var e_17, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_17_1) { e_17 = { error: e_17_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_17) throw e_17.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponse.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param productGroupDto (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.updateProductGroup = function (productGroupDto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductGroup/UpdateProductGroup";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(productGroupDto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("put", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processUpdateProductGroup(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processUpdateProductGroup(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processUpdateProductGroup = function (response) {
        var e_18, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_18_1) { e_18 = { error: e_18_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_18) throw e_18.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfProductGroupDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param isKnipper (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.getProductGroups = function (isKnipper) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductGroup/GetProductGroups?";
        if (isKnipper !== undefined)
            url_ += "isKnipper=" + encodeURIComponent("" + isKnipper) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetProductGroups(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetProductGroups(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processGetProductGroups = function (response) {
        var e_19, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_19_1) { e_19 = { error: e_19_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_19) throw e_19.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfProductGroupDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param isKnipper (optional)
     * @return Success
     */
    OrderManagementProduct.prototype.getActiveProductGroups = function (isKnipper) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductGroup/GetActiveProductGroups?";
        if (isKnipper !== undefined)
            url_ += "isKnipper=" + encodeURIComponent("" + isKnipper) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetActiveProductGroups(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetActiveProductGroups(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processGetActiveProductGroups = function (response) {
        var e_20, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_20_1) { e_20 = { error: e_20_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_20) throw e_20.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfProductGroupDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    OrderManagementProduct.prototype.getSimpleProductGroups = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductGroup/GetSimpleProductGroups";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetSimpleProductGroups(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetSimpleProductGroups(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementProduct.prototype.processGetSimpleProductGroups = function (response) {
        var e_21, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_21_1) { e_21 = { error: e_21_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_21) throw e_21.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfListOfSimpleProductGroupDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    OrderManagementProduct = __decorate([
        Injectable(),
        __param(0, Inject(ServiceBaseConfig)), __param(1, Inject(HttpClient)), __param(2, Optional()), __param(2, Inject(OM_PRODUCT_API_BASE_URL)),
        __metadata("design:paramtypes", [ServiceBaseConfig, HttpClient, String])
    ], OrderManagementProduct);
    return OrderManagementProduct;
}(ServiceBase));
export { OrderManagementProduct };
var ProductDto = /** @class */ (function () {
    function ProductDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProductDto.prototype.init = function (_data) {
        if (_data) {
            this.productCode = _data["productCode"];
            this.productName = _data["productName"];
            this.id = _data["id"];
        }
    };
    ProductDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ProductDto();
        result.init(data);
        return result;
    };
    ProductDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["productCode"] = this.productCode;
        data["productName"] = this.productName;
        data["id"] = this.id;
        return data;
    };
    ProductDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ProductDto();
        result.init(json);
        return result;
    };
    return ProductDto;
}());
export { ProductDto };
var AjaxResponseOfProductDetailsDto = /** @class */ (function () {
    function AjaxResponseOfProductDetailsDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfProductDetailsDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? ProductDetailsDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfProductDetailsDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfProductDetailsDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfProductDetailsDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfProductDetailsDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfProductDetailsDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfProductDetailsDto;
}());
export { AjaxResponseOfProductDetailsDto };
var ProductDetailsDto = /** @class */ (function () {
    function ProductDetailsDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProductDetailsDto.prototype.init = function (_data) {
        var e_22, _a, e_23, _b, e_24, _c, e_25, _d;
        if (_data) {
            this.id = _data["id"];
            this.knipperProductFlag = _data["knipperProductFlag"];
            this.wmsProductId = _data["wmsProductId"];
            this.productTypeId = _data["productTypeId"];
            this.currentStatusClassificationValueId = _data["currentStatusClassificationValueId"];
            this.clientName = _data["clientName"];
            this.productGroupId = _data["productGroupId"];
            this.distributedBy = _data["distributedBy"];
            this.clientProductName = _data["clientProductName"];
            this.clientProductId = _data["clientProductId"];
            this.genericProductName = _data["genericProductName"];
            this.nationalDrugCode = _data["nationalDrugCode"];
            this.dosageStrength = _data["dosageStrength"];
            this.productShortDescription = _data["productShortDescription"];
            this.productLongDescription = _data["productLongDescription"];
            this.distributionUnitOfMeasure = _data["distributionUnitOfMeasure"];
            this.multiplyingFactorNbr = _data["multiplyingFactorNbr"];
            this.displayQtyText = _data["displayQtyText"];
            this.productCostAmt = _data["productCostAmt"];
            this.deaScheduleName = _data["deaScheduleName"];
            this.opioidFlag = _data["opioidFlag"];
            this.antibioticFlag = _data["antibioticFlag"];
            this.hazardousFlag = _data["hazardousFlag"];
            this.temperatureControlledFlag = _data["temperatureControlledFlag"];
            this.orderableFlag = _data["orderableFlag"];
            this.autoIncludedFlag = _data["autoIncludedFlag"];
            this.smallOrderDepartmentFlag = _data["smallOrderDepartmentFlag"];
            this.selectDayShippingFlag = _data["selectDayShippingFlag"];
            this.orderSplitFlag = _data["orderSplitFlag"];
            this.lotControlledFlag = _data["lotControlledFlag"];
            this.serialTrackedFlag = _data["serialTrackedFlag"];
            this.signatureRequiredFlag = _data["signatureRequiredFlag"];
            this.aocRequiredFlag = _data["aocRequiredFlag"];
            this.animalHealthFlag = _data["animalHealthFlag"];
            this.initialClientName = _data["initialClientName"];
            this.refreshWarningFlag = _data["refreshWarningFlag"];
            this.refreshConfirmationFlag = _data["refreshConfirmationFlag"];
            this.refreshResultType = _data["refreshResultType"];
            if (Array.isArray(_data["invalidDataErrors"])) {
                this.invalidDataErrors = [];
                try {
                    for (var _e = __values(_data["invalidDataErrors"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.invalidDataErrors.push(item);
                    }
                }
                catch (e_22_1) { e_22 = { error: e_22_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                    }
                    finally { if (e_22) throw e_22.error; }
                }
            }
            if (Array.isArray(_data["invalidData"])) {
                this.invalidData = [];
                try {
                    for (var _g = __values(_data["invalidData"]), _h = _g.next(); !_h.done; _h = _g.next()) {
                        var item = _h.value;
                        this.invalidData.push(InvalidDataDto.fromJS(item));
                    }
                }
                catch (e_23_1) { e_23 = { error: e_23_1 }; }
                finally {
                    try {
                        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                    }
                    finally { if (e_23) throw e_23.error; }
                }
            }
            if (Array.isArray(_data["missingData"])) {
                this.missingData = [];
                try {
                    for (var _j = __values(_data["missingData"]), _k = _j.next(); !_k.done; _k = _j.next()) {
                        var item = _k.value;
                        this.missingData.push(ValidationResult.fromJS(item));
                    }
                }
                catch (e_24_1) { e_24 = { error: e_24_1 }; }
                finally {
                    try {
                        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                    }
                    finally { if (e_24) throw e_24.error; }
                }
            }
            if (Array.isArray(_data["names"])) {
                this.names = [];
                try {
                    for (var _l = __values(_data["names"]), _m = _l.next(); !_m.done; _m = _l.next()) {
                        var item = _m.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_25_1) { e_25 = { error: e_25_1 }; }
                finally {
                    try {
                        if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                    }
                    finally { if (e_25) throw e_25.error; }
                }
            }
        }
    };
    ProductDetailsDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ProductDetailsDto();
        result.init(data);
        return result;
    };
    ProductDetailsDto.prototype.toJSON = function (data) {
        var e_26, _a, e_27, _b, e_28, _c, e_29, _d;
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["knipperProductFlag"] = this.knipperProductFlag;
        data["wmsProductId"] = this.wmsProductId;
        data["productTypeId"] = this.productTypeId;
        data["currentStatusClassificationValueId"] = this.currentStatusClassificationValueId;
        data["clientName"] = this.clientName;
        data["productGroupId"] = this.productGroupId;
        data["distributedBy"] = this.distributedBy;
        data["clientProductName"] = this.clientProductName;
        data["clientProductId"] = this.clientProductId;
        data["genericProductName"] = this.genericProductName;
        data["nationalDrugCode"] = this.nationalDrugCode;
        data["dosageStrength"] = this.dosageStrength;
        data["productShortDescription"] = this.productShortDescription;
        data["productLongDescription"] = this.productLongDescription;
        data["distributionUnitOfMeasure"] = this.distributionUnitOfMeasure;
        data["multiplyingFactorNbr"] = this.multiplyingFactorNbr;
        data["displayQtyText"] = this.displayQtyText;
        data["productCostAmt"] = this.productCostAmt;
        data["deaScheduleName"] = this.deaScheduleName;
        data["opioidFlag"] = this.opioidFlag;
        data["antibioticFlag"] = this.antibioticFlag;
        data["hazardousFlag"] = this.hazardousFlag;
        data["temperatureControlledFlag"] = this.temperatureControlledFlag;
        data["orderableFlag"] = this.orderableFlag;
        data["autoIncludedFlag"] = this.autoIncludedFlag;
        data["smallOrderDepartmentFlag"] = this.smallOrderDepartmentFlag;
        data["selectDayShippingFlag"] = this.selectDayShippingFlag;
        data["orderSplitFlag"] = this.orderSplitFlag;
        data["lotControlledFlag"] = this.lotControlledFlag;
        data["serialTrackedFlag"] = this.serialTrackedFlag;
        data["signatureRequiredFlag"] = this.signatureRequiredFlag;
        data["aocRequiredFlag"] = this.aocRequiredFlag;
        data["animalHealthFlag"] = this.animalHealthFlag;
        data["initialClientName"] = this.initialClientName;
        data["refreshWarningFlag"] = this.refreshWarningFlag;
        data["refreshConfirmationFlag"] = this.refreshConfirmationFlag;
        data["refreshResultType"] = this.refreshResultType;
        if (Array.isArray(this.invalidDataErrors)) {
            data["invalidDataErrors"] = [];
            try {
                for (var _e = __values(this.invalidDataErrors), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["invalidDataErrors"].push(item);
                }
            }
            catch (e_26_1) { e_26 = { error: e_26_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_26) throw e_26.error; }
            }
        }
        if (Array.isArray(this.invalidData)) {
            data["invalidData"] = [];
            try {
                for (var _g = __values(this.invalidData), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var item = _h.value;
                    data["invalidData"].push(item.toJSON());
                }
            }
            catch (e_27_1) { e_27 = { error: e_27_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_27) throw e_27.error; }
            }
        }
        if (Array.isArray(this.missingData)) {
            data["missingData"] = [];
            try {
                for (var _j = __values(this.missingData), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var item = _k.value;
                    data["missingData"].push(item.toJSON());
                }
            }
            catch (e_28_1) { e_28 = { error: e_28_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_28) throw e_28.error; }
            }
        }
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _l = __values(this.names), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var item = _m.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_29_1) { e_29 = { error: e_29_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                }
                finally { if (e_29) throw e_29.error; }
            }
        }
        return data;
    };
    ProductDetailsDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ProductDetailsDto();
        result.init(json);
        return result;
    };
    return ProductDetailsDto;
}());
export { ProductDetailsDto };
var ErrorInfo = /** @class */ (function () {
    function ErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ErrorInfo.prototype.init = function (_data) {
        var e_30, _a;
        if (_data) {
            this.code = _data["code"];
            this.message = _data["message"];
            this.details = _data["details"];
            if (Array.isArray(_data["validationErrors"])) {
                this.validationErrors = [];
                try {
                    for (var _b = __values(_data["validationErrors"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.validationErrors.push(ValidationErrorInfo.fromJS(item));
                    }
                }
                catch (e_30_1) { e_30 = { error: e_30_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_30) throw e_30.error; }
                }
            }
        }
    };
    ErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ErrorInfo();
        result.init(data);
        return result;
    };
    ErrorInfo.prototype.toJSON = function (data) {
        var e_31, _a;
        data = typeof data === 'object' ? data : {};
        data["code"] = this.code;
        data["message"] = this.message;
        data["details"] = this.details;
        if (Array.isArray(this.validationErrors)) {
            data["validationErrors"] = [];
            try {
                for (var _b = __values(this.validationErrors), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["validationErrors"].push(item.toJSON());
                }
            }
            catch (e_31_1) { e_31 = { error: e_31_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_31) throw e_31.error; }
            }
        }
        return data;
    };
    ErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ErrorInfo();
        result.init(json);
        return result;
    };
    return ErrorInfo;
}());
export { ErrorInfo };
var InvalidDataDto = /** @class */ (function () {
    function InvalidDataDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    InvalidDataDto.prototype.init = function (_data) {
        if (_data) {
            this.fieldName = _data["fieldName"];
            this.value = _data["value"];
        }
    };
    InvalidDataDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new InvalidDataDto();
        result.init(data);
        return result;
    };
    InvalidDataDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["fieldName"] = this.fieldName;
        data["value"] = this.value;
        return data;
    };
    InvalidDataDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new InvalidDataDto();
        result.init(json);
        return result;
    };
    return InvalidDataDto;
}());
export { InvalidDataDto };
var ValidationResult = /** @class */ (function () {
    function ValidationResult(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ValidationResult.prototype.init = function (_data) {
        var e_32, _a;
        if (_data) {
            if (Array.isArray(_data["memberNames"])) {
                this.memberNames = [];
                try {
                    for (var _b = __values(_data["memberNames"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.memberNames.push(item);
                    }
                }
                catch (e_32_1) { e_32 = { error: e_32_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_32) throw e_32.error; }
                }
            }
            this.errorMessage = _data["errorMessage"];
        }
    };
    ValidationResult.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValidationResult();
        result.init(data);
        return result;
    };
    ValidationResult.prototype.toJSON = function (data) {
        var e_33, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.memberNames)) {
            data["memberNames"] = [];
            try {
                for (var _b = __values(this.memberNames), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["memberNames"].push(item);
                }
            }
            catch (e_33_1) { e_33 = { error: e_33_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_33) throw e_33.error; }
            }
        }
        data["errorMessage"] = this.errorMessage;
        return data;
    };
    ValidationResult.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ValidationResult();
        result.init(json);
        return result;
    };
    return ValidationResult;
}());
export { ValidationResult };
var LocalizedValue = /** @class */ (function () {
    function LocalizedValue(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    LocalizedValue.prototype.init = function (_data) {
        if (_data) {
            this.language = _data["language"];
            this.value = _data["value"];
        }
    };
    LocalizedValue.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new LocalizedValue();
        result.init(data);
        return result;
    };
    LocalizedValue.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["language"] = this.language;
        data["value"] = this.value;
        return data;
    };
    LocalizedValue.prototype.clone = function () {
        var json = this.toJSON();
        var result = new LocalizedValue();
        result.init(json);
        return result;
    };
    return LocalizedValue;
}());
export { LocalizedValue };
var ValidationErrorInfo = /** @class */ (function () {
    function ValidationErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ValidationErrorInfo.prototype.init = function (_data) {
        var e_34, _a;
        if (_data) {
            this.message = _data["message"];
            if (Array.isArray(_data["members"])) {
                this.members = [];
                try {
                    for (var _b = __values(_data["members"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.members.push(item);
                    }
                }
                catch (e_34_1) { e_34 = { error: e_34_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_34) throw e_34.error; }
                }
            }
        }
    };
    ValidationErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValidationErrorInfo();
        result.init(data);
        return result;
    };
    ValidationErrorInfo.prototype.toJSON = function (data) {
        var e_35, _a;
        data = typeof data === 'object' ? data : {};
        data["message"] = this.message;
        if (Array.isArray(this.members)) {
            data["members"] = [];
            try {
                for (var _b = __values(this.members), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["members"].push(item);
                }
            }
            catch (e_35_1) { e_35 = { error: e_35_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_35) throw e_35.error; }
            }
        }
        return data;
    };
    ValidationErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ValidationErrorInfo();
        result.init(json);
        return result;
    };
    return ValidationErrorInfo;
}());
export { ValidationErrorInfo };
var ExistingProductSearchFilterDto = /** @class */ (function () {
    function ExistingProductSearchFilterDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ExistingProductSearchFilterDto.prototype.init = function (_data) {
        var e_36, _a, e_37, _b, e_38, _c;
        if (_data) {
            this.brandName = _data["brandName"];
            if (Array.isArray(_data["currentStatusClassificationValueIds"])) {
                this.currentStatusClassificationValueIds = [];
                try {
                    for (var _d = __values(_data["currentStatusClassificationValueIds"]), _e = _d.next(); !_e.done; _e = _d.next()) {
                        var item = _e.value;
                        this.currentStatusClassificationValueIds.push(item);
                    }
                }
                catch (e_36_1) { e_36 = { error: e_36_1 }; }
                finally {
                    try {
                        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                    }
                    finally { if (e_36) throw e_36.error; }
                }
            }
            if (Array.isArray(_data["currentProductTypeReferenceIds"])) {
                this.currentProductTypeReferenceIds = [];
                try {
                    for (var _f = __values(_data["currentProductTypeReferenceIds"]), _g = _f.next(); !_g.done; _g = _f.next()) {
                        var item = _g.value;
                        this.currentProductTypeReferenceIds.push(item);
                    }
                }
                catch (e_37_1) { e_37 = { error: e_37_1 }; }
                finally {
                    try {
                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                    }
                    finally { if (e_37) throw e_37.error; }
                }
            }
            this.wmsProductName = _data["wmsProductName"];
            this.wmsProductId = _data["wmsProductId"];
            if (Array.isArray(_data["isKnipperProductFlags"])) {
                this.isKnipperProductFlags = [];
                try {
                    for (var _h = __values(_data["isKnipperProductFlags"]), _j = _h.next(); !_j.done; _j = _h.next()) {
                        var item = _j.value;
                        this.isKnipperProductFlags.push(item);
                    }
                }
                catch (e_38_1) { e_38 = { error: e_38_1 }; }
                finally {
                    try {
                        if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                    }
                    finally { if (e_38) throw e_38.error; }
                }
            }
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.sortBy = _data["sortBy"];
            this.filterString = _data["filterString"];
        }
    };
    ExistingProductSearchFilterDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ExistingProductSearchFilterDto();
        result.init(data);
        return result;
    };
    ExistingProductSearchFilterDto.prototype.toJSON = function (data) {
        var e_39, _a, e_40, _b, e_41, _c;
        data = typeof data === 'object' ? data : {};
        data["brandName"] = this.brandName;
        if (Array.isArray(this.currentStatusClassificationValueIds)) {
            data["currentStatusClassificationValueIds"] = [];
            try {
                for (var _d = __values(this.currentStatusClassificationValueIds), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var item = _e.value;
                    data["currentStatusClassificationValueIds"].push(item);
                }
            }
            catch (e_39_1) { e_39 = { error: e_39_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                }
                finally { if (e_39) throw e_39.error; }
            }
        }
        if (Array.isArray(this.currentProductTypeReferenceIds)) {
            data["currentProductTypeReferenceIds"] = [];
            try {
                for (var _f = __values(this.currentProductTypeReferenceIds), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var item = _g.value;
                    data["currentProductTypeReferenceIds"].push(item);
                }
            }
            catch (e_40_1) { e_40 = { error: e_40_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                }
                finally { if (e_40) throw e_40.error; }
            }
        }
        data["wmsProductName"] = this.wmsProductName;
        data["wmsProductId"] = this.wmsProductId;
        if (Array.isArray(this.isKnipperProductFlags)) {
            data["isKnipperProductFlags"] = [];
            try {
                for (var _h = __values(this.isKnipperProductFlags), _j = _h.next(); !_j.done; _j = _h.next()) {
                    var item = _j.value;
                    data["isKnipperProductFlags"].push(item);
                }
            }
            catch (e_41_1) { e_41 = { error: e_41_1 }; }
            finally {
                try {
                    if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                }
                finally { if (e_41) throw e_41.error; }
            }
        }
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["sortBy"] = this.sortBy;
        data["filterString"] = this.filterString;
        return data;
    };
    ExistingProductSearchFilterDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ExistingProductSearchFilterDto();
        result.init(json);
        return result;
    };
    return ExistingProductSearchFilterDto;
}());
export { ExistingProductSearchFilterDto };
var AjaxResponseOfPagedResultOfExistingProductSearchDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfExistingProductSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfExistingProductSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfExistingProductSearchDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfExistingProductSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfExistingProductSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfExistingProductSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfExistingProductSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfExistingProductSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfExistingProductSearchDto;
}());
export { AjaxResponseOfPagedResultOfExistingProductSearchDto };
var PagedResultOfExistingProductSearchDto = /** @class */ (function () {
    function PagedResultOfExistingProductSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfExistingProductSearchDto.prototype.init = function (_data) {
        var e_42, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(ExistingProductSearchDto.fromJS(item));
                    }
                }
                catch (e_42_1) { e_42 = { error: e_42_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_42) throw e_42.error; }
                }
            }
        }
    };
    PagedResultOfExistingProductSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfExistingProductSearchDto();
        result.init(data);
        return result;
    };
    PagedResultOfExistingProductSearchDto.prototype.toJSON = function (data) {
        var e_43, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_43_1) { e_43 = { error: e_43_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_43) throw e_43.error; }
            }
        }
        return data;
    };
    PagedResultOfExistingProductSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfExistingProductSearchDto();
        result.init(json);
        return result;
    };
    return PagedResultOfExistingProductSearchDto;
}());
export { PagedResultOfExistingProductSearchDto };
var ExistingProductSearchDto = /** @class */ (function () {
    function ExistingProductSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ExistingProductSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.brandName = _data["brandName"];
            this.activeProgramsCount = _data["activeProgramsCount"];
            this.currentStatusClassificationValueId = _data["currentStatusClassificationValueId"];
            this.productTypeId = _data["productTypeId"];
            this.wmsProductId = _data["wmsProductId"];
            this.wmsProductName = _data["wmsProductName"];
            this.knipperProductFlag = _data["knipperProductFlag"];
        }
    };
    ExistingProductSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ExistingProductSearchDto();
        result.init(data);
        return result;
    };
    ExistingProductSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["brandName"] = this.brandName;
        data["activeProgramsCount"] = this.activeProgramsCount;
        data["currentStatusClassificationValueId"] = this.currentStatusClassificationValueId;
        data["productTypeId"] = this.productTypeId;
        data["wmsProductId"] = this.wmsProductId;
        data["wmsProductName"] = this.wmsProductName;
        data["knipperProductFlag"] = this.knipperProductFlag;
        return data;
    };
    ExistingProductSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ExistingProductSearchDto();
        result.init(json);
        return result;
    };
    return ExistingProductSearchDto;
}());
export { ExistingProductSearchDto };
var AjaxResponseOfIListOfProductActiveProgramDto = /** @class */ (function () {
    function AjaxResponseOfIListOfProductActiveProgramDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfProductActiveProgramDto.prototype.init = function (_data) {
        var e_44, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(ProductActiveProgramDto.fromJS(item));
                    }
                }
                catch (e_44_1) { e_44 = { error: e_44_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_44) throw e_44.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfIListOfProductActiveProgramDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfProductActiveProgramDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfProductActiveProgramDto.prototype.toJSON = function (data) {
        var e_45, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_45_1) { e_45 = { error: e_45_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_45) throw e_45.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfProductActiveProgramDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfProductActiveProgramDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfProductActiveProgramDto;
}());
export { AjaxResponseOfIListOfProductActiveProgramDto };
var ProductActiveProgramDto = /** @class */ (function () {
    function ProductActiveProgramDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProductActiveProgramDto.prototype.init = function (_data) {
        if (_data) {
            this.programId = _data["programId"];
            this.programName = _data["programName"];
            this.jobNumber = _data["jobNumber"];
        }
    };
    ProductActiveProgramDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ProductActiveProgramDto();
        result.init(data);
        return result;
    };
    ProductActiveProgramDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["programId"] = this.programId;
        data["programName"] = this.programName;
        data["jobNumber"] = this.jobNumber;
        return data;
    };
    ProductActiveProgramDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ProductActiveProgramDto();
        result.init(json);
        return result;
    };
    return ProductActiveProgramDto;
}());
export { ProductActiveProgramDto };
var NewProductSearchFilterDto = /** @class */ (function () {
    function NewProductSearchFilterDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    NewProductSearchFilterDto.prototype.init = function (_data) {
        var e_46, _a, e_47, _b;
        if (_data) {
            if (Array.isArray(_data["currentProductTypeReferenceCodes"])) {
                this.currentProductTypeReferenceCodes = [];
                try {
                    for (var _c = __values(_data["currentProductTypeReferenceCodes"]), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        this.currentProductTypeReferenceCodes.push(item);
                    }
                }
                catch (e_46_1) { e_46 = { error: e_46_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_46) throw e_46.error; }
                }
            }
            this.wmsProductName = _data["wmsProductName"];
            this.wmsProductId = _data["wmsProductId"];
            if (Array.isArray(_data["isKnipperProductFlags"])) {
                this.isKnipperProductFlags = [];
                try {
                    for (var _e = __values(_data["isKnipperProductFlags"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.isKnipperProductFlags.push(item);
                    }
                }
                catch (e_47_1) { e_47 = { error: e_47_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_47) throw e_47.error; }
                }
            }
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.sortBy = _data["sortBy"];
            this.filterString = _data["filterString"];
        }
    };
    NewProductSearchFilterDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new NewProductSearchFilterDto();
        result.init(data);
        return result;
    };
    NewProductSearchFilterDto.prototype.toJSON = function (data) {
        var e_48, _a, e_49, _b;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.currentProductTypeReferenceCodes)) {
            data["currentProductTypeReferenceCodes"] = [];
            try {
                for (var _c = __values(this.currentProductTypeReferenceCodes), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var item = _d.value;
                    data["currentProductTypeReferenceCodes"].push(item);
                }
            }
            catch (e_48_1) { e_48 = { error: e_48_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_48) throw e_48.error; }
            }
        }
        data["wmsProductName"] = this.wmsProductName;
        data["wmsProductId"] = this.wmsProductId;
        if (Array.isArray(this.isKnipperProductFlags)) {
            data["isKnipperProductFlags"] = [];
            try {
                for (var _e = __values(this.isKnipperProductFlags), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["isKnipperProductFlags"].push(item);
                }
            }
            catch (e_49_1) { e_49 = { error: e_49_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_49) throw e_49.error; }
            }
        }
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["sortBy"] = this.sortBy;
        data["filterString"] = this.filterString;
        return data;
    };
    NewProductSearchFilterDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new NewProductSearchFilterDto();
        result.init(json);
        return result;
    };
    return NewProductSearchFilterDto;
}());
export { NewProductSearchFilterDto };
var AjaxResponseOfPagedResultOfWmsProductSummaryDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfWmsProductSummaryDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfWmsProductSummaryDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfWmsProductSummaryDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfWmsProductSummaryDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfWmsProductSummaryDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfWmsProductSummaryDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfWmsProductSummaryDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfWmsProductSummaryDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfWmsProductSummaryDto;
}());
export { AjaxResponseOfPagedResultOfWmsProductSummaryDto };
var PagedResultOfWmsProductSummaryDto = /** @class */ (function () {
    function PagedResultOfWmsProductSummaryDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfWmsProductSummaryDto.prototype.init = function (_data) {
        var e_50, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(WmsProductSummaryDto.fromJS(item));
                    }
                }
                catch (e_50_1) { e_50 = { error: e_50_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_50) throw e_50.error; }
                }
            }
        }
    };
    PagedResultOfWmsProductSummaryDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfWmsProductSummaryDto();
        result.init(data);
        return result;
    };
    PagedResultOfWmsProductSummaryDto.prototype.toJSON = function (data) {
        var e_51, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_51_1) { e_51 = { error: e_51_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_51) throw e_51.error; }
            }
        }
        return data;
    };
    PagedResultOfWmsProductSummaryDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfWmsProductSummaryDto();
        result.init(json);
        return result;
    };
    return PagedResultOfWmsProductSummaryDto;
}());
export { PagedResultOfWmsProductSummaryDto };
var WmsProductSummaryDto = /** @class */ (function () {
    function WmsProductSummaryDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    WmsProductSummaryDto.prototype.init = function (_data) {
        if (_data) {
            this.wmsProductId = _data["wmsProductId"];
            this.wmsProductType = _data["wmsProductType"];
            this.wmsProductName = _data["wmsProductName"];
            this.companyCode = _data["companyCode"];
            this.isKnipperProduct = _data["isKnipperProduct"];
        }
    };
    WmsProductSummaryDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new WmsProductSummaryDto();
        result.init(data);
        return result;
    };
    WmsProductSummaryDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["wmsProductId"] = this.wmsProductId;
        data["wmsProductType"] = this.wmsProductType;
        data["wmsProductName"] = this.wmsProductName;
        data["companyCode"] = this.companyCode;
        data["isKnipperProduct"] = this.isKnipperProduct;
        return data;
    };
    WmsProductSummaryDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new WmsProductSummaryDto();
        result.init(json);
        return result;
    };
    return WmsProductSummaryDto;
}());
export { WmsProductSummaryDto };
var AjaxResponseOfListOfSimpleProductDto = /** @class */ (function () {
    function AjaxResponseOfListOfSimpleProductDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfListOfSimpleProductDto.prototype.init = function (_data) {
        var e_52, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(SimpleProductDto.fromJS(item));
                    }
                }
                catch (e_52_1) { e_52 = { error: e_52_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_52) throw e_52.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfListOfSimpleProductDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfListOfSimpleProductDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfListOfSimpleProductDto.prototype.toJSON = function (data) {
        var e_53, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_53_1) { e_53 = { error: e_53_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_53) throw e_53.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfListOfSimpleProductDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfListOfSimpleProductDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfListOfSimpleProductDto;
}());
export { AjaxResponseOfListOfSimpleProductDto };
var SimpleProductDto = /** @class */ (function () {
    function SimpleProductDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    SimpleProductDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.productName = _data["productName"];
        }
    };
    SimpleProductDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new SimpleProductDto();
        result.init(data);
        return result;
    };
    SimpleProductDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["productName"] = this.productName;
        return data;
    };
    SimpleProductDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new SimpleProductDto();
        result.init(json);
        return result;
    };
    return SimpleProductDto;
}());
export { SimpleProductDto };
var ProgramProductSearchFilterDto = /** @class */ (function () {
    function ProgramProductSearchFilterDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProgramProductSearchFilterDto.prototype.init = function (_data) {
        var e_54, _a;
        if (_data) {
            this.programConfigurationId = _data["programConfigurationId"];
            this.wmsProductName = _data["wmsProductName"];
            this.wmsProductId = _data["wmsProductId"];
            this.knipperFlag = _data["knipperFlag"];
            if (Array.isArray(_data["brands"])) {
                this.brands = [];
                try {
                    for (var _b = __values(_data["brands"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.brands.push(item);
                    }
                }
                catch (e_54_1) { e_54 = { error: e_54_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_54) throw e_54.error; }
                }
            }
            this.productTypeId = _data["productTypeId"];
            this.productsIncludedInProgramFlag = _data["productsIncludedInProgramFlag"];
            this.orderableFlag = _data["orderableFlag"];
            this.autoIncludeFlag = _data["autoIncludeFlag"];
            this.selectDayShippingFlag = _data["selectDayShippingFlag"];
            this.sodFlag = _data["sodFlag"];
        }
    };
    ProgramProductSearchFilterDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ProgramProductSearchFilterDto();
        result.init(data);
        return result;
    };
    ProgramProductSearchFilterDto.prototype.toJSON = function (data) {
        var e_55, _a;
        data = typeof data === 'object' ? data : {};
        data["programConfigurationId"] = this.programConfigurationId;
        data["wmsProductName"] = this.wmsProductName;
        data["wmsProductId"] = this.wmsProductId;
        data["knipperFlag"] = this.knipperFlag;
        if (Array.isArray(this.brands)) {
            data["brands"] = [];
            try {
                for (var _b = __values(this.brands), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["brands"].push(item);
                }
            }
            catch (e_55_1) { e_55 = { error: e_55_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_55) throw e_55.error; }
            }
        }
        data["productTypeId"] = this.productTypeId;
        data["productsIncludedInProgramFlag"] = this.productsIncludedInProgramFlag;
        data["orderableFlag"] = this.orderableFlag;
        data["autoIncludeFlag"] = this.autoIncludeFlag;
        data["selectDayShippingFlag"] = this.selectDayShippingFlag;
        data["sodFlag"] = this.sodFlag;
        return data;
    };
    ProgramProductSearchFilterDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ProgramProductSearchFilterDto();
        result.init(json);
        return result;
    };
    return ProgramProductSearchFilterDto;
}());
export { ProgramProductSearchFilterDto };
var AjaxResponseOfIListOfProgramProductSearchDto = /** @class */ (function () {
    function AjaxResponseOfIListOfProgramProductSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfProgramProductSearchDto.prototype.init = function (_data) {
        var e_56, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(ProgramProductSearchDto.fromJS(item));
                    }
                }
                catch (e_56_1) { e_56 = { error: e_56_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_56) throw e_56.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfIListOfProgramProductSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfProgramProductSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfProgramProductSearchDto.prototype.toJSON = function (data) {
        var e_57, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_57_1) { e_57 = { error: e_57_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_57) throw e_57.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfProgramProductSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfProgramProductSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfProgramProductSearchDto;
}());
export { AjaxResponseOfIListOfProgramProductSearchDto };
var ProgramProductSearchDto = /** @class */ (function () {
    function ProgramProductSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProgramProductSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.programConfigurationId = _data["programConfigurationId"];
            this.productId = _data["productId"];
            this.wmsProductName = _data["wmsProductName"];
            this.wmsProductId = _data["wmsProductId"];
            this.knipperFlag = _data["knipperFlag"];
            this.brandId = _data["brandId"];
            this.productTypeId = _data["productTypeId"];
            this.orderableFlag = _data["orderableFlag"];
            this.autoIncludeFlag = _data["autoIncludeFlag"];
            this.selectDayShippingFlag = _data["selectDayShippingFlag"];
            this.sodFlag = _data["sodFlag"];
            this.isSelected = _data["isSelected"];
        }
    };
    ProgramProductSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ProgramProductSearchDto();
        result.init(data);
        return result;
    };
    ProgramProductSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["programConfigurationId"] = this.programConfigurationId;
        data["productId"] = this.productId;
        data["wmsProductName"] = this.wmsProductName;
        data["wmsProductId"] = this.wmsProductId;
        data["knipperFlag"] = this.knipperFlag;
        data["brandId"] = this.brandId;
        data["productTypeId"] = this.productTypeId;
        data["orderableFlag"] = this.orderableFlag;
        data["autoIncludeFlag"] = this.autoIncludeFlag;
        data["selectDayShippingFlag"] = this.selectDayShippingFlag;
        data["sodFlag"] = this.sodFlag;
        data["isSelected"] = this.isSelected;
        return data;
    };
    ProgramProductSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ProgramProductSearchDto();
        result.init(json);
        return result;
    };
    return ProgramProductSearchDto;
}());
export { ProgramProductSearchDto };
var AjaxResponseOfListOfBrandProductDto = /** @class */ (function () {
    function AjaxResponseOfListOfBrandProductDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfListOfBrandProductDto.prototype.init = function (_data) {
        var e_58, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(BrandProductDto.fromJS(item));
                    }
                }
                catch (e_58_1) { e_58 = { error: e_58_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_58) throw e_58.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfListOfBrandProductDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfListOfBrandProductDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfListOfBrandProductDto.prototype.toJSON = function (data) {
        var e_59, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_59_1) { e_59 = { error: e_59_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_59) throw e_59.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfListOfBrandProductDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfListOfBrandProductDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfListOfBrandProductDto;
}());
export { AjaxResponseOfListOfBrandProductDto };
var BrandProductDto = /** @class */ (function () {
    function BrandProductDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    BrandProductDto.prototype.init = function (_data) {
        if (_data) {
            this.wmsProductName = _data["wmsProductName"];
            this.wmsProductId = _data["wmsProductId"];
            this.productStatus = _data["productStatus"];
            this.isDeleted = _data["isDeleted"];
        }
    };
    BrandProductDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new BrandProductDto();
        result.init(data);
        return result;
    };
    BrandProductDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["wmsProductName"] = this.wmsProductName;
        data["wmsProductId"] = this.wmsProductId;
        data["productStatus"] = this.productStatus;
        data["isDeleted"] = this.isDeleted;
        return data;
    };
    BrandProductDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new BrandProductDto();
        result.init(json);
        return result;
    };
    return BrandProductDto;
}());
export { BrandProductDto };
var AjaxResponseOfProductGroupDto = /** @class */ (function () {
    function AjaxResponseOfProductGroupDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfProductGroupDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? ProductGroupDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfProductGroupDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfProductGroupDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfProductGroupDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfProductGroupDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfProductGroupDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfProductGroupDto;
}());
export { AjaxResponseOfProductGroupDto };
var ProductGroupDto = /** @class */ (function () {
    function ProductGroupDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProductGroupDto.prototype.init = function (_data) {
        var e_60, _a, e_61, _b;
        if (_data) {
            this.id = _data["id"];
            this.creatorUserId = _data["creatorUserId"];
            this.productGroupCode = _data["productGroupCode"];
            this.productGroupName = _data["productGroupName"];
            this.productGroupDesc = _data["productGroupDesc"];
            this.sortOrderNumber = _data["sortOrderNumber"];
            this.topFlag = _data["topFlag"];
            this.bottomFlag = _data["bottomFlag"];
            this.comments = _data["comments"];
            this.currentStatusDate = _data["currentStatusDate"] ? new Date(_data["currentStatusDate"].toString()) : undefined;
            this.mainImageProductAttachmentId = _data["mainImageProductAttachmentId"];
            this.currentStatusClassificationValueId = _data["currentStatusClassificationValueId"];
            this.productGroupTypeClassificationValueId = _data["productGroupTypeClassificationValueId"];
            this.sortPriorityFlag = _data["sortPriorityFlag"];
            this.hasBeenActivatedFlag = _data["hasBeenActivatedFlag"];
            this.clientProductGroupId = _data["clientProductGroupId"];
            this.distributedBy = _data["distributedBy"];
            this.manufacturedBy = _data["manufacturedBy"];
            this.tenantId = _data["tenantId"];
            if (Array.isArray(_data["productAttachments"])) {
                this.productAttachments = [];
                try {
                    for (var _c = __values(_data["productAttachments"]), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        this.productAttachments.push(ProductAttachmentDto.fromJS(item));
                    }
                }
                catch (e_60_1) { e_60 = { error: e_60_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_60) throw e_60.error; }
                }
            }
            if (Array.isArray(_data["names"])) {
                this.names = [];
                try {
                    for (var _e = __values(_data["names"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_61_1) { e_61 = { error: e_61_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_61) throw e_61.error; }
                }
            }
        }
    };
    ProductGroupDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ProductGroupDto();
        result.init(data);
        return result;
    };
    ProductGroupDto.prototype.toJSON = function (data) {
        var e_62, _a, e_63, _b;
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["creatorUserId"] = this.creatorUserId;
        data["productGroupCode"] = this.productGroupCode;
        data["productGroupName"] = this.productGroupName;
        data["productGroupDesc"] = this.productGroupDesc;
        data["sortOrderNumber"] = this.sortOrderNumber;
        data["topFlag"] = this.topFlag;
        data["bottomFlag"] = this.bottomFlag;
        data["comments"] = this.comments;
        data["currentStatusDate"] = this.currentStatusDate ? this.currentStatusDate.toISOString() : undefined;
        data["mainImageProductAttachmentId"] = this.mainImageProductAttachmentId;
        data["currentStatusClassificationValueId"] = this.currentStatusClassificationValueId;
        data["productGroupTypeClassificationValueId"] = this.productGroupTypeClassificationValueId;
        data["sortPriorityFlag"] = this.sortPriorityFlag;
        data["hasBeenActivatedFlag"] = this.hasBeenActivatedFlag;
        data["clientProductGroupId"] = this.clientProductGroupId;
        data["distributedBy"] = this.distributedBy;
        data["manufacturedBy"] = this.manufacturedBy;
        data["tenantId"] = this.tenantId;
        if (Array.isArray(this.productAttachments)) {
            data["productAttachments"] = [];
            try {
                for (var _c = __values(this.productAttachments), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var item = _d.value;
                    data["productAttachments"].push(item.toJSON());
                }
            }
            catch (e_62_1) { e_62 = { error: e_62_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_62) throw e_62.error; }
            }
        }
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _e = __values(this.names), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_63_1) { e_63 = { error: e_63_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_63) throw e_63.error; }
            }
        }
        return data;
    };
    ProductGroupDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ProductGroupDto();
        result.init(json);
        return result;
    };
    return ProductGroupDto;
}());
export { ProductGroupDto };
var ProductAttachmentDto = /** @class */ (function () {
    function ProductAttachmentDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProductAttachmentDto.prototype.init = function (_data) {
        if (_data) {
            this.productGroupId = _data["productGroupId"];
            this.location = _data["location"];
            this.comments = _data["comments"];
            this.attachmentTypeClassificationValueId = _data["attachmentTypeClassificationValueId"];
            this.sequenceNumber = _data["sequenceNumber"];
            this.newFlag = _data["newFlag"];
            this.fileUpload = _data["fileUpload"] ? FileUpload.fromJS(_data["fileUpload"]) : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.creationTime = _data["creationTime"] ? new Date(_data["creationTime"].toString()) : undefined;
            this.id = _data["id"];
        }
    };
    ProductAttachmentDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ProductAttachmentDto();
        result.init(data);
        return result;
    };
    ProductAttachmentDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["productGroupId"] = this.productGroupId;
        data["location"] = this.location;
        data["comments"] = this.comments;
        data["attachmentTypeClassificationValueId"] = this.attachmentTypeClassificationValueId;
        data["sequenceNumber"] = this.sequenceNumber;
        data["newFlag"] = this.newFlag;
        data["fileUpload"] = this.fileUpload ? this.fileUpload.toJSON() : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["creationTime"] = this.creationTime ? this.creationTime.toISOString() : undefined;
        data["id"] = this.id;
        return data;
    };
    ProductAttachmentDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ProductAttachmentDto();
        result.init(json);
        return result;
    };
    return ProductAttachmentDto;
}());
export { ProductAttachmentDto };
var FileUpload = /** @class */ (function () {
    function FileUpload(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    FileUpload.prototype.init = function (_data) {
        if (_data) {
            this.fileName = _data["fileName"];
            this.fileDescription = _data["fileDescription"];
            this.fileType = _data["fileType"];
            this.base64FileContent = _data["base64FileContent"];
            this.location = _data["location"];
            this.creationTime = _data["creationTime"] ? new Date(_data["creationTime"].toString()) : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.newFlag = _data["newFlag"];
        }
    };
    FileUpload.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new FileUpload();
        result.init(data);
        return result;
    };
    FileUpload.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["fileName"] = this.fileName;
        data["fileDescription"] = this.fileDescription;
        data["fileType"] = this.fileType;
        data["base64FileContent"] = this.base64FileContent;
        data["location"] = this.location;
        data["creationTime"] = this.creationTime ? this.creationTime.toISOString() : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["newFlag"] = this.newFlag;
        return data;
    };
    FileUpload.prototype.clone = function () {
        var json = this.toJSON();
        var result = new FileUpload();
        result.init(json);
        return result;
    };
    return FileUpload;
}());
export { FileUpload };
var ProductGroupSearchFilterDto = /** @class */ (function () {
    function ProductGroupSearchFilterDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProductGroupSearchFilterDto.prototype.init = function (_data) {
        var e_64, _a, e_65, _b;
        if (_data) {
            this.productGroupName = _data["productGroupName"];
            this.clientProductGroupId = _data["clientProductGroupId"];
            this.wmsProductName = _data["wmsProductName"];
            this.wmsProductID = _data["wmsProductID"];
            if (Array.isArray(_data["sortPriorityFlags"])) {
                this.sortPriorityFlags = [];
                try {
                    for (var _c = __values(_data["sortPriorityFlags"]), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        this.sortPriorityFlags.push(item);
                    }
                }
                catch (e_64_1) { e_64 = { error: e_64_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_64) throw e_64.error; }
                }
            }
            if (Array.isArray(_data["currentStatusClassificationValueIds"])) {
                this.currentStatusClassificationValueIds = [];
                try {
                    for (var _e = __values(_data["currentStatusClassificationValueIds"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.currentStatusClassificationValueIds.push(item);
                    }
                }
                catch (e_65_1) { e_65 = { error: e_65_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_65) throw e_65.error; }
                }
            }
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.sortBy = _data["sortBy"];
            this.filterString = _data["filterString"];
        }
    };
    ProductGroupSearchFilterDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ProductGroupSearchFilterDto();
        result.init(data);
        return result;
    };
    ProductGroupSearchFilterDto.prototype.toJSON = function (data) {
        var e_66, _a, e_67, _b;
        data = typeof data === 'object' ? data : {};
        data["productGroupName"] = this.productGroupName;
        data["clientProductGroupId"] = this.clientProductGroupId;
        data["wmsProductName"] = this.wmsProductName;
        data["wmsProductID"] = this.wmsProductID;
        if (Array.isArray(this.sortPriorityFlags)) {
            data["sortPriorityFlags"] = [];
            try {
                for (var _c = __values(this.sortPriorityFlags), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var item = _d.value;
                    data["sortPriorityFlags"].push(item);
                }
            }
            catch (e_66_1) { e_66 = { error: e_66_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_66) throw e_66.error; }
            }
        }
        if (Array.isArray(this.currentStatusClassificationValueIds)) {
            data["currentStatusClassificationValueIds"] = [];
            try {
                for (var _e = __values(this.currentStatusClassificationValueIds), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["currentStatusClassificationValueIds"].push(item);
                }
            }
            catch (e_67_1) { e_67 = { error: e_67_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_67) throw e_67.error; }
            }
        }
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["sortBy"] = this.sortBy;
        data["filterString"] = this.filterString;
        return data;
    };
    ProductGroupSearchFilterDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ProductGroupSearchFilterDto();
        result.init(json);
        return result;
    };
    return ProductGroupSearchFilterDto;
}());
export { ProductGroupSearchFilterDto };
var AjaxResponseOfPagedResultOfProductGroupSearchDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfProductGroupSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfProductGroupSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfProductGroupSearchDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfProductGroupSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfProductGroupSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfProductGroupSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfProductGroupSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfProductGroupSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfProductGroupSearchDto;
}());
export { AjaxResponseOfPagedResultOfProductGroupSearchDto };
var PagedResultOfProductGroupSearchDto = /** @class */ (function () {
    function PagedResultOfProductGroupSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfProductGroupSearchDto.prototype.init = function (_data) {
        var e_68, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(ProductGroupSearchDto.fromJS(item));
                    }
                }
                catch (e_68_1) { e_68 = { error: e_68_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_68) throw e_68.error; }
                }
            }
        }
    };
    PagedResultOfProductGroupSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfProductGroupSearchDto();
        result.init(data);
        return result;
    };
    PagedResultOfProductGroupSearchDto.prototype.toJSON = function (data) {
        var e_69, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_69_1) { e_69 = { error: e_69_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_69) throw e_69.error; }
            }
        }
        return data;
    };
    PagedResultOfProductGroupSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfProductGroupSearchDto();
        result.init(json);
        return result;
    };
    return PagedResultOfProductGroupSearchDto;
}());
export { PagedResultOfProductGroupSearchDto };
var ProductGroupSearchDto = /** @class */ (function () {
    function ProductGroupSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProductGroupSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.productGroupCode = _data["productGroupCode"];
            this.productGroupName = _data["productGroupName"];
            this.currentStatusClassificationValueId = _data["currentStatusClassificationValueId"];
            this.productGroupTypeClassificationValueId = _data["productGroupTypeClassificationValueId"];
            this.sortPriorityFlag = _data["sortPriorityFlag"];
            this.hasBeenActivatedFlag = _data["hasBeenActivatedFlag"];
            this.clientProductGroupId = _data["clientProductGroupId"];
            this.productsCount = _data["productsCount"];
            this.activeProgramsCount = _data["activeProgramsCount"];
        }
    };
    ProductGroupSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ProductGroupSearchDto();
        result.init(data);
        return result;
    };
    ProductGroupSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["productGroupCode"] = this.productGroupCode;
        data["productGroupName"] = this.productGroupName;
        data["currentStatusClassificationValueId"] = this.currentStatusClassificationValueId;
        data["productGroupTypeClassificationValueId"] = this.productGroupTypeClassificationValueId;
        data["sortPriorityFlag"] = this.sortPriorityFlag;
        data["hasBeenActivatedFlag"] = this.hasBeenActivatedFlag;
        data["clientProductGroupId"] = this.clientProductGroupId;
        data["productsCount"] = this.productsCount;
        data["activeProgramsCount"] = this.activeProgramsCount;
        return data;
    };
    ProductGroupSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ProductGroupSearchDto();
        result.init(json);
        return result;
    };
    return ProductGroupSearchDto;
}());
export { ProductGroupSearchDto };
var AjaxResponse = /** @class */ (function () {
    function AjaxResponse(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponse.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"];
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponse.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponse();
        result.init(data);
        return result;
    };
    AjaxResponse.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponse.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponse();
        result.init(json);
        return result;
    };
    return AjaxResponse;
}());
export { AjaxResponse };
var AjaxResponseOfIListOfProductGroupDto = /** @class */ (function () {
    function AjaxResponseOfIListOfProductGroupDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfProductGroupDto.prototype.init = function (_data) {
        var e_70, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(ProductGroupDto.fromJS(item));
                    }
                }
                catch (e_70_1) { e_70 = { error: e_70_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_70) throw e_70.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfIListOfProductGroupDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfProductGroupDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfProductGroupDto.prototype.toJSON = function (data) {
        var e_71, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_71_1) { e_71 = { error: e_71_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_71) throw e_71.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfProductGroupDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfProductGroupDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfProductGroupDto;
}());
export { AjaxResponseOfIListOfProductGroupDto };
var AjaxResponseOfListOfSimpleProductGroupDto = /** @class */ (function () {
    function AjaxResponseOfListOfSimpleProductGroupDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfListOfSimpleProductGroupDto.prototype.init = function (_data) {
        var e_72, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(SimpleProductGroupDto.fromJS(item));
                    }
                }
                catch (e_72_1) { e_72 = { error: e_72_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_72) throw e_72.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfListOfSimpleProductGroupDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfListOfSimpleProductGroupDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfListOfSimpleProductGroupDto.prototype.toJSON = function (data) {
        var e_73, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_73_1) { e_73 = { error: e_73_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_73) throw e_73.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfListOfSimpleProductGroupDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfListOfSimpleProductGroupDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfListOfSimpleProductGroupDto;
}());
export { AjaxResponseOfListOfSimpleProductGroupDto };
var SimpleProductGroupDto = /** @class */ (function () {
    function SimpleProductGroupDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    SimpleProductGroupDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.productGroupName = _data["productGroupName"];
        }
    };
    SimpleProductGroupDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new SimpleProductGroupDto();
        result.init(data);
        return result;
    };
    SimpleProductGroupDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["productGroupName"] = this.productGroupName;
        return data;
    };
    SimpleProductGroupDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new SimpleProductGroupDto();
        result.init(json);
        return result;
    };
    return SimpleProductGroupDto;
}());
export { SimpleProductGroupDto };
export var LocalizedValueLanguage;
(function (LocalizedValueLanguage) {
    LocalizedValueLanguage[LocalizedValueLanguage["_0"] = 0] = "_0";
    LocalizedValueLanguage[LocalizedValueLanguage["_1"] = 1] = "_1";
})(LocalizedValueLanguage || (LocalizedValueLanguage = {}));
var SwaggerException = /** @class */ (function (_super) {
    __extends(SwaggerException, _super);
    function SwaggerException(message, status, response, headers, result) {
        var _this = _super.call(this) || this;
        _this.isSwaggerException = true;
        _this.message = message;
        _this.status = status;
        _this.response = response;
        _this.headers = headers;
        _this.result = result;
        return _this;
    }
    SwaggerException.isSwaggerException = function (obj) {
        return obj.isSwaggerException === true;
    };
    return SwaggerException;
}(Error));
export { SwaggerException };
function throwException(message, status, response, headers, result) {
    if (result !== null && result !== undefined)
        return Observable.throw(result);
    else
        return Observable.throw(new SwaggerException(message, status, response, headers, null));
}
function blobToText(blob) {
    return new Observable(function (observer) {
        if (!blob) {
            observer.next("");
            observer.complete();
        }
        else {
            var reader = new FileReader();
            reader.onload = function (event) {
                observer.next(event.target.result);
                observer.complete();
            };
            reader.readAsText(blob);
        }
    });
}
//# sourceMappingURL=om-product.js.map