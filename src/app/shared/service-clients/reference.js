/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.0.6.0 (NJsonSchema v10.0.23.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming
import { __decorate, __extends, __metadata, __param, __values } from "tslib";
import 'rxjs/add/observable/fromPromise';
import 'rxjs/add/observable/of';
import 'rxjs/add/observable/throw';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import 'rxjs/add/operator/mergeMap';
import 'rxjs/add/operator/catch';
import { Observable } from 'rxjs/Observable';
import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';
export var REFERENCE_API_BASE_URL = new InjectionToken('REFERENCE_API_BASE_URL');
var ServiceBaseConfig = /** @class */ (function () {
    function ServiceBaseConfig() {
    }
    return ServiceBaseConfig;
}());
export { ServiceBaseConfig };
var ServiceBase = /** @class */ (function () {
    function ServiceBase(config) {
        this.apimHeaderName = 'Ocp-Apim-Subscription-Key';
        this.tenantIdHeaderName = 'TenantId';
        this.tenantIdLocalStorageKey = 'samplicity-dtp-current-client';
        this.idTokenKey = 'samplicity-id-token';
        this.apiKey = config.key;
    }
    ServiceBase.prototype.transformOptions = function (options) {
        var headers = options.headers;
        if (this.apiKey) {
            headers = headers.append(this.apimHeaderName, this.apiKey);
        }
        var tenantId = sessionStorage.getItem(this.tenantIdLocalStorageKey);
        if (tenantId) {
            headers = headers.append(this.tenantIdHeaderName, tenantId);
        }
        var token = localStorage.getItem(this.idTokenKey);
        if (token) {
            headers = headers.append('Authorization', 'Bearer ' + token);
        }
        options.headers = headers;
        return Promise.resolve(options);
    };
    return ServiceBase;
}());
export { ServiceBase };
var Reference = /** @class */ (function (_super) {
    __extends(Reference, _super);
    function Reference(configuration, http, baseUrl) {
        var _this = _super.call(this, configuration) || this;
        _this.jsonParseReviver = undefined;
        _this.http = http;
        _this.baseUrl = baseUrl ? baseUrl : "";
        return _this;
    }
    /**
     * @param typeId (optional)
     * @return Success
     */
    Reference.prototype.getProductTypeById = function (typeId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductType/GetProductTypeById?";
        if (typeId !== undefined)
            url_ += "typeId=" + encodeURIComponent("" + typeId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetProductTypeById(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetProductTypeById(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetProductTypeById = function (response) {
        var e_1, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfProductTypeDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param typeCode (optional)
     * @return Success
     */
    Reference.prototype.getProductTypeByCode = function (typeCode) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductType/GetProductTypeByCode?";
        if (typeCode !== undefined)
            url_ += "typeCode=" + encodeURIComponent("" + typeCode) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetProductTypeByCode(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetProductTypeByCode(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetProductTypeByCode = function (response) {
        var e_2, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfProductTypeDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getProductTypes = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductType/GetProductTypes";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetProductTypes(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetProductTypes(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetProductTypes = function (response) {
        var e_3, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfProductTypeDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getWmsProductTypes = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ProductType/GetWmsProductTypes";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetWmsProductTypes(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetWmsProductTypes(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetWmsProductTypes = function (response) {
        var e_4, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfWmsProductTypeDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getGlobalSettings = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetGlobalSettings";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetGlobalSettings(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetGlobalSettings(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetGlobalSettings = function (response) {
        var e_5, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfGlobalSettingDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getModules = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetModules";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetModules(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetModules(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetModules = function (response) {
        var e_6, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfModuleDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getContactMethodTypes = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetContactMethodTypes";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetContactMethodTypes(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetContactMethodTypes(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetContactMethodTypes = function (response) {
        var e_7, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfContactMethodTypeDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getStates = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetStates";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetStates(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetStates(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetStates = function (response) {
        var e_8, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfStateDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getCountries = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetCountries";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetCountries(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetCountries(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetCountries = function (response) {
        var e_9, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_9) throw e_9.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfCountryDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getProfessionalDesignations = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetProfessionalDesignations";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetProfessionalDesignations(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetProfessionalDesignations(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetProfessionalDesignations = function (response) {
        var e_10, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_10_1) { e_10 = { error: e_10_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_10) throw e_10.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfProfessionalDesignationDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getOrderSources = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetOrderSources";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetOrderSources(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetOrderSources(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetOrderSources = function (response) {
        var e_11, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_11_1) { e_11 = { error: e_11_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_11) throw e_11.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfOrderSourceDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getOrderSourceExceptionActions = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetOrderSourceExceptionActions";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetOrderSourceExceptionActions(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetOrderSourceExceptionActions(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetOrderSourceExceptionActions = function (response) {
        var e_12, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_12_1) { e_12 = { error: e_12_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_12) throw e_12.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfOrderSourceExceptionActionDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getDoNotHonorExclusionReasons = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetDoNotHonorExclusionReasons";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetDoNotHonorExclusionReasons(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetDoNotHonorExclusionReasons(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetDoNotHonorExclusionReasons = function (response) {
        var e_13, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_13_1) { e_13 = { error: e_13_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_13) throw e_13.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfDoNotHonorExclusionReasonDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getDoNotHonorExclusionReasonSources = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetDoNotHonorExclusionReasonSources";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetDoNotHonorExclusionReasonSources(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetDoNotHonorExclusionReasonSources(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetDoNotHonorExclusionReasonSources = function (response) {
        var e_14, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_14_1) { e_14 = { error: e_14_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_14) throw e_14.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfDoNotHonorExclusionReasonSourceDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getOrderStatusReasonTypes = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetOrderStatusReasonTypes";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetOrderStatusReasonTypes(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetOrderStatusReasonTypes(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetOrderStatusReasonTypes = function (response) {
        var e_15, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_15_1) { e_15 = { error: e_15_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_15) throw e_15.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfOrderStatusReasonTypeDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getMitigationOrderStatusReasonTypes = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetMitigationOrderStatusReasonTypes";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetMitigationOrderStatusReasonTypes(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetMitigationOrderStatusReasonTypes(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetMitigationOrderStatusReasonTypes = function (response) {
        var e_16, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_16_1) { e_16 = { error: e_16_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_16) throw e_16.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfOrderStatusReasonTypeDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getOrderStatuses = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetOrderStatuses";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetOrderStatuses(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetOrderStatuses(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetOrderStatuses = function (response) {
        var e_17, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_17_1) { e_17 = { error: e_17_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_17) throw e_17.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfOrderStatusDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getAllCarriers = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetAllCarriers";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetAllCarriers(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetAllCarriers(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetAllCarriers = function (response) {
        var e_18, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_18_1) { e_18 = { error: e_18_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_18) throw e_18.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfCarrierDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param carrierId (optional)
     * @return Success
     */
    Reference.prototype.getCarrierServiceTypesByCarrierId = function (carrierId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetCarrierServiceTypesByCarrierId?";
        if (carrierId !== undefined)
            url_ += "carrierId=" + encodeURIComponent("" + carrierId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetCarrierServiceTypesByCarrierId(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetCarrierServiceTypesByCarrierId(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetCarrierServiceTypesByCarrierId = function (response) {
        var e_19, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_19_1) { e_19 = { error: e_19_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_19) throw e_19.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfCarrierServiceTypeDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getAllCarrierServiceTypes = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetAllCarrierServiceTypes";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetAllCarrierServiceTypes(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetAllCarrierServiceTypes(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetAllCarrierServiceTypes = function (response) {
        var e_20, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_20_1) { e_20 = { error: e_20_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_20) throw e_20.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfCarrierServiceTypeDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getCommunicationTypes = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetCommunicationTypes";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetCommunicationTypes(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetCommunicationTypes(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetCommunicationTypes = function (response) {
        var e_21, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_21_1) { e_21 = { error: e_21_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_21) throw e_21.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfCommunicationTypeDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @return Success
     */
    Reference.prototype.getNormalizedReferenceData = function () {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/ReferenceData/GetNormalizedReferenceData";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetNormalizedReferenceData(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetNormalizedReferenceData(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Reference.prototype.processGetNormalizedReferenceData = function (response) {
        var e_22, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_22_1) { e_22 = { error: e_22_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_22) throw e_22.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var e_23, _a;
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    try {
                        for (var resultData200_1 = __values(resultData200), resultData200_1_1 = resultData200_1.next(); !resultData200_1_1.done; resultData200_1_1 = resultData200_1.next()) {
                            var item = resultData200_1_1.value;
                            result200.push(NormalizedReferenceDataDto.fromJS(item));
                        }
                    }
                    catch (e_23_1) { e_23 = { error: e_23_1 }; }
                    finally {
                        try {
                            if (resultData200_1_1 && !resultData200_1_1.done && (_a = resultData200_1.return)) _a.call(resultData200_1);
                        }
                        finally { if (e_23) throw e_23.error; }
                    }
                }
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    Reference = __decorate([
        Injectable(),
        __param(0, Inject(ServiceBaseConfig)), __param(1, Inject(HttpClient)), __param(2, Optional()), __param(2, Inject(REFERENCE_API_BASE_URL)),
        __metadata("design:paramtypes", [ServiceBaseConfig, HttpClient, String])
    ], Reference);
    return Reference;
}(ServiceBase));
export { Reference };
var AjaxResponseOfProductTypeDto = /** @class */ (function () {
    function AjaxResponseOfProductTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfProductTypeDto.prototype.init = function (data) {
        if (data) {
            this.result = data["result"] ? ProductTypeDto.fromJS(data["result"]) : undefined;
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfProductTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfProductTypeDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfProductTypeDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfProductTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfProductTypeDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfProductTypeDto;
}());
export { AjaxResponseOfProductTypeDto };
var ProductTypeDto = /** @class */ (function () {
    function ProductTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProductTypeDto.prototype.init = function (data) {
        var e_24, _a;
        if (data) {
            this.productTypeCode = data["productTypeCode"];
            this.productTypeName = data["productTypeName"];
            this.defaultAOCRequiredFlag = data["defaultAOCRequiredFlag"];
            this.lotControlledFlag = data["lotControlledFlag"];
            this.genericNameVisibleFlag = data["genericNameVisibleFlag"];
            this.genericNameRequiredFlag = data["genericNameRequiredFlag"];
            this.nationalDrugCodeVisibleFlag = data["nationalDrugCodeVisibleFlag"];
            this.nationalDrugCodeRequiredFlag = data["nationalDrugCodeRequiredFlag"];
            this.productStrengthVisibleFlag = data["productStrengthVisibleFlag"];
            this.productStrengthRequiredFlag = data["productStrengthRequiredFlag"];
            this.deaScheduleVisibleFlag = data["deaScheduleVisibleFlag"];
            this.deaScheduleRequiredFlag = data["deaScheduleRequiredFlag"];
            this.opioidVisibleFlag = data["opioidVisibleFlag"];
            this.opioidRequiredFlag = data["opioidRequiredFlag"];
            this.antibioticVisibleFlag = data["antibioticVisibleFlag"];
            this.antibioticRequiredFlag = data["antibioticRequiredFlag"];
            this.hazardousVisibleFlag = data["hazardousVisibleFlag"];
            this.hazardousRequiredFlag = data["hazardousRequiredFlag"];
            this.temperatureControlledVisibleFlag = data["temperatureControlledVisibleFlag"];
            this.temperatureControlledRequiredFlag = data["temperatureControlledRequiredFlag"];
            this.animalHealthVisibleFlag = data["animalHealthVisibleFlag"];
            this.animalHealthRequiredFlag = data["animalHealthRequiredFlag"];
            this.activeFlag = data["activeFlag"];
            this.priority = data["priority"];
            if (Array.isArray(data["names"])) {
                this.names = [];
                try {
                    for (var _b = __values(data["names"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_24_1) { e_24 = { error: e_24_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_24) throw e_24.error; }
                }
            }
            this.id = data["id"];
        }
    };
    ProductTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ProductTypeDto();
        result.init(data);
        return result;
    };
    ProductTypeDto.prototype.toJSON = function (data) {
        var e_25, _a;
        data = typeof data === 'object' ? data : {};
        data["productTypeCode"] = this.productTypeCode;
        data["productTypeName"] = this.productTypeName;
        data["defaultAOCRequiredFlag"] = this.defaultAOCRequiredFlag;
        data["lotControlledFlag"] = this.lotControlledFlag;
        data["genericNameVisibleFlag"] = this.genericNameVisibleFlag;
        data["genericNameRequiredFlag"] = this.genericNameRequiredFlag;
        data["nationalDrugCodeVisibleFlag"] = this.nationalDrugCodeVisibleFlag;
        data["nationalDrugCodeRequiredFlag"] = this.nationalDrugCodeRequiredFlag;
        data["productStrengthVisibleFlag"] = this.productStrengthVisibleFlag;
        data["productStrengthRequiredFlag"] = this.productStrengthRequiredFlag;
        data["deaScheduleVisibleFlag"] = this.deaScheduleVisibleFlag;
        data["deaScheduleRequiredFlag"] = this.deaScheduleRequiredFlag;
        data["opioidVisibleFlag"] = this.opioidVisibleFlag;
        data["opioidRequiredFlag"] = this.opioidRequiredFlag;
        data["antibioticVisibleFlag"] = this.antibioticVisibleFlag;
        data["antibioticRequiredFlag"] = this.antibioticRequiredFlag;
        data["hazardousVisibleFlag"] = this.hazardousVisibleFlag;
        data["hazardousRequiredFlag"] = this.hazardousRequiredFlag;
        data["temperatureControlledVisibleFlag"] = this.temperatureControlledVisibleFlag;
        data["temperatureControlledRequiredFlag"] = this.temperatureControlledRequiredFlag;
        data["animalHealthVisibleFlag"] = this.animalHealthVisibleFlag;
        data["animalHealthRequiredFlag"] = this.animalHealthRequiredFlag;
        data["activeFlag"] = this.activeFlag;
        data["priority"] = this.priority;
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _b = __values(this.names), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_25_1) { e_25 = { error: e_25_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_25) throw e_25.error; }
            }
        }
        data["id"] = this.id;
        return data;
    };
    ProductTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ProductTypeDto();
        result.init(json);
        return result;
    };
    return ProductTypeDto;
}());
export { ProductTypeDto };
var ErrorInfo = /** @class */ (function () {
    function ErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ErrorInfo.prototype.init = function (data) {
        var e_26, _a;
        if (data) {
            this.code = data["code"];
            this.message = data["message"];
            this.details = data["details"];
            if (Array.isArray(data["validationErrors"])) {
                this.validationErrors = [];
                try {
                    for (var _b = __values(data["validationErrors"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.validationErrors.push(ValidationErrorInfo.fromJS(item));
                    }
                }
                catch (e_26_1) { e_26 = { error: e_26_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_26) throw e_26.error; }
                }
            }
        }
    };
    ErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ErrorInfo();
        result.init(data);
        return result;
    };
    ErrorInfo.prototype.toJSON = function (data) {
        var e_27, _a;
        data = typeof data === 'object' ? data : {};
        data["code"] = this.code;
        data["message"] = this.message;
        data["details"] = this.details;
        if (Array.isArray(this.validationErrors)) {
            data["validationErrors"] = [];
            try {
                for (var _b = __values(this.validationErrors), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["validationErrors"].push(item.toJSON());
                }
            }
            catch (e_27_1) { e_27 = { error: e_27_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_27) throw e_27.error; }
            }
        }
        return data;
    };
    ErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ErrorInfo();
        result.init(json);
        return result;
    };
    return ErrorInfo;
}());
export { ErrorInfo };
var LocalizedValue = /** @class */ (function () {
    function LocalizedValue(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    LocalizedValue.prototype.init = function (data) {
        if (data) {
            this.language = data["language"];
            this.value = data["value"];
        }
    };
    LocalizedValue.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new LocalizedValue();
        result.init(data);
        return result;
    };
    LocalizedValue.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["language"] = this.language;
        data["value"] = this.value;
        return data;
    };
    LocalizedValue.prototype.clone = function () {
        var json = this.toJSON();
        var result = new LocalizedValue();
        result.init(json);
        return result;
    };
    return LocalizedValue;
}());
export { LocalizedValue };
var ValidationErrorInfo = /** @class */ (function () {
    function ValidationErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ValidationErrorInfo.prototype.init = function (data) {
        var e_28, _a;
        if (data) {
            this.message = data["message"];
            if (Array.isArray(data["members"])) {
                this.members = [];
                try {
                    for (var _b = __values(data["members"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.members.push(item);
                    }
                }
                catch (e_28_1) { e_28 = { error: e_28_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_28) throw e_28.error; }
                }
            }
        }
    };
    ValidationErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValidationErrorInfo();
        result.init(data);
        return result;
    };
    ValidationErrorInfo.prototype.toJSON = function (data) {
        var e_29, _a;
        data = typeof data === 'object' ? data : {};
        data["message"] = this.message;
        if (Array.isArray(this.members)) {
            data["members"] = [];
            try {
                for (var _b = __values(this.members), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["members"].push(item);
                }
            }
            catch (e_29_1) { e_29 = { error: e_29_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_29) throw e_29.error; }
            }
        }
        return data;
    };
    ValidationErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ValidationErrorInfo();
        result.init(json);
        return result;
    };
    return ValidationErrorInfo;
}());
export { ValidationErrorInfo };
var AjaxResponseOfIListOfProductTypeDto = /** @class */ (function () {
    function AjaxResponseOfIListOfProductTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfProductTypeDto.prototype.init = function (data) {
        var e_30, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(ProductTypeDto.fromJS(item));
                    }
                }
                catch (e_30_1) { e_30 = { error: e_30_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_30) throw e_30.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfProductTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfProductTypeDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfProductTypeDto.prototype.toJSON = function (data) {
        var e_31, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_31_1) { e_31 = { error: e_31_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_31) throw e_31.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfProductTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfProductTypeDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfProductTypeDto;
}());
export { AjaxResponseOfIListOfProductTypeDto };
var AjaxResponseOfIListOfWmsProductTypeDto = /** @class */ (function () {
    function AjaxResponseOfIListOfWmsProductTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfWmsProductTypeDto.prototype.init = function (data) {
        var e_32, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(WmsProductTypeDto.fromJS(item));
                    }
                }
                catch (e_32_1) { e_32 = { error: e_32_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_32) throw e_32.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfWmsProductTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfWmsProductTypeDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfWmsProductTypeDto.prototype.toJSON = function (data) {
        var e_33, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_33_1) { e_33 = { error: e_33_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_33) throw e_33.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfWmsProductTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfWmsProductTypeDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfWmsProductTypeDto;
}());
export { AjaxResponseOfIListOfWmsProductTypeDto };
var WmsProductTypeDto = /** @class */ (function () {
    function WmsProductTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    WmsProductTypeDto.prototype.init = function (data) {
        var e_34, _a;
        if (data) {
            this.productTypeDesc = data["productTypeDesc"];
            if (Array.isArray(data["names"])) {
                this.names = [];
                try {
                    for (var _b = __values(data["names"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_34_1) { e_34 = { error: e_34_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_34) throw e_34.error; }
                }
            }
        }
    };
    WmsProductTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new WmsProductTypeDto();
        result.init(data);
        return result;
    };
    WmsProductTypeDto.prototype.toJSON = function (data) {
        var e_35, _a;
        data = typeof data === 'object' ? data : {};
        data["productTypeDesc"] = this.productTypeDesc;
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _b = __values(this.names), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_35_1) { e_35 = { error: e_35_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_35) throw e_35.error; }
            }
        }
        return data;
    };
    WmsProductTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new WmsProductTypeDto();
        result.init(json);
        return result;
    };
    return WmsProductTypeDto;
}());
export { WmsProductTypeDto };
var AjaxResponseOfIListOfGlobalSettingDto = /** @class */ (function () {
    function AjaxResponseOfIListOfGlobalSettingDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfGlobalSettingDto.prototype.init = function (data) {
        var e_36, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(GlobalSettingDto.fromJS(item));
                    }
                }
                catch (e_36_1) { e_36 = { error: e_36_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_36) throw e_36.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfGlobalSettingDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfGlobalSettingDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfGlobalSettingDto.prototype.toJSON = function (data) {
        var e_37, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_37_1) { e_37 = { error: e_37_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_37) throw e_37.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfGlobalSettingDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfGlobalSettingDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfGlobalSettingDto;
}());
export { AjaxResponseOfIListOfGlobalSettingDto };
var GlobalSettingDto = /** @class */ (function () {
    function GlobalSettingDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    GlobalSettingDto.prototype.init = function (data) {
        if (data) {
            this.key = data["key"];
            this.value = data["value"];
            this.description = data["description"];
            this.id = data["id"];
        }
    };
    GlobalSettingDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new GlobalSettingDto();
        result.init(data);
        return result;
    };
    GlobalSettingDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["key"] = this.key;
        data["value"] = this.value;
        data["description"] = this.description;
        data["id"] = this.id;
        return data;
    };
    GlobalSettingDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new GlobalSettingDto();
        result.init(json);
        return result;
    };
    return GlobalSettingDto;
}());
export { GlobalSettingDto };
var AjaxResponseOfIListOfModuleDto = /** @class */ (function () {
    function AjaxResponseOfIListOfModuleDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfModuleDto.prototype.init = function (data) {
        var e_38, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(ModuleDto.fromJS(item));
                    }
                }
                catch (e_38_1) { e_38 = { error: e_38_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_38) throw e_38.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfModuleDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfModuleDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfModuleDto.prototype.toJSON = function (data) {
        var e_39, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_39_1) { e_39 = { error: e_39_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_39) throw e_39.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfModuleDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfModuleDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfModuleDto;
}());
export { AjaxResponseOfIListOfModuleDto };
var ModuleDto = /** @class */ (function () {
    function ModuleDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ModuleDto.prototype.init = function (data) {
        if (data) {
            this.url = data["url"];
            this.baseUrlFormat = data["baseUrlFormat"];
            this.name = data["name"];
            this.code = data["code"];
            this.id = data["id"];
        }
    };
    ModuleDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ModuleDto();
        result.init(data);
        return result;
    };
    ModuleDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["url"] = this.url;
        data["baseUrlFormat"] = this.baseUrlFormat;
        data["name"] = this.name;
        data["code"] = this.code;
        data["id"] = this.id;
        return data;
    };
    ModuleDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ModuleDto();
        result.init(json);
        return result;
    };
    return ModuleDto;
}());
export { ModuleDto };
var AjaxResponseOfIListOfContactMethodTypeDto = /** @class */ (function () {
    function AjaxResponseOfIListOfContactMethodTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfContactMethodTypeDto.prototype.init = function (data) {
        var e_40, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(ContactMethodTypeDto.fromJS(item));
                    }
                }
                catch (e_40_1) { e_40 = { error: e_40_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_40) throw e_40.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfContactMethodTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfContactMethodTypeDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfContactMethodTypeDto.prototype.toJSON = function (data) {
        var e_41, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_41_1) { e_41 = { error: e_41_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_41) throw e_41.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfContactMethodTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfContactMethodTypeDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfContactMethodTypeDto;
}());
export { AjaxResponseOfIListOfContactMethodTypeDto };
var ContactMethodTypeDto = /** @class */ (function () {
    function ContactMethodTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ContactMethodTypeDto.prototype.init = function (data) {
        if (data) {
            this.phoneNbrFlag = data["phoneNbrFlag"];
            this.emailFlag = data["emailFlag"];
            this.faxFlag = data["faxFlag"];
            this.extensionFlag = data["extensionFlag"];
            this.name = data["name"];
            this.code = data["code"];
            this.id = data["id"];
        }
    };
    ContactMethodTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ContactMethodTypeDto();
        result.init(data);
        return result;
    };
    ContactMethodTypeDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["phoneNbrFlag"] = this.phoneNbrFlag;
        data["emailFlag"] = this.emailFlag;
        data["faxFlag"] = this.faxFlag;
        data["extensionFlag"] = this.extensionFlag;
        data["name"] = this.name;
        data["code"] = this.code;
        data["id"] = this.id;
        return data;
    };
    ContactMethodTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ContactMethodTypeDto();
        result.init(json);
        return result;
    };
    return ContactMethodTypeDto;
}());
export { ContactMethodTypeDto };
var AjaxResponseOfIListOfStateDto = /** @class */ (function () {
    function AjaxResponseOfIListOfStateDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfStateDto.prototype.init = function (data) {
        var e_42, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(StateDto.fromJS(item));
                    }
                }
                catch (e_42_1) { e_42 = { error: e_42_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_42) throw e_42.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfStateDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfStateDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfStateDto.prototype.toJSON = function (data) {
        var e_43, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_43_1) { e_43 = { error: e_43_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_43) throw e_43.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfStateDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfStateDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfStateDto;
}());
export { AjaxResponseOfIListOfStateDto };
var StateDto = /** @class */ (function () {
    function StateDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    StateDto.prototype.init = function (data) {
        if (data) {
            this.code = data["code"];
            this.name = data["name"];
            this.countryCode = data["countryCode"];
        }
    };
    StateDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new StateDto();
        result.init(data);
        return result;
    };
    StateDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["code"] = this.code;
        data["name"] = this.name;
        data["countryCode"] = this.countryCode;
        return data;
    };
    StateDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new StateDto();
        result.init(json);
        return result;
    };
    return StateDto;
}());
export { StateDto };
var AjaxResponseOfIListOfCountryDto = /** @class */ (function () {
    function AjaxResponseOfIListOfCountryDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfCountryDto.prototype.init = function (data) {
        var e_44, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(CountryDto.fromJS(item));
                    }
                }
                catch (e_44_1) { e_44 = { error: e_44_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_44) throw e_44.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfCountryDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfCountryDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfCountryDto.prototype.toJSON = function (data) {
        var e_45, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_45_1) { e_45 = { error: e_45_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_45) throw e_45.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfCountryDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfCountryDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfCountryDto;
}());
export { AjaxResponseOfIListOfCountryDto };
var CountryDto = /** @class */ (function () {
    function CountryDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CountryDto.prototype.init = function (data) {
        if (data) {
            this.code = data["code"];
            this.name = data["name"];
        }
    };
    CountryDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CountryDto();
        result.init(data);
        return result;
    };
    CountryDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["code"] = this.code;
        data["name"] = this.name;
        return data;
    };
    CountryDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new CountryDto();
        result.init(json);
        return result;
    };
    return CountryDto;
}());
export { CountryDto };
var AjaxResponseOfIListOfProfessionalDesignationDto = /** @class */ (function () {
    function AjaxResponseOfIListOfProfessionalDesignationDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfProfessionalDesignationDto.prototype.init = function (data) {
        var e_46, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(ProfessionalDesignationDto.fromJS(item));
                    }
                }
                catch (e_46_1) { e_46 = { error: e_46_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_46) throw e_46.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfProfessionalDesignationDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfProfessionalDesignationDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfProfessionalDesignationDto.prototype.toJSON = function (data) {
        var e_47, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_47_1) { e_47 = { error: e_47_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_47) throw e_47.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfProfessionalDesignationDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfProfessionalDesignationDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfProfessionalDesignationDto;
}());
export { AjaxResponseOfIListOfProfessionalDesignationDto };
var ProfessionalDesignationDto = /** @class */ (function () {
    function ProfessionalDesignationDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProfessionalDesignationDto.prototype.init = function (data) {
        if (data) {
            this.comments = data["comments"];
            this.groupingCode = data["groupingCode"];
            this.name = data["name"];
            this.code = data["code"];
            this.id = data["id"];
        }
    };
    ProfessionalDesignationDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ProfessionalDesignationDto();
        result.init(data);
        return result;
    };
    ProfessionalDesignationDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["comments"] = this.comments;
        data["groupingCode"] = this.groupingCode;
        data["name"] = this.name;
        data["code"] = this.code;
        data["id"] = this.id;
        return data;
    };
    ProfessionalDesignationDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ProfessionalDesignationDto();
        result.init(json);
        return result;
    };
    return ProfessionalDesignationDto;
}());
export { ProfessionalDesignationDto };
var AjaxResponseOfIListOfOrderSourceDto = /** @class */ (function () {
    function AjaxResponseOfIListOfOrderSourceDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfOrderSourceDto.prototype.init = function (data) {
        var e_48, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(OrderSourceDto.fromJS(item));
                    }
                }
                catch (e_48_1) { e_48 = { error: e_48_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_48) throw e_48.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfOrderSourceDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfOrderSourceDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfOrderSourceDto.prototype.toJSON = function (data) {
        var e_49, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_49_1) { e_49 = { error: e_49_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_49) throw e_49.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfOrderSourceDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfOrderSourceDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfOrderSourceDto;
}());
export { AjaxResponseOfIListOfOrderSourceDto };
var OrderSourceDto = /** @class */ (function () {
    function OrderSourceDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    OrderSourceDto.prototype.init = function (data) {
        var e_50, _a;
        if (data) {
            this.orderSourceCode = data["orderSourceCode"];
            this.orderSourceName = data["orderSourceName"];
            this.commentsText = data["commentsText"];
            this.electronicFlag = data["electronicFlag"];
            this.paperFlag = data["paperFlag"];
            this.displaySequenceNbr = data["displaySequenceNbr"];
            if (Array.isArray(data["names"])) {
                this.names = [];
                try {
                    for (var _b = __values(data["names"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_50_1) { e_50 = { error: e_50_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_50) throw e_50.error; }
                }
            }
            this.id = data["id"];
        }
    };
    OrderSourceDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new OrderSourceDto();
        result.init(data);
        return result;
    };
    OrderSourceDto.prototype.toJSON = function (data) {
        var e_51, _a;
        data = typeof data === 'object' ? data : {};
        data["orderSourceCode"] = this.orderSourceCode;
        data["orderSourceName"] = this.orderSourceName;
        data["commentsText"] = this.commentsText;
        data["electronicFlag"] = this.electronicFlag;
        data["paperFlag"] = this.paperFlag;
        data["displaySequenceNbr"] = this.displaySequenceNbr;
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _b = __values(this.names), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_51_1) { e_51 = { error: e_51_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_51) throw e_51.error; }
            }
        }
        data["id"] = this.id;
        return data;
    };
    OrderSourceDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new OrderSourceDto();
        result.init(json);
        return result;
    };
    return OrderSourceDto;
}());
export { OrderSourceDto };
var AjaxResponseOfIListOfOrderSourceExceptionActionDto = /** @class */ (function () {
    function AjaxResponseOfIListOfOrderSourceExceptionActionDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfOrderSourceExceptionActionDto.prototype.init = function (data) {
        var e_52, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(OrderSourceExceptionActionDto.fromJS(item));
                    }
                }
                catch (e_52_1) { e_52 = { error: e_52_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_52) throw e_52.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfOrderSourceExceptionActionDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfOrderSourceExceptionActionDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfOrderSourceExceptionActionDto.prototype.toJSON = function (data) {
        var e_53, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_53_1) { e_53 = { error: e_53_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_53) throw e_53.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfOrderSourceExceptionActionDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfOrderSourceExceptionActionDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfOrderSourceExceptionActionDto;
}());
export { AjaxResponseOfIListOfOrderSourceExceptionActionDto };
var OrderSourceExceptionActionDto = /** @class */ (function () {
    function OrderSourceExceptionActionDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    OrderSourceExceptionActionDto.prototype.init = function (data) {
        if (data) {
            this.orderSourceId = data["orderSourceId"];
            this.orderSourceClassificationValueId = data["orderSourceClassificationValueId"];
            this.id = data["id"];
        }
    };
    OrderSourceExceptionActionDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new OrderSourceExceptionActionDto();
        result.init(data);
        return result;
    };
    OrderSourceExceptionActionDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["orderSourceId"] = this.orderSourceId;
        data["orderSourceClassificationValueId"] = this.orderSourceClassificationValueId;
        data["id"] = this.id;
        return data;
    };
    OrderSourceExceptionActionDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new OrderSourceExceptionActionDto();
        result.init(json);
        return result;
    };
    return OrderSourceExceptionActionDto;
}());
export { OrderSourceExceptionActionDto };
var AjaxResponseOfIListOfDoNotHonorExclusionReasonDto = /** @class */ (function () {
    function AjaxResponseOfIListOfDoNotHonorExclusionReasonDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfDoNotHonorExclusionReasonDto.prototype.init = function (data) {
        var e_54, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(DoNotHonorExclusionReasonDto.fromJS(item));
                    }
                }
                catch (e_54_1) { e_54 = { error: e_54_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_54) throw e_54.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfDoNotHonorExclusionReasonDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfDoNotHonorExclusionReasonDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfDoNotHonorExclusionReasonDto.prototype.toJSON = function (data) {
        var e_55, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_55_1) { e_55 = { error: e_55_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_55) throw e_55.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfDoNotHonorExclusionReasonDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfDoNotHonorExclusionReasonDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfDoNotHonorExclusionReasonDto;
}());
export { AjaxResponseOfIListOfDoNotHonorExclusionReasonDto };
var DoNotHonorExclusionReasonDto = /** @class */ (function () {
    function DoNotHonorExclusionReasonDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DoNotHonorExclusionReasonDto.prototype.init = function (data) {
        if (data) {
            this.doNotHonorExclusionReasonCode = data["doNotHonorExclusionReasonCode"];
            this.doNotHonorExclusionReasonName = data["doNotHonorExclusionReasonName"];
            this.ableToDeleteFlag = data["ableToDeleteFlag"];
            this.programLevelFlag = data["programLevelFlag"];
            this.brandLevelFlag = data["brandLevelFlag"];
            this.productLevelFlag = data["productLevelFlag"];
            this.selectableFlag = data["selectableFlag"];
            this.id = data["id"];
        }
    };
    DoNotHonorExclusionReasonDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DoNotHonorExclusionReasonDto();
        result.init(data);
        return result;
    };
    DoNotHonorExclusionReasonDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["doNotHonorExclusionReasonCode"] = this.doNotHonorExclusionReasonCode;
        data["doNotHonorExclusionReasonName"] = this.doNotHonorExclusionReasonName;
        data["ableToDeleteFlag"] = this.ableToDeleteFlag;
        data["programLevelFlag"] = this.programLevelFlag;
        data["brandLevelFlag"] = this.brandLevelFlag;
        data["productLevelFlag"] = this.productLevelFlag;
        data["selectableFlag"] = this.selectableFlag;
        data["id"] = this.id;
        return data;
    };
    DoNotHonorExclusionReasonDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DoNotHonorExclusionReasonDto();
        result.init(json);
        return result;
    };
    return DoNotHonorExclusionReasonDto;
}());
export { DoNotHonorExclusionReasonDto };
var AjaxResponseOfIListOfDoNotHonorExclusionReasonSourceDto = /** @class */ (function () {
    function AjaxResponseOfIListOfDoNotHonorExclusionReasonSourceDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfDoNotHonorExclusionReasonSourceDto.prototype.init = function (data) {
        var e_56, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(DoNotHonorExclusionReasonSourceDto.fromJS(item));
                    }
                }
                catch (e_56_1) { e_56 = { error: e_56_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_56) throw e_56.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfDoNotHonorExclusionReasonSourceDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfDoNotHonorExclusionReasonSourceDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfDoNotHonorExclusionReasonSourceDto.prototype.toJSON = function (data) {
        var e_57, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_57_1) { e_57 = { error: e_57_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_57) throw e_57.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfDoNotHonorExclusionReasonSourceDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfDoNotHonorExclusionReasonSourceDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfDoNotHonorExclusionReasonSourceDto;
}());
export { AjaxResponseOfIListOfDoNotHonorExclusionReasonSourceDto };
var DoNotHonorExclusionReasonSourceDto = /** @class */ (function () {
    function DoNotHonorExclusionReasonSourceDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DoNotHonorExclusionReasonSourceDto.prototype.init = function (data) {
        if (data) {
            this.doNotHonorExclusionReasonId = data["doNotHonorExclusionReasonId"];
            this.sourceClassificationValueId = data["sourceClassificationValueId"];
            this.id = data["id"];
        }
    };
    DoNotHonorExclusionReasonSourceDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DoNotHonorExclusionReasonSourceDto();
        result.init(data);
        return result;
    };
    DoNotHonorExclusionReasonSourceDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["doNotHonorExclusionReasonId"] = this.doNotHonorExclusionReasonId;
        data["sourceClassificationValueId"] = this.sourceClassificationValueId;
        data["id"] = this.id;
        return data;
    };
    DoNotHonorExclusionReasonSourceDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DoNotHonorExclusionReasonSourceDto();
        result.init(json);
        return result;
    };
    return DoNotHonorExclusionReasonSourceDto;
}());
export { DoNotHonorExclusionReasonSourceDto };
var AjaxResponseOfIListOfOrderStatusReasonTypeDto = /** @class */ (function () {
    function AjaxResponseOfIListOfOrderStatusReasonTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfOrderStatusReasonTypeDto.prototype.init = function (data) {
        var e_58, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(OrderStatusReasonTypeDto.fromJS(item));
                    }
                }
                catch (e_58_1) { e_58 = { error: e_58_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_58) throw e_58.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfOrderStatusReasonTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfOrderStatusReasonTypeDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfOrderStatusReasonTypeDto.prototype.toJSON = function (data) {
        var e_59, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_59_1) { e_59 = { error: e_59_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_59) throw e_59.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfOrderStatusReasonTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfOrderStatusReasonTypeDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfOrderStatusReasonTypeDto;
}());
export { AjaxResponseOfIListOfOrderStatusReasonTypeDto };
var OrderStatusReasonTypeDto = /** @class */ (function () {
    function OrderStatusReasonTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    OrderStatusReasonTypeDto.prototype.init = function (data) {
        if (data) {
            this.name = data["name"];
            this.code = data["code"];
            this.id = data["id"];
        }
    };
    OrderStatusReasonTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new OrderStatusReasonTypeDto();
        result.init(data);
        return result;
    };
    OrderStatusReasonTypeDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["name"] = this.name;
        data["code"] = this.code;
        data["id"] = this.id;
        return data;
    };
    OrderStatusReasonTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new OrderStatusReasonTypeDto();
        result.init(json);
        return result;
    };
    return OrderStatusReasonTypeDto;
}());
export { OrderStatusReasonTypeDto };
var AjaxResponseOfIListOfOrderStatusDto = /** @class */ (function () {
    function AjaxResponseOfIListOfOrderStatusDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfOrderStatusDto.prototype.init = function (data) {
        var e_60, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(OrderStatusDto.fromJS(item));
                    }
                }
                catch (e_60_1) { e_60 = { error: e_60_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_60) throw e_60.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfOrderStatusDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfOrderStatusDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfOrderStatusDto.prototype.toJSON = function (data) {
        var e_61, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_61_1) { e_61 = { error: e_61_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_61) throw e_61.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfOrderStatusDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfOrderStatusDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfOrderStatusDto;
}());
export { AjaxResponseOfIListOfOrderStatusDto };
var OrderStatusDto = /** @class */ (function () {
    function OrderStatusDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    OrderStatusDto.prototype.init = function (data) {
        if (data) {
            this.name = data["name"];
            this.code = data["code"];
            this.id = data["id"];
        }
    };
    OrderStatusDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new OrderStatusDto();
        result.init(data);
        return result;
    };
    OrderStatusDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["name"] = this.name;
        data["code"] = this.code;
        data["id"] = this.id;
        return data;
    };
    OrderStatusDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new OrderStatusDto();
        result.init(json);
        return result;
    };
    return OrderStatusDto;
}());
export { OrderStatusDto };
var AjaxResponseOfIListOfCarrierDto = /** @class */ (function () {
    function AjaxResponseOfIListOfCarrierDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfCarrierDto.prototype.init = function (data) {
        var e_62, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(CarrierDto.fromJS(item));
                    }
                }
                catch (e_62_1) { e_62 = { error: e_62_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_62) throw e_62.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfCarrierDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfCarrierDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfCarrierDto.prototype.toJSON = function (data) {
        var e_63, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_63_1) { e_63 = { error: e_63_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_63) throw e_63.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfCarrierDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfCarrierDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfCarrierDto;
}());
export { AjaxResponseOfIListOfCarrierDto };
var CarrierDto = /** @class */ (function () {
    function CarrierDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CarrierDto.prototype.init = function (data) {
        var e_64, _a, e_65, _b;
        if (data) {
            this.trackingUrlFormat = data["trackingUrlFormat"];
            if (Array.isArray(data["carrierServiceTypes"])) {
                this.carrierServiceTypes = [];
                try {
                    for (var _c = __values(data["carrierServiceTypes"]), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        this.carrierServiceTypes.push(CarrierServiceTypeDto.fromJS(item));
                    }
                }
                catch (e_64_1) { e_64 = { error: e_64_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_64) throw e_64.error; }
                }
            }
            if (Array.isArray(data["names"])) {
                this.names = [];
                try {
                    for (var _e = __values(data["names"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_65_1) { e_65 = { error: e_65_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_65) throw e_65.error; }
                }
            }
            this.name = data["name"];
            this.code = data["code"];
            this.id = data["id"];
        }
    };
    CarrierDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CarrierDto();
        result.init(data);
        return result;
    };
    CarrierDto.prototype.toJSON = function (data) {
        var e_66, _a, e_67, _b;
        data = typeof data === 'object' ? data : {};
        data["trackingUrlFormat"] = this.trackingUrlFormat;
        if (Array.isArray(this.carrierServiceTypes)) {
            data["carrierServiceTypes"] = [];
            try {
                for (var _c = __values(this.carrierServiceTypes), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var item = _d.value;
                    data["carrierServiceTypes"].push(item.toJSON());
                }
            }
            catch (e_66_1) { e_66 = { error: e_66_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_66) throw e_66.error; }
            }
        }
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _e = __values(this.names), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_67_1) { e_67 = { error: e_67_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_67) throw e_67.error; }
            }
        }
        data["name"] = this.name;
        data["code"] = this.code;
        data["id"] = this.id;
        return data;
    };
    CarrierDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new CarrierDto();
        result.init(json);
        return result;
    };
    return CarrierDto;
}());
export { CarrierDto };
var CarrierServiceTypeDto = /** @class */ (function () {
    function CarrierServiceTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CarrierServiceTypeDto.prototype.init = function (data) {
        var e_68, _a;
        if (data) {
            this.carrierServiceTypeCode = data["carrierServiceTypeCode"];
            this.carrierServiceTypeName = data["carrierServiceTypeName"];
            this.carrierId = data["carrierId"];
            this.maxDaysToDeliver = data["maxDaysToDeliver"];
            if (Array.isArray(data["names"])) {
                this.names = [];
                try {
                    for (var _b = __values(data["names"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_68_1) { e_68 = { error: e_68_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_68) throw e_68.error; }
                }
            }
            this.name = data["name"];
            this.code = data["code"];
            this.id = data["id"];
        }
    };
    CarrierServiceTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CarrierServiceTypeDto();
        result.init(data);
        return result;
    };
    CarrierServiceTypeDto.prototype.toJSON = function (data) {
        var e_69, _a;
        data = typeof data === 'object' ? data : {};
        data["carrierServiceTypeCode"] = this.carrierServiceTypeCode;
        data["carrierServiceTypeName"] = this.carrierServiceTypeName;
        data["carrierId"] = this.carrierId;
        data["maxDaysToDeliver"] = this.maxDaysToDeliver;
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _b = __values(this.names), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_69_1) { e_69 = { error: e_69_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_69) throw e_69.error; }
            }
        }
        data["name"] = this.name;
        data["code"] = this.code;
        data["id"] = this.id;
        return data;
    };
    CarrierServiceTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new CarrierServiceTypeDto();
        result.init(json);
        return result;
    };
    return CarrierServiceTypeDto;
}());
export { CarrierServiceTypeDto };
var AjaxResponseOfIListOfCarrierServiceTypeDto = /** @class */ (function () {
    function AjaxResponseOfIListOfCarrierServiceTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfCarrierServiceTypeDto.prototype.init = function (data) {
        var e_70, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(CarrierServiceTypeDto.fromJS(item));
                    }
                }
                catch (e_70_1) { e_70 = { error: e_70_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_70) throw e_70.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfCarrierServiceTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfCarrierServiceTypeDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfCarrierServiceTypeDto.prototype.toJSON = function (data) {
        var e_71, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_71_1) { e_71 = { error: e_71_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_71) throw e_71.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfCarrierServiceTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfCarrierServiceTypeDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfCarrierServiceTypeDto;
}());
export { AjaxResponseOfIListOfCarrierServiceTypeDto };
var AjaxResponseOfIListOfCommunicationTypeDto = /** @class */ (function () {
    function AjaxResponseOfIListOfCommunicationTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfCommunicationTypeDto.prototype.init = function (data) {
        var e_72, _a;
        if (data) {
            if (Array.isArray(data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(CommunicationTypeDto.fromJS(item));
                    }
                }
                catch (e_72_1) { e_72 = { error: e_72_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_72) throw e_72.error; }
                }
            }
            this.targetUrl = data["targetUrl"];
            this.success = data["success"];
            this.error = data["error"] ? ErrorInfo.fromJS(data["error"]) : undefined;
            this.unAuthorizedRequest = data["unAuthorizedRequest"];
            this.__abp = data["__abp"];
        }
    };
    AjaxResponseOfIListOfCommunicationTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfCommunicationTypeDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfCommunicationTypeDto.prototype.toJSON = function (data) {
        var e_73, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_73_1) { e_73 = { error: e_73_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_73) throw e_73.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfCommunicationTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfCommunicationTypeDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfCommunicationTypeDto;
}());
export { AjaxResponseOfIListOfCommunicationTypeDto };
var CommunicationTypeDto = /** @class */ (function () {
    function CommunicationTypeDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CommunicationTypeDto.prototype.init = function (data) {
        if (data) {
            this.communicationTypeClassificationValueId = data["communicationTypeClassificationValueId"];
            this.orderFlag = data["orderFlag"];
            this.communicationCategoryClassificationValueId = data["communicationCategoryClassificationValueId"];
            this.comments = data["comments"];
            this.name = data["name"];
            this.code = data["code"];
            this.id = data["id"];
        }
    };
    CommunicationTypeDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CommunicationTypeDto();
        result.init(data);
        return result;
    };
    CommunicationTypeDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["communicationTypeClassificationValueId"] = this.communicationTypeClassificationValueId;
        data["orderFlag"] = this.orderFlag;
        data["communicationCategoryClassificationValueId"] = this.communicationCategoryClassificationValueId;
        data["comments"] = this.comments;
        data["name"] = this.name;
        data["code"] = this.code;
        data["id"] = this.id;
        return data;
    };
    CommunicationTypeDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new CommunicationTypeDto();
        result.init(json);
        return result;
    };
    return CommunicationTypeDto;
}());
export { CommunicationTypeDto };
var NormalizedReferenceDataDto = /** @class */ (function () {
    function NormalizedReferenceDataDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    NormalizedReferenceDataDto.prototype.init = function (data) {
        if (data) {
            this.createdDateUtc = data["createdDateUtc"] ? new Date(data["createdDateUtc"].toString()) : undefined;
            this.lastModifiedUtc = data["lastModifiedUtc"] ? new Date(data["lastModifiedUtc"].toString()) : undefined;
            this.originatingSchema = data["originatingSchema"];
            this.originatingTable = data["originatingTable"];
            this.name = data["name"];
            this.code = data["code"];
            this.id = data["id"];
        }
    };
    NormalizedReferenceDataDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new NormalizedReferenceDataDto();
        result.init(data);
        return result;
    };
    NormalizedReferenceDataDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["createdDateUtc"] = this.createdDateUtc ? this.createdDateUtc.toISOString() : undefined;
        data["lastModifiedUtc"] = this.lastModifiedUtc ? this.lastModifiedUtc.toISOString() : undefined;
        data["originatingSchema"] = this.originatingSchema;
        data["originatingTable"] = this.originatingTable;
        data["name"] = this.name;
        data["code"] = this.code;
        data["id"] = this.id;
        return data;
    };
    NormalizedReferenceDataDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new NormalizedReferenceDataDto();
        result.init(json);
        return result;
    };
    return NormalizedReferenceDataDto;
}());
export { NormalizedReferenceDataDto };
export var LocalizedValueLanguage;
(function (LocalizedValueLanguage) {
    LocalizedValueLanguage[LocalizedValueLanguage["_0"] = 0] = "_0";
    LocalizedValueLanguage[LocalizedValueLanguage["_1"] = 1] = "_1";
})(LocalizedValueLanguage || (LocalizedValueLanguage = {}));
var SwaggerException = /** @class */ (function (_super) {
    __extends(SwaggerException, _super);
    function SwaggerException(message, status, response, headers, result) {
        var _this = _super.call(this) || this;
        _this.isSwaggerException = true;
        _this.message = message;
        _this.status = status;
        _this.response = response;
        _this.headers = headers;
        _this.result = result;
        return _this;
    }
    SwaggerException.isSwaggerException = function (obj) {
        return obj.isSwaggerException === true;
    };
    return SwaggerException;
}(Error));
export { SwaggerException };
function throwException(message, status, response, headers, result) {
    if (result !== null && result !== undefined)
        return Observable.throw(result);
    else
        return Observable.throw(new SwaggerException(message, status, response, headers, null));
}
function blobToText(blob) {
    return new Observable(function (observer) {
        if (!blob) {
            observer.next("");
            observer.complete();
        }
        else {
            var reader = new FileReader();
            reader.onload = function (event) {
                observer.next(event.target.result);
                observer.complete();
            };
            reader.readAsText(blob);
        }
    });
}
//# sourceMappingURL=reference.js.map