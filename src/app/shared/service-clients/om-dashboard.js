/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.7.0.0 (NJsonSchema v10.1.24.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming
import { __decorate, __extends, __metadata, __param, __values } from "tslib";
import 'rxjs/add/observable/fromPromise';
import 'rxjs/add/observable/of';
import 'rxjs/add/observable/throw';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import 'rxjs/add/operator/mergeMap';
import 'rxjs/add/operator/catch';
import { Observable } from 'rxjs/Observable';
import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';
export var OM_DASHBOARD_API_BASE_URL = new InjectionToken('OM_DASHBOARD_API_BASE_URL');
var ServiceBaseConfig = /** @class */ (function () {
    function ServiceBaseConfig() {
    }
    return ServiceBaseConfig;
}());
export { ServiceBaseConfig };
var ServiceBase = /** @class */ (function () {
    function ServiceBase(config) {
        this.apimHeaderName = 'Ocp-Apim-Subscription-Key';
        this.tenantIdHeaderName = 'TenantId';
        this.tenantIdLocalStorageKey = 'samplicity-dtp-current-client';
        this.idTokenKey = 'samplicity-id-token';
        this.apiKey = config.key;
    }
    ServiceBase.prototype.transformOptions = function (options) {
        var headers = options.headers;
        if (this.apiKey) {
            headers = headers.append(this.apimHeaderName, this.apiKey);
        }
        var tenantId = sessionStorage.getItem(this.tenantIdLocalStorageKey);
        if (tenantId) {
            headers = headers.append(this.tenantIdHeaderName, tenantId);
        }
        var token = localStorage.getItem(this.idTokenKey);
        if (token) {
            headers = headers.append('Authorization', 'Bearer ' + token);
        }
        options.headers = headers;
        return Promise.resolve(options);
    };
    return ServiceBase;
}());
export { ServiceBase };
var OrderManagementDashboard = /** @class */ (function (_super) {
    __extends(OrderManagementDashboard, _super);
    function OrderManagementDashboard(configuration, http, baseUrl) {
        var _this = _super.call(this, configuration) || this;
        _this.jsonParseReviver = undefined;
        _this.http = http;
        _this.baseUrl = baseUrl ? baseUrl : "";
        return _this;
    }
    /**
     * @param request (optional)
     * @return Success
     */
    OrderManagementDashboard.prototype.getOrdersByStatusByMonthData = function (request) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Dashboard/GetOrdersByStatusByMonthData";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(request);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetOrdersByStatusByMonthData(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetOrdersByStatusByMonthData(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementDashboard.prototype.processGetOrdersByStatusByMonthData = function (response) {
        var e_1, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfChartDataResponseDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param request (optional)
     * @return Success
     */
    OrderManagementDashboard.prototype.getBIWeeklyOrdersData = function (request) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Dashboard/GetBIWeeklyOrdersData";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(request);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetBIWeeklyOrdersData(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetBIWeeklyOrdersData(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementDashboard.prototype.processGetBIWeeklyOrdersData = function (response) {
        var e_2, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfListOfChartDataResponseDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param request (optional)
     * @return Success
     */
    OrderManagementDashboard.prototype.getOrdersPastStatusTimeThresholdData = function (request) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Dashboard/GetOrdersPastStatusTimeThresholdData";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(request);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetOrdersPastStatusTimeThresholdData(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetOrdersPastStatusTimeThresholdData(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementDashboard.prototype.processGetOrdersPastStatusTimeThresholdData = function (response) {
        var e_3, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfChartDataResponseDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param programId (optional)
     * @param orderStatusId (optional)
     * @return Success
     */
    OrderManagementDashboard.prototype.searchOrdersPastStatusTimeThresholdDateList = function (programId, orderStatusId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/Dashboard/SearchOrdersPastStatusTimeThresholdDateList?";
        if (programId !== undefined && programId !== null)
            url_ += "programId=" + encodeURIComponent("" + programId) + "&";
        if (orderStatusId !== undefined && orderStatusId !== null)
            url_ += "orderStatusId=" + encodeURIComponent("" + orderStatusId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchOrdersPastStatusTimeThresholdDateList(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchOrdersPastStatusTimeThresholdDateList(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    OrderManagementDashboard.prototype.processSearchOrdersPastStatusTimeThresholdDateList = function (response) {
        var e_4, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfListOfSimpleOrderDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    OrderManagementDashboard = __decorate([
        Injectable(),
        __param(0, Inject(ServiceBaseConfig)), __param(1, Inject(HttpClient)), __param(2, Optional()), __param(2, Inject(OM_DASHBOARD_API_BASE_URL)),
        __metadata("design:paramtypes", [ServiceBaseConfig, HttpClient, String])
    ], OrderManagementDashboard);
    return OrderManagementDashboard;
}(ServiceBase));
export { OrderManagementDashboard };
var GetOrdersByStatusByMonthDataRequestDto = /** @class */ (function () {
    function GetOrdersByStatusByMonthDataRequestDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    GetOrdersByStatusByMonthDataRequestDto.prototype.init = function (_data) {
        if (_data) {
            this.programId = _data["programId"];
            this.month = _data["month"];
            this.year = _data["year"];
            this.periodicStartDate = _data["periodicStartDate"] ? new Date(_data["periodicStartDate"].toString()) : undefined;
            this.periodicEndDate = _data["periodicEndDate"] ? new Date(_data["periodicEndDate"].toString()) : undefined;
        }
    };
    GetOrdersByStatusByMonthDataRequestDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new GetOrdersByStatusByMonthDataRequestDto();
        result.init(data);
        return result;
    };
    GetOrdersByStatusByMonthDataRequestDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["programId"] = this.programId;
        data["month"] = this.month;
        data["year"] = this.year;
        data["periodicStartDate"] = this.periodicStartDate ? this.periodicStartDate.toISOString() : undefined;
        data["periodicEndDate"] = this.periodicEndDate ? this.periodicEndDate.toISOString() : undefined;
        return data;
    };
    GetOrdersByStatusByMonthDataRequestDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new GetOrdersByStatusByMonthDataRequestDto();
        result.init(json);
        return result;
    };
    return GetOrdersByStatusByMonthDataRequestDto;
}());
export { GetOrdersByStatusByMonthDataRequestDto };
var AjaxResponseOfChartDataResponseDto = /** @class */ (function () {
    function AjaxResponseOfChartDataResponseDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfChartDataResponseDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? ChartDataResponseDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfChartDataResponseDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfChartDataResponseDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfChartDataResponseDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfChartDataResponseDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfChartDataResponseDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfChartDataResponseDto;
}());
export { AjaxResponseOfChartDataResponseDto };
var ChartDataResponseDto = /** @class */ (function () {
    function ChartDataResponseDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ChartDataResponseDto.prototype.init = function (_data) {
        if (_data) {
            this.data = _data["data"] ? ChartDataDtoOfInt32.fromJS(_data["data"]) : undefined;
        }
    };
    ChartDataResponseDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ChartDataResponseDto();
        result.init(data);
        return result;
    };
    ChartDataResponseDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["data"] = this.data ? this.data.toJSON() : undefined;
        return data;
    };
    ChartDataResponseDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ChartDataResponseDto();
        result.init(json);
        return result;
    };
    return ChartDataResponseDto;
}());
export { ChartDataResponseDto };
var ErrorInfo = /** @class */ (function () {
    function ErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ErrorInfo.prototype.init = function (_data) {
        var e_5, _a;
        if (_data) {
            this.code = _data["code"];
            this.message = _data["message"];
            this.details = _data["details"];
            if (Array.isArray(_data["validationErrors"])) {
                this.validationErrors = [];
                try {
                    for (var _b = __values(_data["validationErrors"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.validationErrors.push(ValidationErrorInfo.fromJS(item));
                    }
                }
                catch (e_5_1) { e_5 = { error: e_5_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_5) throw e_5.error; }
                }
            }
        }
    };
    ErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ErrorInfo();
        result.init(data);
        return result;
    };
    ErrorInfo.prototype.toJSON = function (data) {
        var e_6, _a;
        data = typeof data === 'object' ? data : {};
        data["code"] = this.code;
        data["message"] = this.message;
        data["details"] = this.details;
        if (Array.isArray(this.validationErrors)) {
            data["validationErrors"] = [];
            try {
                for (var _b = __values(this.validationErrors), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["validationErrors"].push(item.toJSON());
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        return data;
    };
    ErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ErrorInfo();
        result.init(json);
        return result;
    };
    return ErrorInfo;
}());
export { ErrorInfo };
var ChartDataDtoOfInt32 = /** @class */ (function () {
    function ChartDataDtoOfInt32(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ChartDataDtoOfInt32.prototype.init = function (_data) {
        var e_7, _a;
        if (_data) {
            this.labels = _data["labels"] ? ChartLabelsDto.fromJS(_data["labels"]) : undefined;
            if (Array.isArray(_data["datasets"])) {
                this.datasets = [];
                try {
                    for (var _b = __values(_data["datasets"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.datasets.push(ChartDataSetDtoOfInt32.fromJS(item));
                    }
                }
                catch (e_7_1) { e_7 = { error: e_7_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_7) throw e_7.error; }
                }
            }
        }
    };
    ChartDataDtoOfInt32.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ChartDataDtoOfInt32();
        result.init(data);
        return result;
    };
    ChartDataDtoOfInt32.prototype.toJSON = function (data) {
        var e_8, _a;
        data = typeof data === 'object' ? data : {};
        data["labels"] = this.labels ? this.labels.toJSON() : undefined;
        if (Array.isArray(this.datasets)) {
            data["datasets"] = [];
            try {
                for (var _b = __values(this.datasets), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["datasets"].push(item.toJSON());
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        return data;
    };
    ChartDataDtoOfInt32.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ChartDataDtoOfInt32();
        result.init(json);
        return result;
    };
    return ChartDataDtoOfInt32;
}());
export { ChartDataDtoOfInt32 };
var ValidationErrorInfo = /** @class */ (function () {
    function ValidationErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ValidationErrorInfo.prototype.init = function (_data) {
        var e_9, _a;
        if (_data) {
            this.message = _data["message"];
            if (Array.isArray(_data["members"])) {
                this.members = [];
                try {
                    for (var _b = __values(_data["members"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.members.push(item);
                    }
                }
                catch (e_9_1) { e_9 = { error: e_9_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_9) throw e_9.error; }
                }
            }
        }
    };
    ValidationErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValidationErrorInfo();
        result.init(data);
        return result;
    };
    ValidationErrorInfo.prototype.toJSON = function (data) {
        var e_10, _a;
        data = typeof data === 'object' ? data : {};
        data["message"] = this.message;
        if (Array.isArray(this.members)) {
            data["members"] = [];
            try {
                for (var _b = __values(this.members), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["members"].push(item);
                }
            }
            catch (e_10_1) { e_10 = { error: e_10_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_10) throw e_10.error; }
            }
        }
        return data;
    };
    ValidationErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ValidationErrorInfo();
        result.init(json);
        return result;
    };
    return ValidationErrorInfo;
}());
export { ValidationErrorInfo };
var ChartLabelsDto = /** @class */ (function () {
    function ChartLabelsDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ChartLabelsDto.prototype.init = function (_data) {
        var e_11, _a;
        if (_data) {
            if (Array.isArray(_data["labels"])) {
                this.labels = [];
                try {
                    for (var _b = __values(_data["labels"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.labels.push(ChartLabelDto.fromJS(item));
                    }
                }
                catch (e_11_1) { e_11 = { error: e_11_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_11) throw e_11.error; }
                }
            }
            this.dataMode = _data["dataMode"];
        }
    };
    ChartLabelsDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ChartLabelsDto();
        result.init(data);
        return result;
    };
    ChartLabelsDto.prototype.toJSON = function (data) {
        var e_12, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.labels)) {
            data["labels"] = [];
            try {
                for (var _b = __values(this.labels), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["labels"].push(item.toJSON());
                }
            }
            catch (e_12_1) { e_12 = { error: e_12_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_12) throw e_12.error; }
            }
        }
        data["dataMode"] = this.dataMode;
        return data;
    };
    ChartLabelsDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ChartLabelsDto();
        result.init(json);
        return result;
    };
    return ChartLabelsDto;
}());
export { ChartLabelsDto };
var ChartDataSetDtoOfInt32 = /** @class */ (function () {
    function ChartDataSetDtoOfInt32(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ChartDataSetDtoOfInt32.prototype.init = function (_data) {
        var e_13, _a;
        if (_data) {
            this.label = _data["label"];
            if (Array.isArray(_data["data"])) {
                this.data = [];
                try {
                    for (var _b = __values(_data["data"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.data.push(item);
                    }
                }
                catch (e_13_1) { e_13 = { error: e_13_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_13) throw e_13.error; }
                }
            }
            this.stack = _data["stack"];
        }
    };
    ChartDataSetDtoOfInt32.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ChartDataSetDtoOfInt32();
        result.init(data);
        return result;
    };
    ChartDataSetDtoOfInt32.prototype.toJSON = function (data) {
        var e_14, _a;
        data = typeof data === 'object' ? data : {};
        data["label"] = this.label;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            try {
                for (var _b = __values(this.data), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["data"].push(item);
                }
            }
            catch (e_14_1) { e_14 = { error: e_14_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_14) throw e_14.error; }
            }
        }
        data["stack"] = this.stack;
        return data;
    };
    ChartDataSetDtoOfInt32.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ChartDataSetDtoOfInt32();
        result.init(json);
        return result;
    };
    return ChartDataSetDtoOfInt32;
}());
export { ChartDataSetDtoOfInt32 };
var ChartLabelDto = /** @class */ (function () {
    function ChartLabelDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ChartLabelDto.prototype.init = function (_data) {
        if (_data) {
            this.label = _data["label"];
            this.id = _data["id"];
            this.code = _data["code"];
            this.startDateTime = _data["startDateTime"] ? new Date(_data["startDateTime"].toString()) : undefined;
            this.endDateTime = _data["endDateTime"] ? new Date(_data["endDateTime"].toString()) : undefined;
            this.dateTime = _data["dateTime"] ? new Date(_data["dateTime"].toString()) : undefined;
        }
    };
    ChartLabelDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ChartLabelDto();
        result.init(data);
        return result;
    };
    ChartLabelDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["label"] = this.label;
        data["id"] = this.id;
        data["code"] = this.code;
        data["startDateTime"] = this.startDateTime ? this.startDateTime.toISOString() : undefined;
        data["endDateTime"] = this.endDateTime ? this.endDateTime.toISOString() : undefined;
        data["dateTime"] = this.dateTime ? this.dateTime.toISOString() : undefined;
        return data;
    };
    ChartLabelDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ChartLabelDto();
        result.init(json);
        return result;
    };
    return ChartLabelDto;
}());
export { ChartLabelDto };
var AjaxResponseOfListOfChartDataResponseDto = /** @class */ (function () {
    function AjaxResponseOfListOfChartDataResponseDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfListOfChartDataResponseDto.prototype.init = function (_data) {
        var e_15, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(ChartDataResponseDto.fromJS(item));
                    }
                }
                catch (e_15_1) { e_15 = { error: e_15_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_15) throw e_15.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfListOfChartDataResponseDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfListOfChartDataResponseDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfListOfChartDataResponseDto.prototype.toJSON = function (data) {
        var e_16, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_16_1) { e_16 = { error: e_16_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_16) throw e_16.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfListOfChartDataResponseDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfListOfChartDataResponseDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfListOfChartDataResponseDto;
}());
export { AjaxResponseOfListOfChartDataResponseDto };
var GetOrdersPastStatusTimeThresholdDataRequestDto = /** @class */ (function () {
    function GetOrdersPastStatusTimeThresholdDataRequestDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    GetOrdersPastStatusTimeThresholdDataRequestDto.prototype.init = function (_data) {
        if (_data) {
            this.programId = _data["programId"];
        }
    };
    GetOrdersPastStatusTimeThresholdDataRequestDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new GetOrdersPastStatusTimeThresholdDataRequestDto();
        result.init(data);
        return result;
    };
    GetOrdersPastStatusTimeThresholdDataRequestDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["programId"] = this.programId;
        return data;
    };
    GetOrdersPastStatusTimeThresholdDataRequestDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new GetOrdersPastStatusTimeThresholdDataRequestDto();
        result.init(json);
        return result;
    };
    return GetOrdersPastStatusTimeThresholdDataRequestDto;
}());
export { GetOrdersPastStatusTimeThresholdDataRequestDto };
var AjaxResponseOfListOfSimpleOrderDto = /** @class */ (function () {
    function AjaxResponseOfListOfSimpleOrderDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfListOfSimpleOrderDto.prototype.init = function (_data) {
        var e_17, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(SimpleOrderDto.fromJS(item));
                    }
                }
                catch (e_17_1) { e_17 = { error: e_17_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_17) throw e_17.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfListOfSimpleOrderDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfListOfSimpleOrderDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfListOfSimpleOrderDto.prototype.toJSON = function (data) {
        var e_18, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_18_1) { e_18 = { error: e_18_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_18) throw e_18.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfListOfSimpleOrderDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfListOfSimpleOrderDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfListOfSimpleOrderDto;
}());
export { AjaxResponseOfListOfSimpleOrderDto };
var SimpleOrderDto = /** @class */ (function () {
    function SimpleOrderDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    SimpleOrderDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.orderId = _data["orderId"];
            this.orderPassedThresholdDate = _data["orderPassedThresholdDate"] ? new Date(_data["orderPassedThresholdDate"].toString()) : undefined;
        }
    };
    SimpleOrderDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new SimpleOrderDto();
        result.init(data);
        return result;
    };
    SimpleOrderDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["orderId"] = this.orderId;
        data["orderPassedThresholdDate"] = this.orderPassedThresholdDate ? this.orderPassedThresholdDate.toISOString() : undefined;
        return data;
    };
    SimpleOrderDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new SimpleOrderDto();
        result.init(json);
        return result;
    };
    return SimpleOrderDto;
}());
export { SimpleOrderDto };
var SwaggerException = /** @class */ (function (_super) {
    __extends(SwaggerException, _super);
    function SwaggerException(message, status, response, headers, result) {
        var _this = _super.call(this) || this;
        _this.isSwaggerException = true;
        _this.message = message;
        _this.status = status;
        _this.response = response;
        _this.headers = headers;
        _this.result = result;
        return _this;
    }
    SwaggerException.isSwaggerException = function (obj) {
        return obj.isSwaggerException === true;
    };
    return SwaggerException;
}(Error));
export { SwaggerException };
function throwException(message, status, response, headers, result) {
    if (result !== null && result !== undefined)
        return Observable.throw(result);
    else
        return Observable.throw(new SwaggerException(message, status, response, headers, null));
}
function blobToText(blob) {
    return new Observable(function (observer) {
        if (!blob) {
            observer.next("");
            observer.complete();
        }
        else {
            var reader = new FileReader();
            reader.onload = function (event) {
                observer.next(event.target.result);
                observer.complete();
            };
            reader.readAsText(blob);
        }
    });
}
//# sourceMappingURL=om-dashboard.js.map