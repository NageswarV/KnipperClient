/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.2.2.0 (NJsonSchema v10.1.4.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming
import { __decorate, __extends, __metadata, __param, __values } from "tslib";
import 'rxjs/add/observable/fromPromise';
import 'rxjs/add/observable/of';
import 'rxjs/add/observable/throw';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import 'rxjs/add/operator/mergeMap';
import 'rxjs/add/operator/catch';
import { Observable } from 'rxjs/Observable';
import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';
export var Communication_API_BASE_URL = new InjectionToken('Communication_API_BASE_URL');
var ServiceBaseConfig = /** @class */ (function () {
    function ServiceBaseConfig() {
    }
    return ServiceBaseConfig;
}());
export { ServiceBaseConfig };
var ServiceBase = /** @class */ (function () {
    function ServiceBase(config) {
        this.apimHeaderName = 'Ocp-Apim-Subscription-Key';
        this.tenantIdHeaderName = 'TenantId';
        this.tenantIdLocalStorageKey = 'samplicity-dtp-current-client';
        this.idTokenKey = 'samplicity-id-token';
        this.apiKey = config.key;
    }
    ServiceBase.prototype.transformOptions = function (options) {
        var headers = options.headers;
        if (this.apiKey) {
            headers = headers.append(this.apimHeaderName, this.apiKey);
        }
        var tenantId = sessionStorage.getItem(this.tenantIdLocalStorageKey);
        if (tenantId) {
            headers = headers.append(this.tenantIdHeaderName, tenantId);
        }
        var token = localStorage.getItem(this.idTokenKey);
        if (token) {
            headers = headers.append('Authorization', 'Bearer ' + token);
        }
        options.headers = headers;
        return Promise.resolve(options);
    };
    return ServiceBase;
}());
export { ServiceBase };
var Communication = /** @class */ (function (_super) {
    __extends(Communication, _super);
    function Communication(configuration, http, baseUrl) {
        var _this = _super.call(this, configuration) || this;
        _this.jsonParseReviver = undefined;
        _this.http = http;
        _this.baseUrl = baseUrl ? baseUrl : "";
        return _this;
    }
    /**
     * @param filter (optional)
     * @return Success
     */
    Communication.prototype.searchCommunications = function (filter) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/SearchCommunications";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(filter);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchCommunications(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchCommunications(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processSearchCommunications = function (response) {
        var e_1, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPagedResultOfCommunicationSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param orderId (optional)
     * @return Success
     */
    Communication.prototype.searchCommunicationsByOrderId = function (orderId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/SearchCommunicationsByOrderId?";
        if (orderId !== undefined)
            url_ += "orderId=" + encodeURIComponent("" + orderId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSearchCommunicationsByOrderId(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSearchCommunicationsByOrderId(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processSearchCommunicationsByOrderId = function (response) {
        var e_2, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfIListOfCommunicationSearchDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param id (optional)
     * @return Success
     */
    Communication.prototype.getCommunicationById = function (id) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/GetCommunicationById?";
        if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetCommunicationById(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetCommunicationById(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGetCommunicationById = function (response) {
        var e_3, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfCommunicationDetailDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param dto (optional)
     * @return Success
     */
    Communication.prototype.updateCommunicationStatus = function (dto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/UpdateCommunicationStatus";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(dto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("put", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processUpdateCommunicationStatus(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processUpdateCommunicationStatus(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processUpdateCommunicationStatus = function (response) {
        var e_4, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfCommunicationDetailDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param communicationRequest (optional)
     * @return Success
     */
    Communication.prototype.addCommunicationRecord = function (communicationRequest) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/AddCommunicationRecord";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(communicationRequest);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processAddCommunicationRecord(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processAddCommunicationRecord(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processAddCommunicationRecord = function (response) {
        var e_5, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfCreateCommunicationResponseDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param dto (optional)
     * @return Success
     */
    Communication.prototype.resendCommunication = function (dto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/ResendCommunication";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(dto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processResendCommunication(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processResendCommunication(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processResendCommunication = function (response) {
        var e_6, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfCommunicationDetailDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param programId (optional)
     * @return Success
     */
    Communication.prototype.getDocumentTemplatesByProgramId = function (programId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/GetDocumentTemplatesByProgramId?";
        if (programId !== undefined)
            url_ += "programId=" + encodeURIComponent("" + programId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetDocumentTemplatesByProgramId(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetDocumentTemplatesByProgramId(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGetDocumentTemplatesByProgramId = function (response) {
        var e_7, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfListOfDocumentTemplateDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param orderId (optional)
     * @param formId (optional)
     * @param tenantId (optional)
     * @param commDirection (optional)
     * @param documentStatus (optional)
     * @return Success
     */
    Communication.prototype.getAocByFormId = function (orderId, formId, tenantId, commDirection, documentStatus) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/GetAocByFormId?";
        if (orderId !== undefined)
            url_ += "orderId=" + encodeURIComponent("" + orderId) + "&";
        if (formId !== undefined)
            url_ += "formId=" + encodeURIComponent("" + formId) + "&";
        if (tenantId !== undefined)
            url_ += "tenantId=" + encodeURIComponent("" + tenantId) + "&";
        if (commDirection !== undefined)
            url_ += "commDirection=" + encodeURIComponent("" + commDirection) + "&";
        if (documentStatus !== undefined)
            url_ += "documentStatus=" + encodeURIComponent("" + documentStatus) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetAocByFormId(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetAocByFormId(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGetAocByFormId = function (response) {
        var e_8, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfEntityDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param formId (optional)
     * @param tenantId (optional)
     * @return Success
     */
    Communication.prototype.getIfBlankSrfExists = function (formId, tenantId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/GetIfBlankSrfExists?";
        if (formId !== undefined)
            url_ += "formId=" + encodeURIComponent("" + formId) + "&";
        if (tenantId !== undefined)
            url_ += "tenantId=" + encodeURIComponent("" + tenantId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetIfBlankSrfExists(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetIfBlankSrfExists(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGetIfBlankSrfExists = function (response) {
        var e_9, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_9) throw e_9.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfBoolean.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param programId (optional)
     * @param communicationType (optional)
     * @param tenantId (optional)
     * @return Success
     */
    Communication.prototype.getCommunicationsByProgramId = function (programId, communicationType, tenantId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/GetCommunicationsByProgramId?";
        if (programId !== undefined)
            url_ += "programId=" + encodeURIComponent("" + programId) + "&";
        if (communicationType !== undefined)
            url_ += "communicationType=" + encodeURIComponent("" + communicationType) + "&";
        if (tenantId !== undefined)
            url_ += "tenantId=" + encodeURIComponent("" + tenantId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetCommunicationsByProgramId(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetCommunicationsByProgramId(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGetCommunicationsByProgramId = function (response) {
        var e_10, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_10_1) { e_10 = { error: e_10_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_10) throw e_10.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfBoolean.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param formId (optional)
     * @param tenantId (optional)
     * @return Success
     */
    Communication.prototype.getDocumentByFormId = function (formId, tenantId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/GetDocumentByFormId?";
        if (formId !== undefined)
            url_ += "formId=" + encodeURIComponent("" + formId) + "&";
        if (tenantId !== undefined)
            url_ += "tenantId=" + encodeURIComponent("" + tenantId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetDocumentByFormId(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetDocumentByFormId(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGetDocumentByFormId = function (response) {
        var e_11, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_11_1) { e_11 = { error: e_11_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_11) throw e_11.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfString.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param entityId (optional)
     * @param entityTypeId (optional)
     * @param documentTypeId (optional)
     * @return Success
     */
    Communication.prototype.getDocumentsByEntityIds = function (entityId, entityTypeId, documentTypeId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/GetDocumentsByEntityIds?";
        if (entityId !== undefined)
            url_ += "entityId=" + encodeURIComponent("" + entityId) + "&";
        if (entityTypeId !== undefined)
            url_ += "entityTypeId=" + encodeURIComponent("" + entityTypeId) + "&";
        if (documentTypeId !== undefined)
            url_ += "documentTypeId=" + encodeURIComponent("" + documentTypeId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetDocumentsByEntityIds(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetDocumentsByEntityIds(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGetDocumentsByEntityIds = function (response) {
        var e_12, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_12_1) { e_12 = { error: e_12_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_12) throw e_12.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfListOfDocumentDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param entityTypeId (optional)
     * @param entityId (optional)
     * @param tenantId (optional)
     * @param commDirection (optional)
     * @param commType (optional)
     * @return Success
     */
    Communication.prototype.getCommReceivedDateByEntityId = function (entityTypeId, entityId, tenantId, commDirection, commType) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/GetCommReceivedDateByEntityId?";
        if (entityTypeId !== undefined)
            url_ += "entityTypeId=" + encodeURIComponent("" + entityTypeId) + "&";
        if (entityId !== undefined)
            url_ += "entityId=" + encodeURIComponent("" + entityId) + "&";
        if (tenantId !== undefined)
            url_ += "tenantId=" + encodeURIComponent("" + tenantId) + "&";
        if (commDirection !== undefined)
            url_ += "commDirection=" + encodeURIComponent("" + commDirection) + "&";
        if (commType !== undefined)
            url_ += "commType=" + encodeURIComponent("" + commType) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetCommReceivedDateByEntityId(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetCommReceivedDateByEntityId(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGetCommReceivedDateByEntityId = function (response) {
        var e_13, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_13_1) { e_13 = { error: e_13_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_13) throw e_13.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfNullableOfDateTime.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param orderId (optional)
     * @param newOrderId (optional)
     * @param tenantId (optional)
     * @return Success
     */
    Communication.prototype.copyCommunicationHistory = function (orderId, newOrderId, tenantId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/CopyCommunicationHistory?";
        if (orderId !== undefined)
            url_ += "orderId=" + encodeURIComponent("" + orderId) + "&";
        if (newOrderId !== undefined)
            url_ += "newOrderId=" + encodeURIComponent("" + newOrderId) + "&";
        if (tenantId !== undefined)
            url_ += "tenantId=" + encodeURIComponent("" + tenantId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processCopyCommunicationHistory(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processCopyCommunicationHistory(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processCopyCommunicationHistory = function (response) {
        var e_14, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_14_1) { e_14 = { error: e_14_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_14) throw e_14.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfBoolean.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param orderId (optional)
     * @param communicationTypes (optional)
     * @return Success
     */
    Communication.prototype.getLatestCommunicationWithTypesByOrderId = function (orderId, communicationTypes) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/GetLatestCommunicationWithTypesByOrderId?";
        if (orderId !== undefined)
            url_ += "orderId=" + encodeURIComponent("" + orderId) + "&";
        if (communicationTypes !== undefined)
            communicationTypes && communicationTypes.forEach(function (item) { url_ += "communicationTypes=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetLatestCommunicationWithTypesByOrderId(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetLatestCommunicationWithTypesByOrderId(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGetLatestCommunicationWithTypesByOrderId = function (response) {
        var e_15, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_15_1) { e_15 = { error: e_15_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_15) throw e_15.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfSimpleCommunicationDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param orderId (optional)
     * @param communicationTypes (optional)
     * @return Success
     */
    Communication.prototype.getLatestAocCommunicationByOrderId = function (orderId, communicationTypes) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/CommunicationService/GetLatestAocCommunicationByOrderId?";
        if (orderId !== undefined)
            url_ += "orderId=" + encodeURIComponent("" + orderId) + "&";
        if (communicationTypes !== undefined)
            communicationTypes && communicationTypes.forEach(function (item) { url_ += "communicationTypes=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("get", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGetLatestAocCommunicationByOrderId(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGetLatestAocCommunicationByOrderId(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGetLatestAocCommunicationByOrderId = function (response) {
        var e_16, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_16_1) { e_16 = { error: e_16_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_16) throw e_16.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param documentGenerationRequest (optional)
     * @return Success
     */
    Communication.prototype.generateDocument = function (documentGenerationRequest) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/DocumentGenerationService/GenerateDocument";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(documentGenerationRequest);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGenerateDocument(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGenerateDocument(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGenerateDocument = function (response) {
        var e_17, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_17_1) { e_17 = { error: e_17_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_17) throw e_17.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfDocumentGenerationResponse.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param batchGenerationRequest (optional)
     * @return Success
     */
    Communication.prototype.generateDocumentBatch = function (batchGenerationRequest) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/DocumentGenerationService/GenerateDocumentBatch";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(batchGenerationRequest);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processGenerateDocumentBatch(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processGenerateDocumentBatch(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processGenerateDocumentBatch = function (response) {
        var e_18, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_18_1) { e_18 = { error: e_18_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_18) throw e_18.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfDocumentBatchGenerationResponse.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param emailRequestDto (optional)
     * @return Success
     */
    Communication.prototype.sendEmail = function (emailRequestDto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/EmailService/SendEmail";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(emailRequestDto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSendEmail(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSendEmail(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processSendEmail = function (response) {
        var e_19, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_19_1) { e_19 = { error: e_19_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_19) throw e_19.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfEmailResponse.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param faxRequest (optional)
     * @return Success
     */
    Communication.prototype.sendFax = function (faxRequest) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/FaxService/SendFax";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(faxRequest);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processSendFax(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processSendFax(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processSendFax = function (response) {
        var e_20, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_20_1) { e_20 = { error: e_20_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_20) throw e_20.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfFaxResponse.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param tenantId (optional)
     * @return Success
     */
    Communication.prototype.buildEmailTemplateDto = function (tenantId) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/OutboundCommunicationTestService/BuildEmailTemplateDto?";
        if (tenantId !== undefined)
            url_ += "tenantId=" + encodeURIComponent("" + tenantId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processBuildEmailTemplateDto(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processBuildEmailTemplateDto(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processBuildEmailTemplateDto = function (response) {
        var e_21, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_21_1) { e_21 = { error: e_21_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_21) throw e_21.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = EmailTemplateDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    /**
     * @param requestDto (optional)
     * @return Success
     */
    Communication.prototype.convertToPdf = function (requestDto) {
        var _this = this;
        var url_ = this.baseUrl + "/api/services/app/PdfConversionService/ConvertToPdf";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(requestDto);
        var options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Observable.fromPromise(this.transformOptions(options_)).flatMap(function (transformedOptions_) {
            return _this.http.request("post", url_, transformedOptions_);
        }).flatMap(function (response_) {
            return _this.processConvertToPdf(response_);
        }).catch(function (response_) {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return _this.processConvertToPdf(response_);
                }
                catch (e) {
                    return Observable.throw(e);
                }
            }
            else
                return Observable.throw(response_);
        });
    };
    Communication.prototype.processConvertToPdf = function (response) {
        var e_22, _a;
        var _this = this;
        var status = response.status;
        var responseBlob = response instanceof HttpResponse ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            try {
                for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    _headers[key] = response.headers.get(key);
                }
            }
            catch (e_22_1) { e_22 = { error: e_22_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_22) throw e_22.error; }
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = AjaxResponseOfPdfConversionResponseDto.fromJS(resultData200);
                return Observable.of(result200);
            });
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).flatMap(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Observable.of(null);
    };
    Communication = __decorate([
        Injectable(),
        __param(0, Inject(ServiceBaseConfig)), __param(1, Inject(HttpClient)), __param(2, Optional()), __param(2, Inject(Communication_API_BASE_URL)),
        __metadata("design:paramtypes", [ServiceBaseConfig, HttpClient, String])
    ], Communication);
    return Communication;
}(ServiceBase));
export { Communication };
var CommunicationSearchFilterDto = /** @class */ (function () {
    function CommunicationSearchFilterDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CommunicationSearchFilterDto.prototype.init = function (_data) {
        var e_23, _a, e_24, _b, e_25, _c, e_26, _d, e_27, _e, e_28, _f;
        if (_data) {
            this.programName = _data["programName"];
            this.jobNumber = _data["jobNumber"];
            this.orderNumber = _data["orderNumber"];
            this.orderDateStart = _data["orderDateStart"] ? new Date(_data["orderDateStart"].toString()) : undefined;
            this.orderDateEnd = _data["orderDateEnd"] ? new Date(_data["orderDateEnd"].toString()) : undefined;
            this.formId = _data["formId"];
            this.hcpLastName = _data["hcpLastName"];
            this.hcpFirstName = _data["hcpFirstName"];
            this.hcpKidNumber = _data["hcpKidNumber"];
            this.hcpsln = _data["hcpsln"];
            this.communicationId = _data["communicationId"];
            if (Array.isArray(_data["communicationTypeIds"])) {
                this.communicationTypeIds = [];
                try {
                    for (var _g = __values(_data["communicationTypeIds"]), _h = _g.next(); !_h.done; _h = _g.next()) {
                        var item = _h.value;
                        this.communicationTypeIds.push(item);
                    }
                }
                catch (e_23_1) { e_23 = { error: e_23_1 }; }
                finally {
                    try {
                        if (_h && !_h.done && (_a = _g.return)) _a.call(_g);
                    }
                    finally { if (e_23) throw e_23.error; }
                }
            }
            if (Array.isArray(_data["communicationMethodIds"])) {
                this.communicationMethodIds = [];
                try {
                    for (var _j = __values(_data["communicationMethodIds"]), _k = _j.next(); !_k.done; _k = _j.next()) {
                        var item = _k.value;
                        this.communicationMethodIds.push(item);
                    }
                }
                catch (e_24_1) { e_24 = { error: e_24_1 }; }
                finally {
                    try {
                        if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                    }
                    finally { if (e_24) throw e_24.error; }
                }
            }
            if (Array.isArray(_data["communicationDirectionIds"])) {
                this.communicationDirectionIds = [];
                try {
                    for (var _l = __values(_data["communicationDirectionIds"]), _m = _l.next(); !_m.done; _m = _l.next()) {
                        var item = _m.value;
                        this.communicationDirectionIds.push(item);
                    }
                }
                catch (e_25_1) { e_25 = { error: e_25_1 }; }
                finally {
                    try {
                        if (_m && !_m.done && (_c = _l.return)) _c.call(_l);
                    }
                    finally { if (e_25) throw e_25.error; }
                }
            }
            if (Array.isArray(_data["communicationStatusIds"])) {
                this.communicationStatusIds = [];
                try {
                    for (var _o = __values(_data["communicationStatusIds"]), _p = _o.next(); !_p.done; _p = _o.next()) {
                        var item = _p.value;
                        this.communicationStatusIds.push(item);
                    }
                }
                catch (e_26_1) { e_26 = { error: e_26_1 }; }
                finally {
                    try {
                        if (_p && !_p.done && (_d = _o.return)) _d.call(_o);
                    }
                    finally { if (e_26) throw e_26.error; }
                }
            }
            if (Array.isArray(_data["inboundDocumentStatusIds"])) {
                this.inboundDocumentStatusIds = [];
                try {
                    for (var _q = __values(_data["inboundDocumentStatusIds"]), _r = _q.next(); !_r.done; _r = _q.next()) {
                        var item = _r.value;
                        this.inboundDocumentStatusIds.push(item);
                    }
                }
                catch (e_27_1) { e_27 = { error: e_27_1 }; }
                finally {
                    try {
                        if (_r && !_r.done && (_e = _q.return)) _e.call(_q);
                    }
                    finally { if (e_27) throw e_27.error; }
                }
            }
            if (Array.isArray(_data["outboundDocumentStatusIds"])) {
                this.outboundDocumentStatusIds = [];
                try {
                    for (var _s = __values(_data["outboundDocumentStatusIds"]), _t = _s.next(); !_t.done; _t = _s.next()) {
                        var item = _t.value;
                        this.outboundDocumentStatusIds.push(item);
                    }
                }
                catch (e_28_1) { e_28 = { error: e_28_1 }; }
                finally {
                    try {
                        if (_t && !_t.done && (_f = _s.return)) _f.call(_s);
                    }
                    finally { if (e_28) throw e_28.error; }
                }
            }
            this.communicationDateStart = _data["communicationDateStart"] ? new Date(_data["communicationDateStart"].toString()) : undefined;
            this.communicationDateEnd = _data["communicationDateEnd"] ? new Date(_data["communicationDateEnd"].toString()) : undefined;
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.sortBy = _data["sortBy"];
            this.filterString = _data["filterString"];
        }
    };
    CommunicationSearchFilterDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CommunicationSearchFilterDto();
        result.init(data);
        return result;
    };
    CommunicationSearchFilterDto.prototype.toJSON = function (data) {
        var e_29, _a, e_30, _b, e_31, _c, e_32, _d, e_33, _e, e_34, _f;
        data = typeof data === 'object' ? data : {};
        data["programName"] = this.programName;
        data["jobNumber"] = this.jobNumber;
        data["orderNumber"] = this.orderNumber;
        data["orderDateStart"] = this.orderDateStart ? this.orderDateStart.toISOString() : undefined;
        data["orderDateEnd"] = this.orderDateEnd ? this.orderDateEnd.toISOString() : undefined;
        data["formId"] = this.formId;
        data["hcpLastName"] = this.hcpLastName;
        data["hcpFirstName"] = this.hcpFirstName;
        data["hcpKidNumber"] = this.hcpKidNumber;
        data["hcpsln"] = this.hcpsln;
        data["communicationId"] = this.communicationId;
        if (Array.isArray(this.communicationTypeIds)) {
            data["communicationTypeIds"] = [];
            try {
                for (var _g = __values(this.communicationTypeIds), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var item = _h.value;
                    data["communicationTypeIds"].push(item);
                }
            }
            catch (e_29_1) { e_29 = { error: e_29_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_a = _g.return)) _a.call(_g);
                }
                finally { if (e_29) throw e_29.error; }
            }
        }
        if (Array.isArray(this.communicationMethodIds)) {
            data["communicationMethodIds"] = [];
            try {
                for (var _j = __values(this.communicationMethodIds), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var item = _k.value;
                    data["communicationMethodIds"].push(item);
                }
            }
            catch (e_30_1) { e_30 = { error: e_30_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                }
                finally { if (e_30) throw e_30.error; }
            }
        }
        if (Array.isArray(this.communicationDirectionIds)) {
            data["communicationDirectionIds"] = [];
            try {
                for (var _l = __values(this.communicationDirectionIds), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var item = _m.value;
                    data["communicationDirectionIds"].push(item);
                }
            }
            catch (e_31_1) { e_31 = { error: e_31_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_c = _l.return)) _c.call(_l);
                }
                finally { if (e_31) throw e_31.error; }
            }
        }
        if (Array.isArray(this.communicationStatusIds)) {
            data["communicationStatusIds"] = [];
            try {
                for (var _o = __values(this.communicationStatusIds), _p = _o.next(); !_p.done; _p = _o.next()) {
                    var item = _p.value;
                    data["communicationStatusIds"].push(item);
                }
            }
            catch (e_32_1) { e_32 = { error: e_32_1 }; }
            finally {
                try {
                    if (_p && !_p.done && (_d = _o.return)) _d.call(_o);
                }
                finally { if (e_32) throw e_32.error; }
            }
        }
        if (Array.isArray(this.inboundDocumentStatusIds)) {
            data["inboundDocumentStatusIds"] = [];
            try {
                for (var _q = __values(this.inboundDocumentStatusIds), _r = _q.next(); !_r.done; _r = _q.next()) {
                    var item = _r.value;
                    data["inboundDocumentStatusIds"].push(item);
                }
            }
            catch (e_33_1) { e_33 = { error: e_33_1 }; }
            finally {
                try {
                    if (_r && !_r.done && (_e = _q.return)) _e.call(_q);
                }
                finally { if (e_33) throw e_33.error; }
            }
        }
        if (Array.isArray(this.outboundDocumentStatusIds)) {
            data["outboundDocumentStatusIds"] = [];
            try {
                for (var _s = __values(this.outboundDocumentStatusIds), _t = _s.next(); !_t.done; _t = _s.next()) {
                    var item = _t.value;
                    data["outboundDocumentStatusIds"].push(item);
                }
            }
            catch (e_34_1) { e_34 = { error: e_34_1 }; }
            finally {
                try {
                    if (_t && !_t.done && (_f = _s.return)) _f.call(_s);
                }
                finally { if (e_34) throw e_34.error; }
            }
        }
        data["communicationDateStart"] = this.communicationDateStart ? this.communicationDateStart.toISOString() : undefined;
        data["communicationDateEnd"] = this.communicationDateEnd ? this.communicationDateEnd.toISOString() : undefined;
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["sortBy"] = this.sortBy;
        data["filterString"] = this.filterString;
        return data;
    };
    CommunicationSearchFilterDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new CommunicationSearchFilterDto();
        result.init(json);
        return result;
    };
    return CommunicationSearchFilterDto;
}());
export { CommunicationSearchFilterDto };
var AjaxResponseOfPagedResultOfCommunicationSearchDto = /** @class */ (function () {
    function AjaxResponseOfPagedResultOfCommunicationSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPagedResultOfCommunicationSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PagedResultOfCommunicationSearchDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPagedResultOfCommunicationSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPagedResultOfCommunicationSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPagedResultOfCommunicationSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPagedResultOfCommunicationSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPagedResultOfCommunicationSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPagedResultOfCommunicationSearchDto;
}());
export { AjaxResponseOfPagedResultOfCommunicationSearchDto };
var PagedResultOfCommunicationSearchDto = /** @class */ (function () {
    function PagedResultOfCommunicationSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PagedResultOfCommunicationSearchDto.prototype.init = function (_data) {
        var e_35, _a;
        if (_data) {
            this.totalCount = _data["totalCount"];
            if (Array.isArray(_data["items"])) {
                this.items = [];
                try {
                    for (var _b = __values(_data["items"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.items.push(CommunicationSearchDto.fromJS(item));
                    }
                }
                catch (e_35_1) { e_35 = { error: e_35_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_35) throw e_35.error; }
                }
            }
        }
    };
    PagedResultOfCommunicationSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PagedResultOfCommunicationSearchDto();
        result.init(data);
        return result;
    };
    PagedResultOfCommunicationSearchDto.prototype.toJSON = function (data) {
        var e_36, _a;
        data = typeof data === 'object' ? data : {};
        data["totalCount"] = this.totalCount;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            try {
                for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["items"].push(item.toJSON());
                }
            }
            catch (e_36_1) { e_36 = { error: e_36_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_36) throw e_36.error; }
            }
        }
        return data;
    };
    PagedResultOfCommunicationSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PagedResultOfCommunicationSearchDto();
        result.init(json);
        return result;
    };
    return PagedResultOfCommunicationSearchDto;
}());
export { PagedResultOfCommunicationSearchDto };
var ErrorInfo = /** @class */ (function () {
    function ErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ErrorInfo.prototype.init = function (_data) {
        var e_37, _a;
        if (_data) {
            this.code = _data["code"];
            this.message = _data["message"];
            this.details = _data["details"];
            if (Array.isArray(_data["validationErrors"])) {
                this.validationErrors = [];
                try {
                    for (var _b = __values(_data["validationErrors"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.validationErrors.push(ValidationErrorInfo.fromJS(item));
                    }
                }
                catch (e_37_1) { e_37 = { error: e_37_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_37) throw e_37.error; }
                }
            }
        }
    };
    ErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ErrorInfo();
        result.init(data);
        return result;
    };
    ErrorInfo.prototype.toJSON = function (data) {
        var e_38, _a;
        data = typeof data === 'object' ? data : {};
        data["code"] = this.code;
        data["message"] = this.message;
        data["details"] = this.details;
        if (Array.isArray(this.validationErrors)) {
            data["validationErrors"] = [];
            try {
                for (var _b = __values(this.validationErrors), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["validationErrors"].push(item.toJSON());
                }
            }
            catch (e_38_1) { e_38 = { error: e_38_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_38) throw e_38.error; }
            }
        }
        return data;
    };
    ErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ErrorInfo();
        result.init(json);
        return result;
    };
    return ErrorInfo;
}());
export { ErrorInfo };
var CommunicationSearchDto = /** @class */ (function () {
    function CommunicationSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CommunicationSearchDto.prototype.init = function (_data) {
        if (_data) {
            this.hcpFullName = _data["hcpFullName"];
            this.hcpFirstName = _data["hcpFirstName"];
            this.hcpLastName = _data["hcpLastName"];
            this.hcpKidNumber = _data["hcpKidNumber"];
            this.hcpSln = _data["hcpSln"];
            this.orderNumber = _data["orderNumber"];
            this.orderDate = _data["orderDate"] ? new Date(_data["orderDate"].toString()) : undefined;
            this.programName = _data["programName"];
            this.jobNumber = _data["jobNumber"];
            this.communicationId = _data["communicationId"];
            this.communicationTypeId = _data["communicationTypeId"];
            this.communicationStatusId = _data["communicationStatusId"];
            this.communicationDate = _data["communicationDate"] ? new Date(_data["communicationDate"].toString()) : undefined;
            this.formId = _data["formId"];
            this.communicationDirectionId = _data["communicationDirectionId"];
            this.communicationMethodId = _data["communicationMethodId"];
            this.documentStatusId = _data["documentStatusId"];
            this.id = _data["id"];
        }
    };
    CommunicationSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CommunicationSearchDto();
        result.init(data);
        return result;
    };
    CommunicationSearchDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["hcpFullName"] = this.hcpFullName;
        data["hcpFirstName"] = this.hcpFirstName;
        data["hcpLastName"] = this.hcpLastName;
        data["hcpKidNumber"] = this.hcpKidNumber;
        data["hcpSln"] = this.hcpSln;
        data["orderNumber"] = this.orderNumber;
        data["orderDate"] = this.orderDate ? this.orderDate.toISOString() : undefined;
        data["programName"] = this.programName;
        data["jobNumber"] = this.jobNumber;
        data["communicationId"] = this.communicationId;
        data["communicationTypeId"] = this.communicationTypeId;
        data["communicationStatusId"] = this.communicationStatusId;
        data["communicationDate"] = this.communicationDate ? this.communicationDate.toISOString() : undefined;
        data["formId"] = this.formId;
        data["communicationDirectionId"] = this.communicationDirectionId;
        data["communicationMethodId"] = this.communicationMethodId;
        data["documentStatusId"] = this.documentStatusId;
        data["id"] = this.id;
        return data;
    };
    CommunicationSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new CommunicationSearchDto();
        result.init(json);
        return result;
    };
    return CommunicationSearchDto;
}());
export { CommunicationSearchDto };
var ValidationErrorInfo = /** @class */ (function () {
    function ValidationErrorInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ValidationErrorInfo.prototype.init = function (_data) {
        var e_39, _a;
        if (_data) {
            this.message = _data["message"];
            if (Array.isArray(_data["members"])) {
                this.members = [];
                try {
                    for (var _b = __values(_data["members"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.members.push(item);
                    }
                }
                catch (e_39_1) { e_39 = { error: e_39_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_39) throw e_39.error; }
                }
            }
        }
    };
    ValidationErrorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValidationErrorInfo();
        result.init(data);
        return result;
    };
    ValidationErrorInfo.prototype.toJSON = function (data) {
        var e_40, _a;
        data = typeof data === 'object' ? data : {};
        data["message"] = this.message;
        if (Array.isArray(this.members)) {
            data["members"] = [];
            try {
                for (var _b = __values(this.members), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["members"].push(item);
                }
            }
            catch (e_40_1) { e_40 = { error: e_40_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_40) throw e_40.error; }
            }
        }
        return data;
    };
    ValidationErrorInfo.prototype.clone = function () {
        var json = this.toJSON();
        var result = new ValidationErrorInfo();
        result.init(json);
        return result;
    };
    return ValidationErrorInfo;
}());
export { ValidationErrorInfo };
var AjaxResponseOfIListOfCommunicationSearchDto = /** @class */ (function () {
    function AjaxResponseOfIListOfCommunicationSearchDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfIListOfCommunicationSearchDto.prototype.init = function (_data) {
        var e_41, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(CommunicationSearchDto.fromJS(item));
                    }
                }
                catch (e_41_1) { e_41 = { error: e_41_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_41) throw e_41.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfIListOfCommunicationSearchDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfIListOfCommunicationSearchDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfIListOfCommunicationSearchDto.prototype.toJSON = function (data) {
        var e_42, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_42_1) { e_42 = { error: e_42_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_42) throw e_42.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfIListOfCommunicationSearchDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfIListOfCommunicationSearchDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfIListOfCommunicationSearchDto;
}());
export { AjaxResponseOfIListOfCommunicationSearchDto };
var AjaxResponseOfCommunicationDetailDto = /** @class */ (function () {
    function AjaxResponseOfCommunicationDetailDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfCommunicationDetailDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? CommunicationDetailDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfCommunicationDetailDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfCommunicationDetailDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfCommunicationDetailDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfCommunicationDetailDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfCommunicationDetailDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfCommunicationDetailDto;
}());
export { AjaxResponseOfCommunicationDetailDto };
var CommunicationDetailDto = /** @class */ (function () {
    function CommunicationDetailDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CommunicationDetailDto.prototype.init = function (_data) {
        var e_43, _a, e_44, _b;
        if (_data) {
            this.id = _data["id"];
            this.requestorName = _data["requestorName"];
            this.hcpFirstName = _data["hcpFirstName"];
            this.hcpLastName = _data["hcpLastName"];
            this.hcpKid = _data["hcpKid"];
            this.communicationId = _data["communicationId"];
            this.formId = _data["formId"];
            this.communicationTypeId = _data["communicationTypeId"];
            this.communicationDirectionId = _data["communicationDirectionId"];
            this.communicationStatusId = _data["communicationStatusId"];
            this.communicationDate = _data["communicationDate"] ? new Date(_data["communicationDate"].toString()) : undefined;
            this.documentAttachment = _data["documentAttachment"];
            this.documentFileName = _data["documentFileName"];
            this.documentStatusId = _data["documentStatusId"];
            this.isDocumentGenerated = _data["isDocumentGenerated"];
            this.client = _data["client"];
            this.programName = _data["programName"];
            this.jobId = _data["jobId"];
            this.orderNumber = _data["orderNumber"];
            this.orderId = _data["orderId"];
            this.orderReceivedDate = _data["orderReceivedDate"];
            this.createdBy = _data["createdBy"];
            this.createdTime = _data["createdTime"] ? new Date(_data["createdTime"].toString()) : undefined;
            this.modifiedBy = _data["modifiedBy"];
            this.modifiedTime = _data["modifiedTime"] ? new Date(_data["modifiedTime"].toString()) : undefined;
            this.aocId = _data["aocId"];
            this.svlId = _data["svlId"];
            this.isResendableFlag = _data["isResendableFlag"];
            this.recipientSenderType = _data["recipientSenderType"];
            if (Array.isArray(_data["communicationHistory"])) {
                this.communicationHistory = [];
                try {
                    for (var _c = __values(_data["communicationHistory"]), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        this.communicationHistory.push(CommunicationHistoryDto.fromJS(item));
                    }
                }
                catch (e_43_1) { e_43 = { error: e_43_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_43) throw e_43.error; }
                }
            }
            if (Array.isArray(_data["names"])) {
                this.names = [];
                try {
                    for (var _e = __values(_data["names"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_44_1) { e_44 = { error: e_44_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_44) throw e_44.error; }
                }
            }
        }
    };
    CommunicationDetailDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CommunicationDetailDto();
        result.init(data);
        return result;
    };
    CommunicationDetailDto.prototype.toJSON = function (data) {
        var e_45, _a, e_46, _b;
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["requestorName"] = this.requestorName;
        data["hcpFirstName"] = this.hcpFirstName;
        data["hcpLastName"] = this.hcpLastName;
        data["hcpKid"] = this.hcpKid;
        data["communicationId"] = this.communicationId;
        data["formId"] = this.formId;
        data["communicationTypeId"] = this.communicationTypeId;
        data["communicationDirectionId"] = this.communicationDirectionId;
        data["communicationStatusId"] = this.communicationStatusId;
        data["communicationDate"] = this.communicationDate ? this.communicationDate.toISOString() : undefined;
        data["documentAttachment"] = this.documentAttachment;
        data["documentFileName"] = this.documentFileName;
        data["documentStatusId"] = this.documentStatusId;
        data["isDocumentGenerated"] = this.isDocumentGenerated;
        data["client"] = this.client;
        data["programName"] = this.programName;
        data["jobId"] = this.jobId;
        data["orderNumber"] = this.orderNumber;
        data["orderId"] = this.orderId;
        data["orderReceivedDate"] = this.orderReceivedDate;
        data["createdBy"] = this.createdBy;
        data["createdTime"] = this.createdTime ? this.createdTime.toISOString() : undefined;
        data["modifiedBy"] = this.modifiedBy;
        data["modifiedTime"] = this.modifiedTime ? this.modifiedTime.toISOString() : undefined;
        data["aocId"] = this.aocId;
        data["svlId"] = this.svlId;
        data["isResendableFlag"] = this.isResendableFlag;
        data["recipientSenderType"] = this.recipientSenderType;
        if (Array.isArray(this.communicationHistory)) {
            data["communicationHistory"] = [];
            try {
                for (var _c = __values(this.communicationHistory), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var item = _d.value;
                    data["communicationHistory"].push(item.toJSON());
                }
            }
            catch (e_45_1) { e_45 = { error: e_45_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_45) throw e_45.error; }
            }
        }
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _e = __values(this.names), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_46_1) { e_46 = { error: e_46_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_46) throw e_46.error; }
            }
        }
        return data;
    };
    CommunicationDetailDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new CommunicationDetailDto();
        result.init(json);
        return result;
    };
    return CommunicationDetailDto;
}());
export { CommunicationDetailDto };
var CommunicationHistoryDto = /** @class */ (function () {
    function CommunicationHistoryDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CommunicationHistoryDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.activityType = _data["activityType"];
            this.communicationStatusId = _data["communicationStatusId"];
            this.documentStatusId = _data["documentStatusId"];
            this.modifiedBy = _data["modifiedBy"];
            this.modifiedDateTime = _data["modifiedDateTime"] ? new Date(_data["modifiedDateTime"].toString()) : undefined;
            this.communicationMethodId = _data["communicationMethodId"];
            this.communicationActivityText = _data["communicationActivityText"];
            this.comment = _data["comment"];
            this.methodDescription = _data["methodDescription"];
        }
    };
    CommunicationHistoryDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CommunicationHistoryDto();
        result.init(data);
        return result;
    };
    CommunicationHistoryDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["activityType"] = this.activityType;
        data["communicationStatusId"] = this.communicationStatusId;
        data["documentStatusId"] = this.documentStatusId;
        data["modifiedBy"] = this.modifiedBy;
        data["modifiedDateTime"] = this.modifiedDateTime ? this.modifiedDateTime.toISOString() : undefined;
        data["communicationMethodId"] = this.communicationMethodId;
        data["communicationActivityText"] = this.communicationActivityText;
        data["comment"] = this.comment;
        data["methodDescription"] = this.methodDescription;
        return data;
    };
    CommunicationHistoryDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new CommunicationHistoryDto();
        result.init(json);
        return result;
    };
    return CommunicationHistoryDto;
}());
export { CommunicationHistoryDto };
var LocalizedValue = /** @class */ (function () {
    function LocalizedValue(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    LocalizedValue.prototype.init = function (_data) {
        if (_data) {
            this.language = _data["language"];
            this.value = _data["value"];
        }
    };
    LocalizedValue.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new LocalizedValue();
        result.init(data);
        return result;
    };
    LocalizedValue.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["language"] = this.language;
        data["value"] = this.value;
        return data;
    };
    LocalizedValue.prototype.clone = function () {
        var json = this.toJSON();
        var result = new LocalizedValue();
        result.init(json);
        return result;
    };
    return LocalizedValue;
}());
export { LocalizedValue };
var CreateCommunicationRequestDto = /** @class */ (function () {
    function CreateCommunicationRequestDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CreateCommunicationRequestDto.prototype.init = function (_data) {
        var e_47, _a;
        if (_data) {
            this.communicationTypeId = _data["communicationTypeId"];
            this.communicationMethodId = _data["communicationMethodId"];
            this.communicationDateTime = _data["communicationDateTime"] ? new Date(_data["communicationDateTime"].toString()) : undefined;
            this.orderId = _data["orderId"];
            this.orderNumber = _data["orderNumber"];
            this.moduleId = _data["moduleId"];
            this.formId = _data["formId"];
            this.requestCode = _data["requestCode"];
            this.documentLocation = _data["documentLocation"] ? DocumentLocation.fromJS(_data["documentLocation"]) : undefined;
            this.tenantId = _data["tenantId"];
            this.userId = _data["userId"];
            if (Array.isArray(_data["referencedEntities"])) {
                this.referencedEntities = [];
                try {
                    for (var _b = __values(_data["referencedEntities"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.referencedEntities.push(SamplicityReferencedEntity.fromJS(item));
                    }
                }
                catch (e_47_1) { e_47 = { error: e_47_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_47) throw e_47.error; }
                }
            }
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
            this.creationTime = _data["creationTime"] ? new Date(_data["creationTime"].toString()) : undefined;
        }
    };
    CreateCommunicationRequestDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CreateCommunicationRequestDto();
        result.init(data);
        return result;
    };
    CreateCommunicationRequestDto.prototype.toJSON = function (data) {
        var e_48, _a;
        data = typeof data === 'object' ? data : {};
        data["communicationTypeId"] = this.communicationTypeId;
        data["communicationMethodId"] = this.communicationMethodId;
        data["communicationDateTime"] = this.communicationDateTime ? this.communicationDateTime.toISOString() : undefined;
        data["orderId"] = this.orderId;
        data["orderNumber"] = this.orderNumber;
        data["moduleId"] = this.moduleId;
        data["formId"] = this.formId;
        data["requestCode"] = this.requestCode;
        data["documentLocation"] = this.documentLocation ? this.documentLocation.toJSON() : undefined;
        data["tenantId"] = this.tenantId;
        data["userId"] = this.userId;
        if (Array.isArray(this.referencedEntities)) {
            data["referencedEntities"] = [];
            try {
                for (var _b = __values(this.referencedEntities), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["referencedEntities"].push(item.toJSON());
                }
            }
            catch (e_48_1) { e_48 = { error: e_48_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_48) throw e_48.error; }
            }
        }
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        data["creationTime"] = this.creationTime ? this.creationTime.toISOString() : undefined;
        return data;
    };
    CreateCommunicationRequestDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new CreateCommunicationRequestDto();
        result.init(json);
        return result;
    };
    return CreateCommunicationRequestDto;
}());
export { CreateCommunicationRequestDto };
var DocumentLocation = /** @class */ (function () {
    function DocumentLocation(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DocumentLocation.prototype.init = function (_data) {
        if (_data) {
            this.documentName = _data["documentName"];
            this.documentDescription = _data["documentDescription"];
            this.contentType = _data["contentType"];
            this.documentTemplateId = _data["documentTemplateId"];
            this.storageLocation = _data["storageLocation"];
            this.blobLocation = _data["blobLocation"] ? AzureBlobLocation.fromJS(_data["blobLocation"]) : undefined;
            this.databaseLocation = _data["databaseLocation"] ? DatabaseLocation.fromJS(_data["databaseLocation"]) : undefined;
            this.sftpLocation = _data["sftpLocation"] ? SftpLocation.fromJS(_data["sftpLocation"]) : undefined;
            this.inMemoryLocation = _data["inMemoryLocation"] ? InMemoryDocumentLocation.fromJS(_data["inMemoryLocation"]) : undefined;
            this.fileShareLocation = _data["fileShareLocation"] ? AzureFileShareLocation.fromJS(_data["fileShareLocation"]) : undefined;
        }
    };
    DocumentLocation.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DocumentLocation();
        result.init(data);
        return result;
    };
    DocumentLocation.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["documentName"] = this.documentName;
        data["documentDescription"] = this.documentDescription;
        data["contentType"] = this.contentType;
        data["documentTemplateId"] = this.documentTemplateId;
        data["storageLocation"] = this.storageLocation;
        data["blobLocation"] = this.blobLocation ? this.blobLocation.toJSON() : undefined;
        data["databaseLocation"] = this.databaseLocation ? this.databaseLocation.toJSON() : undefined;
        data["sftpLocation"] = this.sftpLocation ? this.sftpLocation.toJSON() : undefined;
        data["inMemoryLocation"] = this.inMemoryLocation ? this.inMemoryLocation.toJSON() : undefined;
        data["fileShareLocation"] = this.fileShareLocation ? this.fileShareLocation.toJSON() : undefined;
        return data;
    };
    DocumentLocation.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DocumentLocation();
        result.init(json);
        return result;
    };
    return DocumentLocation;
}());
export { DocumentLocation };
var SamplicityReferencedEntity = /** @class */ (function () {
    function SamplicityReferencedEntity(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    SamplicityReferencedEntity.prototype.init = function (_data) {
        var e_49, _a;
        if (_data) {
            this.entityId = _data["entityId"];
            this.referencedEntityTypeClassificationId = _data["referencedEntityTypeClassificationId"];
            if (Array.isArray(_data["attributes"])) {
                this.attributes = [];
                try {
                    for (var _b = __values(_data["attributes"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.attributes.push(SamplicityReferencedEntityAttribute.fromJS(item));
                    }
                }
                catch (e_49_1) { e_49 = { error: e_49_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_49) throw e_49.error; }
                }
            }
        }
    };
    SamplicityReferencedEntity.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new SamplicityReferencedEntity();
        result.init(data);
        return result;
    };
    SamplicityReferencedEntity.prototype.toJSON = function (data) {
        var e_50, _a;
        data = typeof data === 'object' ? data : {};
        data["entityId"] = this.entityId;
        data["referencedEntityTypeClassificationId"] = this.referencedEntityTypeClassificationId;
        if (Array.isArray(this.attributes)) {
            data["attributes"] = [];
            try {
                for (var _b = __values(this.attributes), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["attributes"].push(item.toJSON());
                }
            }
            catch (e_50_1) { e_50 = { error: e_50_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_50) throw e_50.error; }
            }
        }
        return data;
    };
    SamplicityReferencedEntity.prototype.clone = function () {
        var json = this.toJSON();
        var result = new SamplicityReferencedEntity();
        result.init(json);
        return result;
    };
    return SamplicityReferencedEntity;
}());
export { SamplicityReferencedEntity };
var AzureBlobLocation = /** @class */ (function () {
    function AzureBlobLocation(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AzureBlobLocation.prototype.init = function (_data) {
        if (_data) {
            this.directory = _data["directory"];
            this.filePathAndExtension = _data["filePathAndExtension"];
            this.contentType = _data["contentType"];
        }
    };
    AzureBlobLocation.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AzureBlobLocation();
        result.init(data);
        return result;
    };
    AzureBlobLocation.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["directory"] = this.directory;
        data["filePathAndExtension"] = this.filePathAndExtension;
        data["contentType"] = this.contentType;
        return data;
    };
    AzureBlobLocation.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AzureBlobLocation();
        result.init(json);
        return result;
    };
    return AzureBlobLocation;
}());
export { AzureBlobLocation };
var DatabaseLocation = /** @class */ (function () {
    function DatabaseLocation(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DatabaseLocation.prototype.init = function (_data) {
        if (_data) {
            this.recordId = _data["recordId"];
            this.recordType = _data["recordType"];
            this.fieldName = _data["fieldName"];
        }
    };
    DatabaseLocation.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DatabaseLocation();
        result.init(data);
        return result;
    };
    DatabaseLocation.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["recordId"] = this.recordId;
        data["recordType"] = this.recordType;
        data["fieldName"] = this.fieldName;
        return data;
    };
    DatabaseLocation.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DatabaseLocation();
        result.init(json);
        return result;
    };
    return DatabaseLocation;
}());
export { DatabaseLocation };
var SftpLocation = /** @class */ (function () {
    function SftpLocation(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    SftpLocation.prototype.init = function (_data) {
        if (_data) {
            this.connection = _data["connection"] ? SftpConnection.fromJS(_data["connection"]) : undefined;
            this.directory = _data["directory"];
            this.filePathAndExtension = _data["filePathAndExtension"];
            this.contentType = _data["contentType"];
        }
    };
    SftpLocation.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new SftpLocation();
        result.init(data);
        return result;
    };
    SftpLocation.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["connection"] = this.connection ? this.connection.toJSON() : undefined;
        data["directory"] = this.directory;
        data["filePathAndExtension"] = this.filePathAndExtension;
        data["contentType"] = this.contentType;
        return data;
    };
    SftpLocation.prototype.clone = function () {
        var json = this.toJSON();
        var result = new SftpLocation();
        result.init(json);
        return result;
    };
    return SftpLocation;
}());
export { SftpLocation };
var InMemoryDocumentLocation = /** @class */ (function () {
    function InMemoryDocumentLocation(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    InMemoryDocumentLocation.prototype.init = function (_data) {
        if (_data) {
            this.documentContents = _data["documentContents"];
        }
    };
    InMemoryDocumentLocation.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new InMemoryDocumentLocation();
        result.init(data);
        return result;
    };
    InMemoryDocumentLocation.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["documentContents"] = this.documentContents;
        return data;
    };
    InMemoryDocumentLocation.prototype.clone = function () {
        var json = this.toJSON();
        var result = new InMemoryDocumentLocation();
        result.init(json);
        return result;
    };
    return InMemoryDocumentLocation;
}());
export { InMemoryDocumentLocation };
var AzureFileShareLocation = /** @class */ (function () {
    function AzureFileShareLocation(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AzureFileShareLocation.prototype.init = function (_data) {
        if (_data) {
            this.fileShareName = _data["fileShareName"];
            this.directory = _data["directory"];
            this.filePathAndExtension = _data["filePathAndExtension"];
            this.contentType = _data["contentType"];
        }
    };
    AzureFileShareLocation.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AzureFileShareLocation();
        result.init(data);
        return result;
    };
    AzureFileShareLocation.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["fileShareName"] = this.fileShareName;
        data["directory"] = this.directory;
        data["filePathAndExtension"] = this.filePathAndExtension;
        data["contentType"] = this.contentType;
        return data;
    };
    AzureFileShareLocation.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AzureFileShareLocation();
        result.init(json);
        return result;
    };
    return AzureFileShareLocation;
}());
export { AzureFileShareLocation };
var SamplicityReferencedEntityAttribute = /** @class */ (function () {
    function SamplicityReferencedEntityAttribute(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    SamplicityReferencedEntityAttribute.prototype.init = function (_data) {
        if (_data) {
            this.attributeTypeClassificationId = _data["attributeTypeClassificationId"];
            this.attributeValueText = _data["attributeValueText"];
        }
    };
    SamplicityReferencedEntityAttribute.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new SamplicityReferencedEntityAttribute();
        result.init(data);
        return result;
    };
    SamplicityReferencedEntityAttribute.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["attributeTypeClassificationId"] = this.attributeTypeClassificationId;
        data["attributeValueText"] = this.attributeValueText;
        return data;
    };
    SamplicityReferencedEntityAttribute.prototype.clone = function () {
        var json = this.toJSON();
        var result = new SamplicityReferencedEntityAttribute();
        result.init(json);
        return result;
    };
    return SamplicityReferencedEntityAttribute;
}());
export { SamplicityReferencedEntityAttribute };
var SftpConnection = /** @class */ (function () {
    function SftpConnection(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    SftpConnection.prototype.init = function (_data) {
        if (_data) {
            this.host = _data["host"];
            this.username = _data["username"];
            this.password = _data["password"];
        }
    };
    SftpConnection.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new SftpConnection();
        result.init(data);
        return result;
    };
    SftpConnection.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["host"] = this.host;
        data["username"] = this.username;
        data["password"] = this.password;
        return data;
    };
    SftpConnection.prototype.clone = function () {
        var json = this.toJSON();
        var result = new SftpConnection();
        result.init(json);
        return result;
    };
    return SftpConnection;
}());
export { SftpConnection };
var AjaxResponseOfCreateCommunicationResponseDto = /** @class */ (function () {
    function AjaxResponseOfCreateCommunicationResponseDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfCreateCommunicationResponseDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? CreateCommunicationResponseDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfCreateCommunicationResponseDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfCreateCommunicationResponseDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfCreateCommunicationResponseDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfCreateCommunicationResponseDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfCreateCommunicationResponseDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfCreateCommunicationResponseDto;
}());
export { AjaxResponseOfCreateCommunicationResponseDto };
var CreateCommunicationResponseDto = /** @class */ (function () {
    function CreateCommunicationResponseDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CreateCommunicationResponseDto.prototype.init = function (_data) {
        var e_51, _a;
        if (_data) {
            if (Array.isArray(_data["referencedEntities"])) {
                this.referencedEntities = [];
                try {
                    for (var _b = __values(_data["referencedEntities"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.referencedEntities.push(SamplicityReferencedEntity.fromJS(item));
                    }
                }
                catch (e_51_1) { e_51 = { error: e_51_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_51) throw e_51.error; }
                }
            }
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
            this.creationTime = _data["creationTime"] ? new Date(_data["creationTime"].toString()) : undefined;
            this.success = _data["success"];
            this.errorMessage = _data["errorMessage"];
        }
    };
    CreateCommunicationResponseDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CreateCommunicationResponseDto();
        result.init(data);
        return result;
    };
    CreateCommunicationResponseDto.prototype.toJSON = function (data) {
        var e_52, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.referencedEntities)) {
            data["referencedEntities"] = [];
            try {
                for (var _b = __values(this.referencedEntities), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["referencedEntities"].push(item.toJSON());
                }
            }
            catch (e_52_1) { e_52 = { error: e_52_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_52) throw e_52.error; }
            }
        }
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        data["creationTime"] = this.creationTime ? this.creationTime.toISOString() : undefined;
        data["success"] = this.success;
        data["errorMessage"] = this.errorMessage;
        return data;
    };
    CreateCommunicationResponseDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new CreateCommunicationResponseDto();
        result.init(json);
        return result;
    };
    return CreateCommunicationResponseDto;
}());
export { CreateCommunicationResponseDto };
var CommunicationResendDto = /** @class */ (function () {
    function CommunicationResendDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CommunicationResendDto.prototype.init = function (_data) {
        var e_53, _a, e_54, _b;
        if (_data) {
            this.id = _data["id"];
            this.parentId = _data["parentId"];
            this.activityType = _data["activityType"];
            this.communicationMethodId = _data["communicationMethodId"];
            if (Array.isArray(_data["toEmails"])) {
                this.toEmails = [];
                try {
                    for (var _c = __values(_data["toEmails"]), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        this.toEmails.push(item);
                    }
                }
                catch (e_53_1) { e_53 = { error: e_53_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_53) throw e_53.error; }
                }
            }
            this.faxNumber = _data["faxNumber"];
            this.comment = _data["comment"];
            this.subject = _data["subject"];
            this.childCommunicationInternalNbr = _data["childCommunicationInternalNbr"];
            if (Array.isArray(_data["names"])) {
                this.names = [];
                try {
                    for (var _e = __values(_data["names"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.names.push(LocalizedValue.fromJS(item));
                    }
                }
                catch (e_54_1) { e_54 = { error: e_54_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_54) throw e_54.error; }
                }
            }
        }
    };
    CommunicationResendDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CommunicationResendDto();
        result.init(data);
        return result;
    };
    CommunicationResendDto.prototype.toJSON = function (data) {
        var e_55, _a, e_56, _b;
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["parentId"] = this.parentId;
        data["activityType"] = this.activityType;
        data["communicationMethodId"] = this.communicationMethodId;
        if (Array.isArray(this.toEmails)) {
            data["toEmails"] = [];
            try {
                for (var _c = __values(this.toEmails), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var item = _d.value;
                    data["toEmails"].push(item);
                }
            }
            catch (e_55_1) { e_55 = { error: e_55_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_55) throw e_55.error; }
            }
        }
        data["faxNumber"] = this.faxNumber;
        data["comment"] = this.comment;
        data["subject"] = this.subject;
        data["childCommunicationInternalNbr"] = this.childCommunicationInternalNbr;
        if (Array.isArray(this.names)) {
            data["names"] = [];
            try {
                for (var _e = __values(this.names), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["names"].push(item.toJSON());
                }
            }
            catch (e_56_1) { e_56 = { error: e_56_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_56) throw e_56.error; }
            }
        }
        return data;
    };
    CommunicationResendDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new CommunicationResendDto();
        result.init(json);
        return result;
    };
    return CommunicationResendDto;
}());
export { CommunicationResendDto };
var AjaxResponseOfListOfDocumentTemplateDto = /** @class */ (function () {
    function AjaxResponseOfListOfDocumentTemplateDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfListOfDocumentTemplateDto.prototype.init = function (_data) {
        var e_57, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(DocumentTemplateDto.fromJS(item));
                    }
                }
                catch (e_57_1) { e_57 = { error: e_57_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_57) throw e_57.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfListOfDocumentTemplateDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfListOfDocumentTemplateDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfListOfDocumentTemplateDto.prototype.toJSON = function (data) {
        var e_58, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_58_1) { e_58 = { error: e_58_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_58) throw e_58.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfListOfDocumentTemplateDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfListOfDocumentTemplateDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfListOfDocumentTemplateDto;
}());
export { AjaxResponseOfListOfDocumentTemplateDto };
var DocumentTemplateDto = /** @class */ (function () {
    function DocumentTemplateDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DocumentTemplateDto.prototype.init = function (_data) {
        if (_data) {
            this.documentTemplateId = _data["documentTemplateId"];
            this.templateTypeClassificationValueId = _data["templateTypeClassificationValueId"];
            this.currentStatusClassificationValueId = _data["currentStatusClassificationValueId"];
            this.standardFlag = _data["standardFlag"];
            this.templateName = _data["templateName"];
            this.templateDescription = _data["templateDescription"];
        }
    };
    DocumentTemplateDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DocumentTemplateDto();
        result.init(data);
        return result;
    };
    DocumentTemplateDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["documentTemplateId"] = this.documentTemplateId;
        data["templateTypeClassificationValueId"] = this.templateTypeClassificationValueId;
        data["currentStatusClassificationValueId"] = this.currentStatusClassificationValueId;
        data["standardFlag"] = this.standardFlag;
        data["templateName"] = this.templateName;
        data["templateDescription"] = this.templateDescription;
        return data;
    };
    DocumentTemplateDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DocumentTemplateDto();
        result.init(json);
        return result;
    };
    return DocumentTemplateDto;
}());
export { DocumentTemplateDto };
var AjaxResponseOfEntityDto = /** @class */ (function () {
    function AjaxResponseOfEntityDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfEntityDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? EntityDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfEntityDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfEntityDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfEntityDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfEntityDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfEntityDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfEntityDto;
}());
export { AjaxResponseOfEntityDto };
var EntityDto = /** @class */ (function () {
    function EntityDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    EntityDto.prototype.init = function (_data) {
        if (_data) {
            this.entityId = _data["entityId"];
            this.entityTypeClassificationValueId = _data["entityTypeClassificationValueId"];
        }
    };
    EntityDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new EntityDto();
        result.init(data);
        return result;
    };
    EntityDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["entityId"] = this.entityId;
        data["entityTypeClassificationValueId"] = this.entityTypeClassificationValueId;
        return data;
    };
    EntityDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new EntityDto();
        result.init(json);
        return result;
    };
    return EntityDto;
}());
export { EntityDto };
var AjaxResponseOfBoolean = /** @class */ (function () {
    function AjaxResponseOfBoolean(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfBoolean.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"];
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfBoolean.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfBoolean();
        result.init(data);
        return result;
    };
    AjaxResponseOfBoolean.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfBoolean.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfBoolean();
        result.init(json);
        return result;
    };
    return AjaxResponseOfBoolean;
}());
export { AjaxResponseOfBoolean };
var AjaxResponseOfString = /** @class */ (function () {
    function AjaxResponseOfString(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfString.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"];
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfString.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfString();
        result.init(data);
        return result;
    };
    AjaxResponseOfString.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfString.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfString();
        result.init(json);
        return result;
    };
    return AjaxResponseOfString;
}());
export { AjaxResponseOfString };
var AjaxResponseOfListOfDocumentDto = /** @class */ (function () {
    function AjaxResponseOfListOfDocumentDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfListOfDocumentDto.prototype.init = function (_data) {
        var e_59, _a;
        if (_data) {
            if (Array.isArray(_data["result"])) {
                this.result = [];
                try {
                    for (var _b = __values(_data["result"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.result.push(DocumentDto.fromJS(item));
                    }
                }
                catch (e_59_1) { e_59 = { error: e_59_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_59) throw e_59.error; }
                }
            }
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfListOfDocumentDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfListOfDocumentDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfListOfDocumentDto.prototype.toJSON = function (data) {
        var e_60, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.result)) {
            data["result"] = [];
            try {
                for (var _b = __values(this.result), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["result"].push(item.toJSON());
                }
            }
            catch (e_60_1) { e_60 = { error: e_60_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_60) throw e_60.error; }
            }
        }
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfListOfDocumentDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfListOfDocumentDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfListOfDocumentDto;
}());
export { AjaxResponseOfListOfDocumentDto };
var DocumentDto = /** @class */ (function () {
    function DocumentDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DocumentDto.prototype.init = function (_data) {
        if (_data) {
            this.currentStatusClassificationValueId = _data["currentStatusClassificationValueId"];
            this.documentTypeClassificationValueId = _data["documentTypeClassificationValueId"];
            this.documentTemplateId = _data["documentTemplateId"];
            this.formId = _data["formId"];
            this.documentName = _data["documentName"];
            this.documentPathText = _data["documentPathText"];
            this.documentFileName = _data["documentFileName"];
            this.commentsText = _data["commentsText"];
            this.documentDesc = _data["documentDesc"];
            this.documentCreationTime = _data["documentCreationTime"] ? new Date(_data["documentCreationTime"].toString()) : undefined;
        }
    };
    DocumentDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DocumentDto();
        result.init(data);
        return result;
    };
    DocumentDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["currentStatusClassificationValueId"] = this.currentStatusClassificationValueId;
        data["documentTypeClassificationValueId"] = this.documentTypeClassificationValueId;
        data["documentTemplateId"] = this.documentTemplateId;
        data["formId"] = this.formId;
        data["documentName"] = this.documentName;
        data["documentPathText"] = this.documentPathText;
        data["documentFileName"] = this.documentFileName;
        data["commentsText"] = this.commentsText;
        data["documentDesc"] = this.documentDesc;
        data["documentCreationTime"] = this.documentCreationTime ? this.documentCreationTime.toISOString() : undefined;
        return data;
    };
    DocumentDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DocumentDto();
        result.init(json);
        return result;
    };
    return DocumentDto;
}());
export { DocumentDto };
var AjaxResponseOfNullableOfDateTime = /** @class */ (function () {
    function AjaxResponseOfNullableOfDateTime(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfNullableOfDateTime.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? new Date(_data["result"].toString()) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfNullableOfDateTime.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfNullableOfDateTime();
        result.init(data);
        return result;
    };
    AjaxResponseOfNullableOfDateTime.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toISOString() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfNullableOfDateTime.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfNullableOfDateTime();
        result.init(json);
        return result;
    };
    return AjaxResponseOfNullableOfDateTime;
}());
export { AjaxResponseOfNullableOfDateTime };
var AjaxResponseOfSimpleCommunicationDto = /** @class */ (function () {
    function AjaxResponseOfSimpleCommunicationDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfSimpleCommunicationDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? SimpleCommunicationDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfSimpleCommunicationDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfSimpleCommunicationDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfSimpleCommunicationDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfSimpleCommunicationDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfSimpleCommunicationDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfSimpleCommunicationDto;
}());
export { AjaxResponseOfSimpleCommunicationDto };
var SimpleCommunicationDto = /** @class */ (function () {
    function SimpleCommunicationDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    SimpleCommunicationDto.prototype.init = function (_data) {
        if (_data) {
            this.orderId = _data["orderId"];
            this.communicationId = _data["communicationId"];
            this.communicationTypeId = _data["communicationTypeId"];
            this.communicationStatusId = _data["communicationStatusId"];
            this.communicationDate = _data["communicationDate"] ? new Date(_data["communicationDate"].toString()) : undefined;
            this.documentId = _data["documentId"];
            this.id = _data["id"];
        }
    };
    SimpleCommunicationDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new SimpleCommunicationDto();
        result.init(data);
        return result;
    };
    SimpleCommunicationDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["orderId"] = this.orderId;
        data["communicationId"] = this.communicationId;
        data["communicationTypeId"] = this.communicationTypeId;
        data["communicationStatusId"] = this.communicationStatusId;
        data["communicationDate"] = this.communicationDate ? this.communicationDate.toISOString() : undefined;
        data["documentId"] = this.documentId;
        data["id"] = this.id;
        return data;
    };
    SimpleCommunicationDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new SimpleCommunicationDto();
        result.init(json);
        return result;
    };
    return SimpleCommunicationDto;
}());
export { SimpleCommunicationDto };
var DocumentGenerationRequest = /** @class */ (function () {
    function DocumentGenerationRequest(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DocumentGenerationRequest.prototype.init = function (_data) {
        var e_61, _a;
        if (_data) {
            this.options = _data["options"] ? DocumentGenerationOptions.fromJS(_data["options"]) : undefined;
            this.documentBody = _data["documentBody"] ? DocumentFragment.fromJS(_data["documentBody"]) : undefined;
            this.documentHeader = _data["documentHeader"] ? DocumentFragment.fromJS(_data["documentHeader"]) : undefined;
            this.documentFooter = _data["documentFooter"] ? DocumentFragment.fromJS(_data["documentFooter"]) : undefined;
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
            if (Array.isArray(_data["referencedEntities"])) {
                this.referencedEntities = [];
                try {
                    for (var _b = __values(_data["referencedEntities"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.referencedEntities.push(SamplicityReferencedEntity.fromJS(item));
                    }
                }
                catch (e_61_1) { e_61 = { error: e_61_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_61) throw e_61.error; }
                }
            }
        }
    };
    DocumentGenerationRequest.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DocumentGenerationRequest();
        result.init(data);
        return result;
    };
    DocumentGenerationRequest.prototype.toJSON = function (data) {
        var e_62, _a;
        data = typeof data === 'object' ? data : {};
        data["options"] = this.options ? this.options.toJSON() : undefined;
        data["documentBody"] = this.documentBody ? this.documentBody.toJSON() : undefined;
        data["documentHeader"] = this.documentHeader ? this.documentHeader.toJSON() : undefined;
        data["documentFooter"] = this.documentFooter ? this.documentFooter.toJSON() : undefined;
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        if (Array.isArray(this.referencedEntities)) {
            data["referencedEntities"] = [];
            try {
                for (var _b = __values(this.referencedEntities), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["referencedEntities"].push(item.toJSON());
                }
            }
            catch (e_62_1) { e_62 = { error: e_62_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_62) throw e_62.error; }
            }
        }
        return data;
    };
    DocumentGenerationRequest.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DocumentGenerationRequest();
        result.init(json);
        return result;
    };
    return DocumentGenerationRequest;
}());
export { DocumentGenerationRequest };
var DocumentGenerationOptions = /** @class */ (function () {
    function DocumentGenerationOptions(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DocumentGenerationOptions.prototype.init = function (_data) {
        if (_data) {
            this.format = _data["format"];
            this.fileName = _data["fileName"];
            this.filePath = _data["filePath"];
            this.fileNameHasTimestampFlag = _data["fileNameHasTimestampFlag"];
            this.persistence = _data["persistence"];
            this.documentRecordOptions = _data["documentRecordOptions"];
            this.documentRecordTypeId = _data["documentRecordTypeId"];
            this.singlePage = _data["singlePage"];
            this.appendPage = _data["appendPage"];
            this.appendPageLocation = _data["appendPageLocation"];
            this.communicationRecordOptions = _data["communicationRecordOptions"];
            this.communicationRecordTypeId = _data["communicationRecordTypeId"];
            this.throwGenerationError = _data["throwGenerationError"];
            this.throwGenerationErrorReason = _data["throwGenerationErrorReason"];
        }
    };
    DocumentGenerationOptions.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DocumentGenerationOptions();
        result.init(data);
        return result;
    };
    DocumentGenerationOptions.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["format"] = this.format;
        data["fileName"] = this.fileName;
        data["filePath"] = this.filePath;
        data["fileNameHasTimestampFlag"] = this.fileNameHasTimestampFlag;
        data["persistence"] = this.persistence;
        data["documentRecordOptions"] = this.documentRecordOptions;
        data["documentRecordTypeId"] = this.documentRecordTypeId;
        data["singlePage"] = this.singlePage;
        data["appendPage"] = this.appendPage;
        data["appendPageLocation"] = this.appendPageLocation;
        data["communicationRecordOptions"] = this.communicationRecordOptions;
        data["communicationRecordTypeId"] = this.communicationRecordTypeId;
        data["throwGenerationError"] = this.throwGenerationError;
        data["throwGenerationErrorReason"] = this.throwGenerationErrorReason;
        return data;
    };
    DocumentGenerationOptions.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DocumentGenerationOptions();
        result.init(json);
        return result;
    };
    return DocumentGenerationOptions;
}());
export { DocumentGenerationOptions };
var DocumentFragment = /** @class */ (function () {
    function DocumentFragment(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DocumentFragment.prototype.init = function (_data) {
        if (_data) {
            this.outputFormat = _data["outputFormat"];
            this.templateEngine = _data["templateEngine"];
            this.templateLocation = _data["templateLocation"] ? DocumentLocation.fromJS(_data["templateLocation"]) : undefined;
            this.model = _data["model"];
        }
    };
    DocumentFragment.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DocumentFragment();
        result.init(data);
        return result;
    };
    DocumentFragment.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["outputFormat"] = this.outputFormat;
        data["templateEngine"] = this.templateEngine;
        data["templateLocation"] = this.templateLocation ? this.templateLocation.toJSON() : undefined;
        data["model"] = this.model;
        return data;
    };
    DocumentFragment.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DocumentFragment();
        result.init(json);
        return result;
    };
    return DocumentFragment;
}());
export { DocumentFragment };
var AjaxResponseOfDocumentGenerationResponse = /** @class */ (function () {
    function AjaxResponseOfDocumentGenerationResponse(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfDocumentGenerationResponse.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? DocumentGenerationResponse.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfDocumentGenerationResponse.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfDocumentGenerationResponse();
        result.init(data);
        return result;
    };
    AjaxResponseOfDocumentGenerationResponse.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfDocumentGenerationResponse.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfDocumentGenerationResponse();
        result.init(json);
        return result;
    };
    return AjaxResponseOfDocumentGenerationResponse;
}());
export { AjaxResponseOfDocumentGenerationResponse };
var DocumentGenerationResponse = /** @class */ (function () {
    function DocumentGenerationResponse(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DocumentGenerationResponse.prototype.init = function (_data) {
        if (_data) {
            this.generatedDocumentLocation = _data["generatedDocumentLocation"] ? DocumentLocation.fromJS(_data["generatedDocumentLocation"]) : undefined;
            this.documentId = _data["documentId"];
            this.documentTemplateId = _data["documentTemplateId"];
            this.sequenceNumber = _data["sequenceNumber"];
            this.formId = _data["formId"];
            this.communicationId = _data["communicationId"];
            this.success = _data["success"];
            this.errorMessage = _data["errorMessage"];
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
        }
    };
    DocumentGenerationResponse.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DocumentGenerationResponse();
        result.init(data);
        return result;
    };
    DocumentGenerationResponse.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["generatedDocumentLocation"] = this.generatedDocumentLocation ? this.generatedDocumentLocation.toJSON() : undefined;
        data["documentId"] = this.documentId;
        data["documentTemplateId"] = this.documentTemplateId;
        data["sequenceNumber"] = this.sequenceNumber;
        data["formId"] = this.formId;
        data["communicationId"] = this.communicationId;
        data["success"] = this.success;
        data["errorMessage"] = this.errorMessage;
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        return data;
    };
    DocumentGenerationResponse.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DocumentGenerationResponse();
        result.init(json);
        return result;
    };
    return DocumentGenerationResponse;
}());
export { DocumentGenerationResponse };
var DocumentBatchGenerationRequest = /** @class */ (function () {
    function DocumentBatchGenerationRequest(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DocumentBatchGenerationRequest.prototype.init = function (_data) {
        var e_63, _a;
        if (_data) {
            if (Array.isArray(_data["requests"])) {
                this.requests = [];
                try {
                    for (var _b = __values(_data["requests"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.requests.push(DocumentGenerationRequest.fromJS(item));
                    }
                }
                catch (e_63_1) { e_63 = { error: e_63_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_63) throw e_63.error; }
                }
            }
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
        }
    };
    DocumentBatchGenerationRequest.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DocumentBatchGenerationRequest();
        result.init(data);
        return result;
    };
    DocumentBatchGenerationRequest.prototype.toJSON = function (data) {
        var e_64, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.requests)) {
            data["requests"] = [];
            try {
                for (var _b = __values(this.requests), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["requests"].push(item.toJSON());
                }
            }
            catch (e_64_1) { e_64 = { error: e_64_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_64) throw e_64.error; }
            }
        }
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        return data;
    };
    DocumentBatchGenerationRequest.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DocumentBatchGenerationRequest();
        result.init(json);
        return result;
    };
    return DocumentBatchGenerationRequest;
}());
export { DocumentBatchGenerationRequest };
var AjaxResponseOfDocumentBatchGenerationResponse = /** @class */ (function () {
    function AjaxResponseOfDocumentBatchGenerationResponse(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfDocumentBatchGenerationResponse.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? DocumentBatchGenerationResponse.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfDocumentBatchGenerationResponse.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfDocumentBatchGenerationResponse();
        result.init(data);
        return result;
    };
    AjaxResponseOfDocumentBatchGenerationResponse.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfDocumentBatchGenerationResponse.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfDocumentBatchGenerationResponse();
        result.init(json);
        return result;
    };
    return AjaxResponseOfDocumentBatchGenerationResponse;
}());
export { AjaxResponseOfDocumentBatchGenerationResponse };
var DocumentBatchGenerationResponse = /** @class */ (function () {
    function DocumentBatchGenerationResponse(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    DocumentBatchGenerationResponse.prototype.init = function (_data) {
        var e_65, _a;
        if (_data) {
            if (Array.isArray(_data["responses"])) {
                this.responses = [];
                try {
                    for (var _b = __values(_data["responses"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.responses.push(DocumentGenerationResponse.fromJS(item));
                    }
                }
                catch (e_65_1) { e_65 = { error: e_65_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_65) throw e_65.error; }
                }
            }
            this.success = _data["success"];
            this.errorMessage = _data["errorMessage"];
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
        }
    };
    DocumentBatchGenerationResponse.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new DocumentBatchGenerationResponse();
        result.init(data);
        return result;
    };
    DocumentBatchGenerationResponse.prototype.toJSON = function (data) {
        var e_66, _a;
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.responses)) {
            data["responses"] = [];
            try {
                for (var _b = __values(this.responses), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["responses"].push(item.toJSON());
                }
            }
            catch (e_66_1) { e_66 = { error: e_66_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_66) throw e_66.error; }
            }
        }
        data["success"] = this.success;
        data["errorMessage"] = this.errorMessage;
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        return data;
    };
    DocumentBatchGenerationResponse.prototype.clone = function () {
        var json = this.toJSON();
        var result = new DocumentBatchGenerationResponse();
        result.init(json);
        return result;
    };
    return DocumentBatchGenerationResponse;
}());
export { DocumentBatchGenerationResponse };
var EmailRequest = /** @class */ (function () {
    function EmailRequest(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    EmailRequest.prototype.init = function (_data) {
        var e_67, _a, e_68, _b, e_69, _c, e_70, _d;
        if (_data) {
            this.options = _data["options"] ? OutboundCommunicationOptions.fromJS(_data["options"]) : undefined;
            if (Array.isArray(_data["emailToAddresses"])) {
                this.emailToAddresses = [];
                try {
                    for (var _e = __values(_data["emailToAddresses"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.emailToAddresses.push(item);
                    }
                }
                catch (e_67_1) { e_67 = { error: e_67_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                    }
                    finally { if (e_67) throw e_67.error; }
                }
            }
            if (Array.isArray(_data["emailCcAddresses"])) {
                this.emailCcAddresses = [];
                try {
                    for (var _g = __values(_data["emailCcAddresses"]), _h = _g.next(); !_h.done; _h = _g.next()) {
                        var item = _h.value;
                        this.emailCcAddresses.push(item);
                    }
                }
                catch (e_68_1) { e_68 = { error: e_68_1 }; }
                finally {
                    try {
                        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                    }
                    finally { if (e_68) throw e_68.error; }
                }
            }
            if (Array.isArray(_data["emailBccAddresses"])) {
                this.emailBccAddresses = [];
                try {
                    for (var _j = __values(_data["emailBccAddresses"]), _k = _j.next(); !_k.done; _k = _j.next()) {
                        var item = _k.value;
                        this.emailBccAddresses.push(item);
                    }
                }
                catch (e_69_1) { e_69 = { error: e_69_1 }; }
                finally {
                    try {
                        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                    }
                    finally { if (e_69) throw e_69.error; }
                }
            }
            this.subject = _data["subject"];
            this.emailContent = _data["emailContent"] ? DocumentLocation.fromJS(_data["emailContent"]) : undefined;
            if (Array.isArray(_data["attachments"])) {
                this.attachments = [];
                try {
                    for (var _l = __values(_data["attachments"]), _m = _l.next(); !_m.done; _m = _l.next()) {
                        var item = _m.value;
                        this.attachments.push(DocumentLocation.fromJS(item));
                    }
                }
                catch (e_70_1) { e_70 = { error: e_70_1 }; }
                finally {
                    try {
                        if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                    }
                    finally { if (e_70) throw e_70.error; }
                }
            }
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
        }
    };
    EmailRequest.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new EmailRequest();
        result.init(data);
        return result;
    };
    EmailRequest.prototype.toJSON = function (data) {
        var e_71, _a, e_72, _b, e_73, _c, e_74, _d;
        data = typeof data === 'object' ? data : {};
        data["options"] = this.options ? this.options.toJSON() : undefined;
        if (Array.isArray(this.emailToAddresses)) {
            data["emailToAddresses"] = [];
            try {
                for (var _e = __values(this.emailToAddresses), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["emailToAddresses"].push(item);
                }
            }
            catch (e_71_1) { e_71 = { error: e_71_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_71) throw e_71.error; }
            }
        }
        if (Array.isArray(this.emailCcAddresses)) {
            data["emailCcAddresses"] = [];
            try {
                for (var _g = __values(this.emailCcAddresses), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var item = _h.value;
                    data["emailCcAddresses"].push(item);
                }
            }
            catch (e_72_1) { e_72 = { error: e_72_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_72) throw e_72.error; }
            }
        }
        if (Array.isArray(this.emailBccAddresses)) {
            data["emailBccAddresses"] = [];
            try {
                for (var _j = __values(this.emailBccAddresses), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var item = _k.value;
                    data["emailBccAddresses"].push(item);
                }
            }
            catch (e_73_1) { e_73 = { error: e_73_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_73) throw e_73.error; }
            }
        }
        data["subject"] = this.subject;
        data["emailContent"] = this.emailContent ? this.emailContent.toJSON() : undefined;
        if (Array.isArray(this.attachments)) {
            data["attachments"] = [];
            try {
                for (var _l = __values(this.attachments), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var item = _m.value;
                    data["attachments"].push(item.toJSON());
                }
            }
            catch (e_74_1) { e_74 = { error: e_74_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                }
                finally { if (e_74) throw e_74.error; }
            }
        }
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        return data;
    };
    EmailRequest.prototype.clone = function () {
        var json = this.toJSON();
        var result = new EmailRequest();
        result.init(json);
        return result;
    };
    return EmailRequest;
}());
export { EmailRequest };
var OutboundCommunicationOptions = /** @class */ (function () {
    function OutboundCommunicationOptions(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    OutboundCommunicationOptions.prototype.init = function (_data) {
        var e_75, _a;
        if (_data) {
            this.communicationRecordOptions = _data["communicationRecordOptions"];
            if (Array.isArray(_data["communicationIds"])) {
                this.communicationIds = [];
                try {
                    for (var _b = __values(_data["communicationIds"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.communicationIds.push(item);
                    }
                }
                catch (e_75_1) { e_75 = { error: e_75_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_75) throw e_75.error; }
                }
            }
        }
    };
    OutboundCommunicationOptions.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new OutboundCommunicationOptions();
        result.init(data);
        return result;
    };
    OutboundCommunicationOptions.prototype.toJSON = function (data) {
        var e_76, _a;
        data = typeof data === 'object' ? data : {};
        data["communicationRecordOptions"] = this.communicationRecordOptions;
        if (Array.isArray(this.communicationIds)) {
            data["communicationIds"] = [];
            try {
                for (var _b = __values(this.communicationIds), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["communicationIds"].push(item);
                }
            }
            catch (e_76_1) { e_76 = { error: e_76_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_76) throw e_76.error; }
            }
        }
        return data;
    };
    OutboundCommunicationOptions.prototype.clone = function () {
        var json = this.toJSON();
        var result = new OutboundCommunicationOptions();
        result.init(json);
        return result;
    };
    return OutboundCommunicationOptions;
}());
export { OutboundCommunicationOptions };
var AjaxResponseOfEmailResponse = /** @class */ (function () {
    function AjaxResponseOfEmailResponse(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfEmailResponse.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? EmailResponse.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfEmailResponse.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfEmailResponse();
        result.init(data);
        return result;
    };
    AjaxResponseOfEmailResponse.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfEmailResponse.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfEmailResponse();
        result.init(json);
        return result;
    };
    return AjaxResponseOfEmailResponse;
}());
export { AjaxResponseOfEmailResponse };
var EmailResponse = /** @class */ (function () {
    function EmailResponse(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    EmailResponse.prototype.init = function (_data) {
        var e_77, _a, e_78, _b, e_79, _c, e_80, _d;
        if (_data) {
            this.emailTrackingId = _data["emailTrackingId"];
            if (Array.isArray(_data["emailToAddresses"])) {
                this.emailToAddresses = [];
                try {
                    for (var _e = __values(_data["emailToAddresses"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.emailToAddresses.push(item);
                    }
                }
                catch (e_77_1) { e_77 = { error: e_77_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                    }
                    finally { if (e_77) throw e_77.error; }
                }
            }
            if (Array.isArray(_data["emailBccAddresses"])) {
                this.emailBccAddresses = [];
                try {
                    for (var _g = __values(_data["emailBccAddresses"]), _h = _g.next(); !_h.done; _h = _g.next()) {
                        var item = _h.value;
                        this.emailBccAddresses.push(item);
                    }
                }
                catch (e_78_1) { e_78 = { error: e_78_1 }; }
                finally {
                    try {
                        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                    }
                    finally { if (e_78) throw e_78.error; }
                }
            }
            if (Array.isArray(_data["emailCcAddresses"])) {
                this.emailCcAddresses = [];
                try {
                    for (var _j = __values(_data["emailCcAddresses"]), _k = _j.next(); !_k.done; _k = _j.next()) {
                        var item = _k.value;
                        this.emailCcAddresses.push(item);
                    }
                }
                catch (e_79_1) { e_79 = { error: e_79_1 }; }
                finally {
                    try {
                        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                    }
                    finally { if (e_79) throw e_79.error; }
                }
            }
            this.success = _data["success"];
            this.errorMessage = _data["errorMessage"];
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
            if (Array.isArray(_data["communicationIds"])) {
                this.communicationIds = [];
                try {
                    for (var _l = __values(_data["communicationIds"]), _m = _l.next(); !_m.done; _m = _l.next()) {
                        var item = _m.value;
                        this.communicationIds.push(item);
                    }
                }
                catch (e_80_1) { e_80 = { error: e_80_1 }; }
                finally {
                    try {
                        if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                    }
                    finally { if (e_80) throw e_80.error; }
                }
            }
        }
    };
    EmailResponse.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new EmailResponse();
        result.init(data);
        return result;
    };
    EmailResponse.prototype.toJSON = function (data) {
        var e_81, _a, e_82, _b, e_83, _c, e_84, _d;
        data = typeof data === 'object' ? data : {};
        data["emailTrackingId"] = this.emailTrackingId;
        if (Array.isArray(this.emailToAddresses)) {
            data["emailToAddresses"] = [];
            try {
                for (var _e = __values(this.emailToAddresses), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["emailToAddresses"].push(item);
                }
            }
            catch (e_81_1) { e_81 = { error: e_81_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_81) throw e_81.error; }
            }
        }
        if (Array.isArray(this.emailBccAddresses)) {
            data["emailBccAddresses"] = [];
            try {
                for (var _g = __values(this.emailBccAddresses), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var item = _h.value;
                    data["emailBccAddresses"].push(item);
                }
            }
            catch (e_82_1) { e_82 = { error: e_82_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_82) throw e_82.error; }
            }
        }
        if (Array.isArray(this.emailCcAddresses)) {
            data["emailCcAddresses"] = [];
            try {
                for (var _j = __values(this.emailCcAddresses), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var item = _k.value;
                    data["emailCcAddresses"].push(item);
                }
            }
            catch (e_83_1) { e_83 = { error: e_83_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_83) throw e_83.error; }
            }
        }
        data["success"] = this.success;
        data["errorMessage"] = this.errorMessage;
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        if (Array.isArray(this.communicationIds)) {
            data["communicationIds"] = [];
            try {
                for (var _l = __values(this.communicationIds), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var item = _m.value;
                    data["communicationIds"].push(item);
                }
            }
            catch (e_84_1) { e_84 = { error: e_84_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                }
                finally { if (e_84) throw e_84.error; }
            }
        }
        return data;
    };
    EmailResponse.prototype.clone = function () {
        var json = this.toJSON();
        var result = new EmailResponse();
        result.init(json);
        return result;
    };
    return EmailResponse;
}());
export { EmailResponse };
var FaxRequest = /** @class */ (function () {
    function FaxRequest(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    FaxRequest.prototype.init = function (_data) {
        if (_data) {
            this.options = _data["options"] ? OutboundCommunicationOptions.fromJS(_data["options"]) : undefined;
            this.phoneNumber = _data["phoneNumber"];
            this.attachment = _data["attachment"] ? DocumentLocation.fromJS(_data["attachment"]) : undefined;
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
        }
    };
    FaxRequest.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new FaxRequest();
        result.init(data);
        return result;
    };
    FaxRequest.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["options"] = this.options ? this.options.toJSON() : undefined;
        data["phoneNumber"] = this.phoneNumber;
        data["attachment"] = this.attachment ? this.attachment.toJSON() : undefined;
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        return data;
    };
    FaxRequest.prototype.clone = function () {
        var json = this.toJSON();
        var result = new FaxRequest();
        result.init(json);
        return result;
    };
    return FaxRequest;
}());
export { FaxRequest };
var AjaxResponseOfFaxResponse = /** @class */ (function () {
    function AjaxResponseOfFaxResponse(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfFaxResponse.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? FaxResponse.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfFaxResponse.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfFaxResponse();
        result.init(data);
        return result;
    };
    AjaxResponseOfFaxResponse.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfFaxResponse.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfFaxResponse();
        result.init(json);
        return result;
    };
    return AjaxResponseOfFaxResponse;
}());
export { AjaxResponseOfFaxResponse };
var FaxResponse = /** @class */ (function () {
    function FaxResponse(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    FaxResponse.prototype.init = function (_data) {
        var e_85, _a;
        if (_data) {
            this.success = _data["success"];
            this.errorMessage = _data["errorMessage"];
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
            if (Array.isArray(_data["communicationIds"])) {
                this.communicationIds = [];
                try {
                    for (var _b = __values(_data["communicationIds"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.communicationIds.push(item);
                    }
                }
                catch (e_85_1) { e_85 = { error: e_85_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_85) throw e_85.error; }
                }
            }
        }
    };
    FaxResponse.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new FaxResponse();
        result.init(data);
        return result;
    };
    FaxResponse.prototype.toJSON = function (data) {
        var e_86, _a;
        data = typeof data === 'object' ? data : {};
        data["success"] = this.success;
        data["errorMessage"] = this.errorMessage;
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        if (Array.isArray(this.communicationIds)) {
            data["communicationIds"] = [];
            try {
                for (var _b = __values(this.communicationIds), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["communicationIds"].push(item);
                }
            }
            catch (e_86_1) { e_86 = { error: e_86_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_86) throw e_86.error; }
            }
        }
        return data;
    };
    FaxResponse.prototype.clone = function () {
        var json = this.toJSON();
        var result = new FaxResponse();
        result.init(json);
        return result;
    };
    return FaxResponse;
}());
export { FaxResponse };
var EmailTemplateDto = /** @class */ (function () {
    function EmailTemplateDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    EmailTemplateDto.prototype.init = function (_data) {
        var e_87, _a, e_88, _b, e_89, _c, e_90, _d;
        if (_data) {
            this.emailTemplateTypeId = _data["emailTemplateTypeId"];
            this.subject = _data["subject"];
            this.body = _data["body"] ? DocumentLocation.fromJS(_data["body"]) : undefined;
            this.fromEmail = _data["fromEmail"];
            if (Array.isArray(_data["toEmail"])) {
                this.toEmail = [];
                try {
                    for (var _e = __values(_data["toEmail"]), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        this.toEmail.push(item);
                    }
                }
                catch (e_87_1) { e_87 = { error: e_87_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                    }
                    finally { if (e_87) throw e_87.error; }
                }
            }
            if (Array.isArray(_data["ccEmail"])) {
                this.ccEmail = [];
                try {
                    for (var _g = __values(_data["ccEmail"]), _h = _g.next(); !_h.done; _h = _g.next()) {
                        var item = _h.value;
                        this.ccEmail.push(item);
                    }
                }
                catch (e_88_1) { e_88 = { error: e_88_1 }; }
                finally {
                    try {
                        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                    }
                    finally { if (e_88) throw e_88.error; }
                }
            }
            if (Array.isArray(_data["bccEmail"])) {
                this.bccEmail = [];
                try {
                    for (var _j = __values(_data["bccEmail"]), _k = _j.next(); !_k.done; _k = _j.next()) {
                        var item = _k.value;
                        this.bccEmail.push(item);
                    }
                }
                catch (e_89_1) { e_89 = { error: e_89_1 }; }
                finally {
                    try {
                        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                    }
                    finally { if (e_89) throw e_89.error; }
                }
            }
            if (Array.isArray(_data["replyToEmail"])) {
                this.replyToEmail = [];
                try {
                    for (var _l = __values(_data["replyToEmail"]), _m = _l.next(); !_m.done; _m = _l.next()) {
                        var item = _m.value;
                        this.replyToEmail.push(item);
                    }
                }
                catch (e_90_1) { e_90 = { error: e_90_1 }; }
                finally {
                    try {
                        if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                    }
                    finally { if (e_90) throw e_90.error; }
                }
            }
            this.importanceCode = _data["importanceCode"];
            this.sensitivityCode = _data["sensitivityCode"];
        }
    };
    EmailTemplateDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new EmailTemplateDto();
        result.init(data);
        return result;
    };
    EmailTemplateDto.prototype.toJSON = function (data) {
        var e_91, _a, e_92, _b, e_93, _c, e_94, _d;
        data = typeof data === 'object' ? data : {};
        data["emailTemplateTypeId"] = this.emailTemplateTypeId;
        data["subject"] = this.subject;
        data["body"] = this.body ? this.body.toJSON() : undefined;
        data["fromEmail"] = this.fromEmail;
        if (Array.isArray(this.toEmail)) {
            data["toEmail"] = [];
            try {
                for (var _e = __values(this.toEmail), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var item = _f.value;
                    data["toEmail"].push(item);
                }
            }
            catch (e_91_1) { e_91 = { error: e_91_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_91) throw e_91.error; }
            }
        }
        if (Array.isArray(this.ccEmail)) {
            data["ccEmail"] = [];
            try {
                for (var _g = __values(this.ccEmail), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var item = _h.value;
                    data["ccEmail"].push(item);
                }
            }
            catch (e_92_1) { e_92 = { error: e_92_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_92) throw e_92.error; }
            }
        }
        if (Array.isArray(this.bccEmail)) {
            data["bccEmail"] = [];
            try {
                for (var _j = __values(this.bccEmail), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var item = _k.value;
                    data["bccEmail"].push(item);
                }
            }
            catch (e_93_1) { e_93 = { error: e_93_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_93) throw e_93.error; }
            }
        }
        if (Array.isArray(this.replyToEmail)) {
            data["replyToEmail"] = [];
            try {
                for (var _l = __values(this.replyToEmail), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var item = _m.value;
                    data["replyToEmail"].push(item);
                }
            }
            catch (e_94_1) { e_94 = { error: e_94_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                }
                finally { if (e_94) throw e_94.error; }
            }
        }
        data["importanceCode"] = this.importanceCode;
        data["sensitivityCode"] = this.sensitivityCode;
        return data;
    };
    EmailTemplateDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new EmailTemplateDto();
        result.init(json);
        return result;
    };
    return EmailTemplateDto;
}());
export { EmailTemplateDto };
var PdfConversionRequestDto = /** @class */ (function () {
    function PdfConversionRequestDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PdfConversionRequestDto.prototype.init = function (_data) {
        var e_95, _a;
        if (_data) {
            this.saveLocation = _data["saveLocation"];
            this.headerDocument = _data["headerDocument"] ? DocumentLocation.fromJS(_data["headerDocument"]) : undefined;
            this.bodyDocument = _data["bodyDocument"] ? DocumentLocation.fromJS(_data["bodyDocument"]) : undefined;
            this.footerDocument = _data["footerDocument"] ? DocumentLocation.fromJS(_data["footerDocument"]) : undefined;
            this.singlePageFlag = _data["singlePageFlag"];
            this.appendPageFlag = _data["appendPageFlag"];
            this.appendPageLocation = _data["appendPageLocation"];
            this.tenantId = _data["tenantId"];
            this.userId = _data["userId"];
            if (Array.isArray(_data["referencedEntities"])) {
                this.referencedEntities = [];
                try {
                    for (var _b = __values(_data["referencedEntities"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.referencedEntities.push(SamplicityReferencedEntity.fromJS(item));
                    }
                }
                catch (e_95_1) { e_95 = { error: e_95_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_95) throw e_95.error; }
                }
            }
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
            this.creationTime = _data["creationTime"] ? new Date(_data["creationTime"].toString()) : undefined;
        }
    };
    PdfConversionRequestDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PdfConversionRequestDto();
        result.init(data);
        return result;
    };
    PdfConversionRequestDto.prototype.toJSON = function (data) {
        var e_96, _a;
        data = typeof data === 'object' ? data : {};
        data["saveLocation"] = this.saveLocation;
        data["headerDocument"] = this.headerDocument ? this.headerDocument.toJSON() : undefined;
        data["bodyDocument"] = this.bodyDocument ? this.bodyDocument.toJSON() : undefined;
        data["footerDocument"] = this.footerDocument ? this.footerDocument.toJSON() : undefined;
        data["singlePageFlag"] = this.singlePageFlag;
        data["appendPageFlag"] = this.appendPageFlag;
        data["appendPageLocation"] = this.appendPageLocation;
        data["tenantId"] = this.tenantId;
        data["userId"] = this.userId;
        if (Array.isArray(this.referencedEntities)) {
            data["referencedEntities"] = [];
            try {
                for (var _b = __values(this.referencedEntities), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["referencedEntities"].push(item.toJSON());
                }
            }
            catch (e_96_1) { e_96 = { error: e_96_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_96) throw e_96.error; }
            }
        }
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        data["creationTime"] = this.creationTime ? this.creationTime.toISOString() : undefined;
        return data;
    };
    PdfConversionRequestDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PdfConversionRequestDto();
        result.init(json);
        return result;
    };
    return PdfConversionRequestDto;
}());
export { PdfConversionRequestDto };
var AjaxResponseOfPdfConversionResponseDto = /** @class */ (function () {
    function AjaxResponseOfPdfConversionResponseDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AjaxResponseOfPdfConversionResponseDto.prototype.init = function (_data) {
        if (_data) {
            this.result = _data["result"] ? PdfConversionResponseDto.fromJS(_data["result"]) : undefined;
            this.targetUrl = _data["targetUrl"];
            this.success = _data["success"];
            this.error = _data["error"] ? ErrorInfo.fromJS(_data["error"]) : undefined;
            this.unAuthorizedRequest = _data["unAuthorizedRequest"];
            this.__abp = _data["__abp"];
        }
    };
    AjaxResponseOfPdfConversionResponseDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AjaxResponseOfPdfConversionResponseDto();
        result.init(data);
        return result;
    };
    AjaxResponseOfPdfConversionResponseDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["result"] = this.result ? this.result.toJSON() : undefined;
        data["targetUrl"] = this.targetUrl;
        data["success"] = this.success;
        data["error"] = this.error ? this.error.toJSON() : undefined;
        data["unAuthorizedRequest"] = this.unAuthorizedRequest;
        data["__abp"] = this.__abp;
        return data;
    };
    AjaxResponseOfPdfConversionResponseDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new AjaxResponseOfPdfConversionResponseDto();
        result.init(json);
        return result;
    };
    return AjaxResponseOfPdfConversionResponseDto;
}());
export { AjaxResponseOfPdfConversionResponseDto };
var PdfConversionResponseDto = /** @class */ (function () {
    function PdfConversionResponseDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PdfConversionResponseDto.prototype.init = function (_data) {
        var e_97, _a;
        if (_data) {
            this.pdfDocumentLocation = _data["pdfDocumentLocation"] ? DocumentLocation.fromJS(_data["pdfDocumentLocation"]) : undefined;
            this.pageNumber = _data["pageNumber"];
            if (Array.isArray(_data["referencedEntities"])) {
                this.referencedEntities = [];
                try {
                    for (var _b = __values(_data["referencedEntities"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        this.referencedEntities.push(SamplicityReferencedEntity.fromJS(item));
                    }
                }
                catch (e_97_1) { e_97 = { error: e_97_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_97) throw e_97.error; }
                }
            }
            if (_data["context"]) {
                this.context = {};
                for (var key in _data["context"]) {
                    if (_data["context"].hasOwnProperty(key))
                        this.context[key] = _data["context"][key];
                }
            }
            this.creationTime = _data["creationTime"] ? new Date(_data["creationTime"].toString()) : undefined;
            this.success = _data["success"];
            this.errorMessage = _data["errorMessage"];
        }
    };
    PdfConversionResponseDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PdfConversionResponseDto();
        result.init(data);
        return result;
    };
    PdfConversionResponseDto.prototype.toJSON = function (data) {
        var e_98, _a;
        data = typeof data === 'object' ? data : {};
        data["pdfDocumentLocation"] = this.pdfDocumentLocation ? this.pdfDocumentLocation.toJSON() : undefined;
        data["pageNumber"] = this.pageNumber;
        if (Array.isArray(this.referencedEntities)) {
            data["referencedEntities"] = [];
            try {
                for (var _b = __values(this.referencedEntities), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    data["referencedEntities"].push(item.toJSON());
                }
            }
            catch (e_98_1) { e_98 = { error: e_98_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_98) throw e_98.error; }
            }
        }
        if (this.context) {
            data["context"] = {};
            for (var key in this.context) {
                if (this.context.hasOwnProperty(key))
                    data["context"][key] = this.context[key];
            }
        }
        data["creationTime"] = this.creationTime ? this.creationTime.toISOString() : undefined;
        data["success"] = this.success;
        data["errorMessage"] = this.errorMessage;
        return data;
    };
    PdfConversionResponseDto.prototype.clone = function () {
        var json = this.toJSON();
        var result = new PdfConversionResponseDto();
        result.init(json);
        return result;
    };
    return PdfConversionResponseDto;
}());
export { PdfConversionResponseDto };
export var LocalizedValueLanguage;
(function (LocalizedValueLanguage) {
    LocalizedValueLanguage[LocalizedValueLanguage["_0"] = 0] = "_0";
    LocalizedValueLanguage[LocalizedValueLanguage["_1"] = 1] = "_1";
})(LocalizedValueLanguage || (LocalizedValueLanguage = {}));
export var DocumentLocationStorageLocation;
(function (DocumentLocationStorageLocation) {
    DocumentLocationStorageLocation[DocumentLocationStorageLocation["_0"] = 0] = "_0";
    DocumentLocationStorageLocation[DocumentLocationStorageLocation["_1"] = 1] = "_1";
    DocumentLocationStorageLocation[DocumentLocationStorageLocation["_2"] = 2] = "_2";
    DocumentLocationStorageLocation[DocumentLocationStorageLocation["_3"] = 3] = "_3";
    DocumentLocationStorageLocation[DocumentLocationStorageLocation["_4"] = 4] = "_4";
    DocumentLocationStorageLocation[DocumentLocationStorageLocation["_5"] = 5] = "_5";
})(DocumentLocationStorageLocation || (DocumentLocationStorageLocation = {}));
export var DocumentGenerationOptionsFormat;
(function (DocumentGenerationOptionsFormat) {
    DocumentGenerationOptionsFormat[DocumentGenerationOptionsFormat["_0"] = 0] = "_0";
    DocumentGenerationOptionsFormat[DocumentGenerationOptionsFormat["_1"] = 1] = "_1";
    DocumentGenerationOptionsFormat[DocumentGenerationOptionsFormat["_2"] = 2] = "_2";
})(DocumentGenerationOptionsFormat || (DocumentGenerationOptionsFormat = {}));
export var DocumentGenerationOptionsPersistence;
(function (DocumentGenerationOptionsPersistence) {
    DocumentGenerationOptionsPersistence[DocumentGenerationOptionsPersistence["_0"] = 0] = "_0";
    DocumentGenerationOptionsPersistence[DocumentGenerationOptionsPersistence["_1"] = 1] = "_1";
    DocumentGenerationOptionsPersistence[DocumentGenerationOptionsPersistence["_2"] = 2] = "_2";
})(DocumentGenerationOptionsPersistence || (DocumentGenerationOptionsPersistence = {}));
export var DocumentGenerationOptionsDocumentRecordOptions;
(function (DocumentGenerationOptionsDocumentRecordOptions) {
    DocumentGenerationOptionsDocumentRecordOptions[DocumentGenerationOptionsDocumentRecordOptions["_0"] = 0] = "_0";
    DocumentGenerationOptionsDocumentRecordOptions[DocumentGenerationOptionsDocumentRecordOptions["_1"] = 1] = "_1";
    DocumentGenerationOptionsDocumentRecordOptions[DocumentGenerationOptionsDocumentRecordOptions["_2"] = 2] = "_2";
})(DocumentGenerationOptionsDocumentRecordOptions || (DocumentGenerationOptionsDocumentRecordOptions = {}));
export var DocumentGenerationOptionsCommunicationRecordOptions;
(function (DocumentGenerationOptionsCommunicationRecordOptions) {
    DocumentGenerationOptionsCommunicationRecordOptions[DocumentGenerationOptionsCommunicationRecordOptions["_0"] = 0] = "_0";
    DocumentGenerationOptionsCommunicationRecordOptions[DocumentGenerationOptionsCommunicationRecordOptions["_1"] = 1] = "_1";
    DocumentGenerationOptionsCommunicationRecordOptions[DocumentGenerationOptionsCommunicationRecordOptions["_2"] = 2] = "_2";
})(DocumentGenerationOptionsCommunicationRecordOptions || (DocumentGenerationOptionsCommunicationRecordOptions = {}));
export var DocumentFragmentOutputFormat;
(function (DocumentFragmentOutputFormat) {
    DocumentFragmentOutputFormat[DocumentFragmentOutputFormat["_0"] = 0] = "_0";
    DocumentFragmentOutputFormat[DocumentFragmentOutputFormat["_1"] = 1] = "_1";
    DocumentFragmentOutputFormat[DocumentFragmentOutputFormat["_2"] = 2] = "_2";
})(DocumentFragmentOutputFormat || (DocumentFragmentOutputFormat = {}));
export var DocumentFragmentTemplateEngine;
(function (DocumentFragmentTemplateEngine) {
    DocumentFragmentTemplateEngine[DocumentFragmentTemplateEngine["_0"] = 0] = "_0";
    DocumentFragmentTemplateEngine[DocumentFragmentTemplateEngine["_1"] = 1] = "_1";
})(DocumentFragmentTemplateEngine || (DocumentFragmentTemplateEngine = {}));
export var OutboundCommunicationOptionsCommunicationRecordOptions;
(function (OutboundCommunicationOptionsCommunicationRecordOptions) {
    OutboundCommunicationOptionsCommunicationRecordOptions[OutboundCommunicationOptionsCommunicationRecordOptions["_0"] = 0] = "_0";
    OutboundCommunicationOptionsCommunicationRecordOptions[OutboundCommunicationOptionsCommunicationRecordOptions["_1"] = 1] = "_1";
    OutboundCommunicationOptionsCommunicationRecordOptions[OutboundCommunicationOptionsCommunicationRecordOptions["_2"] = 2] = "_2";
})(OutboundCommunicationOptionsCommunicationRecordOptions || (OutboundCommunicationOptionsCommunicationRecordOptions = {}));
export var PdfConversionRequestDtoSaveLocation;
(function (PdfConversionRequestDtoSaveLocation) {
    PdfConversionRequestDtoSaveLocation[PdfConversionRequestDtoSaveLocation["_0"] = 0] = "_0";
    PdfConversionRequestDtoSaveLocation[PdfConversionRequestDtoSaveLocation["_1"] = 1] = "_1";
    PdfConversionRequestDtoSaveLocation[PdfConversionRequestDtoSaveLocation["_2"] = 2] = "_2";
})(PdfConversionRequestDtoSaveLocation || (PdfConversionRequestDtoSaveLocation = {}));
var SwaggerException = /** @class */ (function (_super) {
    __extends(SwaggerException, _super);
    function SwaggerException(message, status, response, headers, result) {
        var _this = _super.call(this) || this;
        _this.isSwaggerException = true;
        _this.message = message;
        _this.status = status;
        _this.response = response;
        _this.headers = headers;
        _this.result = result;
        return _this;
    }
    SwaggerException.isSwaggerException = function (obj) {
        return obj.isSwaggerException === true;
    };
    return SwaggerException;
}(Error));
export { SwaggerException };
function throwException(message, status, response, headers, result) {
    if (result !== null && result !== undefined)
        return Observable.throw(result);
    else
        return Observable.throw(new SwaggerException(message, status, response, headers, null));
}
function blobToText(blob) {
    return new Observable(function (observer) {
        if (!blob) {
            observer.next("");
            observer.complete();
        }
        else {
            var reader = new FileReader();
            reader.onload = function (event) {
                observer.next(event.target.result);
                observer.complete();
            };
            reader.readAsText(blob);
        }
    });
}
//# sourceMappingURL=communication.js.map